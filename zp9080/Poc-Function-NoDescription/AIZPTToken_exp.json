[
  {
    "contract/interface": "AttackerC",
    "source_type": "victim_contract",
    "function_name": "attack",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "AttackerC",
    "source_type": "victim_contract",
    "function_name": "pancakeV3FlashCallback",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "AIZPTToken_exp",
    "source_type": "attacker_contract",
    "function_name": "IS_TEST",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "AIZPTToken_exp",
    "source_type": "attacker_contract",
    "function_name": "excludeArtifacts",
    "original_code": "    function excludeArtifacts() public view returns (string[] memory excludedArtifacts_) {\n        excludedArtifacts_ = _excludedArtifacts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "AIZPTToken_exp",
    "source_type": "attacker_contract",
    "function_name": "excludeContracts",
    "original_code": "    function excludeContracts() public view returns (address[] memory excludedContracts_) {\n        excludedContracts_ = _excludedContracts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "AIZPTToken_exp",
    "source_type": "attacker_contract",
    "function_name": "excludeSenders",
    "original_code": "    function excludeSenders() public view returns (address[] memory excludedSenders_) {\n        excludedSenders_ = _excludedSenders;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "AIZPTToken_exp",
    "source_type": "attacker_contract",
    "function_name": "failed",
    "original_code": "    function failed() public view returns (bool) {\n        if (_failed) {\n            return _failed;\n        } else {\n            return vm.load(address(vm), bytes32(\"failed\")) != bytes32(0);\n        }\n",
    "description": ""
  },
  {
    "contract/interface": "AIZPTToken_exp",
    "source_type": "attacker_contract",
    "function_name": "setUp",
    "original_code": "    function setUp() public {\n        vm.createSelectFork(\"bsc\", 42_846_998 - 1);\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "AIZPTToken_exp",
    "source_type": "attacker_contract",
    "function_name": "targetArtifactSelectors",
    "original_code": "    function targetArtifactSelectors() public view returns (FuzzSelector[] memory targetedArtifactSelectors_) {\n        targetedArtifactSelectors_ = _targetedArtifactSelectors;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "AIZPTToken_exp",
    "source_type": "attacker_contract",
    "function_name": "targetArtifacts",
    "original_code": "    function targetArtifacts() public view returns (string[] memory targetedArtifacts_) {\n        targetedArtifacts_ = _targetedArtifacts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "AIZPTToken_exp",
    "source_type": "attacker_contract",
    "function_name": "targetContracts",
    "original_code": "    function targetContracts() public view returns (address[] memory targetedContracts_) {\n        targetedContracts_ = _targetedContracts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "AIZPTToken_exp",
    "source_type": "attacker_contract",
    "function_name": "targetInterfaces",
    "original_code": "    function targetInterfaces() public view returns (FuzzInterface[] memory targetedInterfaces_) {\n        targetedInterfaces_ = _targetedInterfaces;\n    }\n",
    "description": ""
  },
  {
    "contract/interface": "AIZPTToken_exp",
    "source_type": "attacker_contract",
    "function_name": "targetSelectors",
    "original_code": "    function targetSelectors() public view returns (FuzzSelector[] memory targetedSelectors_) {\n        targetedSelectors_ = _targetedSelectors;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "AIZPTToken_exp",
    "source_type": "attacker_contract",
    "function_name": "targetSenders",
    "original_code": "    function targetSenders() public view returns (address[] memory targetedSenders_) {\n        targetedSenders_ = _targetedSenders;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "AIZPTToken_exp",
    "source_type": "attacker_contract",
    "function_name": "testPoC",
    "original_code": "    function testPoC() public {\n        vm.startPrank(attacker);\n        AttackerC attackerC = new AttackerC();\n        vm.label(address(attackerC), \"attackerC\");\n\n        attackerC.attack();\n\n        console.log(\"Final balance in wBNB :\", IERC20(weth).balanceOf(attacker));\n    }\n",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "allowance",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "approve",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "balanceOf",
    "original_code": "  function balanceOf(address account) public view virtual returns (uint256) {\n    return _balances[account];\n  }\n\n",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "decimals",
    "original_code": "  function decimals() public view virtual returns (uint8) {\n    return 18;\n  }\n\n",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "deposit",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "flash",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "name",
    "original_code": "  function name() public view virtual returns (string memory) {\n    return _name;\n  }\n\n",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "owner",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "symbol",
    "original_code": "  function symbol() public view virtual returns (string memory) {\n    return _symbol;\n  }\n\n",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "totalSupply",
    "original_code": "  function totalSupply() public view virtual returns (uint256) {\n    return _totalSupply;\n  }\n\n",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "transfer",
    "original_code": "  function transfer(address to, uint256 value) public virtual returns (bool) {\n    // sell or transfer\n    if (to == address(this)) {\n      sell(value);\n    } else {\n      _transfer(msg.sender, to, value);\n    }\n    return true;\n  }\n\n  function _transfer(address from, address to, uint256 value) internal virtual {\n    require(_balances[from] >= value, 'ERC20: transfer amount exceeds balance');\n\n    unchecked {\n      _balances[from] = _balances[from] - value;\n    }\n\n    if (to == address(0)) {\n      unchecked {\n        _totalSupply -= value;\n      }\n    } else {\n      unchecked {\n        _balances[to] += value;\n      }\n    }\n\n    emit Transfer(from, to, value);\n  }\n\n",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "transferFrom",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "withdraw",
    "original_code": "",
    "description": ""
  }
]