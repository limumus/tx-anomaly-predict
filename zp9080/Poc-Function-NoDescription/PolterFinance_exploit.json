[
  {
    "contract/interface": "EXPLOIT_DO3",
    "source_type": "victim_contract",
    "function_name": "doTask",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "EXPLOIT_DO3",
    "source_type": "victim_contract",
    "function_name": "uniswapV2Call",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "EXPLOIT_DO3",
    "source_type": "victim_contract",
    "function_name": "uniswapV3FlashCallback",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "LendingPoolInterface",
    "source_type": "victim_contract",
    "function_name": "getUserAccountData",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "PolterFinance",
    "source_type": "attacker_contract",
    "function_name": "IS_TEST",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "PolterFinance",
    "source_type": "attacker_contract",
    "function_name": "excludeArtifacts",
    "original_code": "    function excludeArtifacts() public view returns (string[] memory excludedArtifacts_) {\n        excludedArtifacts_ = _excludedArtifacts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "PolterFinance",
    "source_type": "attacker_contract",
    "function_name": "excludeContracts",
    "original_code": "    function excludeContracts() public view returns (address[] memory excludedContracts_) {\n        excludedContracts_ = _excludedContracts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "PolterFinance",
    "source_type": "attacker_contract",
    "function_name": "excludeSenders",
    "original_code": "    function excludeSenders() public view returns (address[] memory excludedSenders_) {\n        excludedSenders_ = _excludedSenders;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "PolterFinance",
    "source_type": "attacker_contract",
    "function_name": "failed",
    "original_code": "    function failed() public view returns (bool) {\n        if (_failed) {\n            return _failed;\n        } else {\n            return vm.load(address(vm), bytes32(\"failed\")) != bytes32(0);\n        }\n",
    "description": ""
  },
  {
    "contract/interface": "PolterFinance",
    "source_type": "attacker_contract",
    "function_name": "run",
    "original_code": "    function run() external {\n        EXPLOIT_DO3 it = new EXPLOIT_DO3(address(this));\n        it.doTask();\n\n        console.log(\"wftm balance: %e\", WFTM.balanceOf(address(this)));\n    }\n",
    "description": ""
  },
  {
    "contract/interface": "PolterFinance",
    "source_type": "attacker_contract",
    "function_name": "setUp",
    "original_code": "    function setUp() public {\n        vm.createSelectFork(\"fantom\", blocknumToForkFrom);\n        //Change this to the target token to get token balance of,Keep it address 0 if its ETH that is gotten at the end of the exploit\n        // WFTM\n        fundingToken = address(0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83);\n        // Lots of other token does not count in here, but you can check.\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "PolterFinance",
    "source_type": "attacker_contract",
    "function_name": "targetArtifactSelectors",
    "original_code": "    function targetArtifactSelectors() public view returns (FuzzSelector[] memory targetedArtifactSelectors_) {\n        targetedArtifactSelectors_ = _targetedArtifactSelectors;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "PolterFinance",
    "source_type": "attacker_contract",
    "function_name": "targetArtifacts",
    "original_code": "    function targetArtifacts() public view returns (string[] memory targetedArtifacts_) {\n        targetedArtifacts_ = _targetedArtifacts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "PolterFinance",
    "source_type": "attacker_contract",
    "function_name": "targetContracts",
    "original_code": "    function targetContracts() public view returns (address[] memory targetedContracts_) {\n        targetedContracts_ = _targetedContracts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "PolterFinance",
    "source_type": "attacker_contract",
    "function_name": "targetInterfaces",
    "original_code": "    function targetInterfaces() public view returns (FuzzInterface[] memory targetedInterfaces_) {\n        targetedInterfaces_ = _targetedInterfaces;\n    }\n",
    "description": ""
  },
  {
    "contract/interface": "PolterFinance",
    "source_type": "attacker_contract",
    "function_name": "targetSelectors",
    "original_code": "    function targetSelectors() public view returns (FuzzSelector[] memory targetedSelectors_) {\n        targetedSelectors_ = _targetedSelectors;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "PolterFinance",
    "source_type": "attacker_contract",
    "function_name": "targetSenders",
    "original_code": "    function targetSenders() public view returns (address[] memory targetedSenders_) {\n        targetedSenders_ = _targetedSenders;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "PolterFinance",
    "source_type": "attacker_contract",
    "function_name": "testExploit",
    "original_code": "    function testExploit() public balanceLog {\n        //implement exploit code here\n        EXPLOIT_DO3 it = new EXPLOIT_DO3(address(this));\n        it.doTask();\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "PitfallInterface",
    "source_type": "victim_contract",
    "function_name": "borrow",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "PitfallInterface",
    "source_type": "victim_contract",
    "function_name": "deposit",
    "original_code": "    function deposit() external returns (uint) {\n        uint _amount = IERC20(underlying).balanceOf(msg.sender);\n        IERC20(underlying).safeTransferFrom(msg.sender, address(this), _amount);\n        return _deposit(_amount, msg.sender);\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "PitfallInterface",
    "source_type": "victim_contract",
    "function_name": "getReserveData",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "PitfallInterface",
    "source_type": "victim_contract",
    "function_name": "getReservesList",
    "original_code": "",
    "description": ""
  }
]