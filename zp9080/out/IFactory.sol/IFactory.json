{"abi":[{"type":"function","name":"configMaster","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"createPool","inputs":[{"name":"tokenA","type":"address","internalType":"address"},{"name":"tokenB","type":"address","internalType":"address"},{"name":"swapFeeUnits","type":"uint24","internalType":"uint24"}],"outputs":[{"name":"pool","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"disableWhitelist","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"enableSwapFee","inputs":[{"name":"swapFeeUnits","type":"uint24","internalType":"uint24"},{"name":"tickDistance","type":"int24","internalType":"int24"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"enableWhitelist","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"feeAmountTickDistance","inputs":[{"name":"swapFeeUnits","type":"uint24","internalType":"uint24"}],"outputs":[{"name":"","type":"int24","internalType":"int24"}],"stateMutability":"view"},{"type":"function","name":"feeConfiguration","inputs":[],"outputs":[{"name":"_feeTo","type":"address","internalType":"address"},{"name":"_governmentFeeUnits","type":"uint24","internalType":"uint24"}],"stateMutability":"view"},{"type":"function","name":"getPool","inputs":[{"name":"tokenA","type":"address","internalType":"address"},{"name":"tokenB","type":"address","internalType":"address"},{"name":"swapFeeUnits","type":"uint24","internalType":"uint24"}],"outputs":[{"name":"pool","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getWhitelistedNFTManagers","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"isWhitelistedNFTManager","inputs":[{"name":"sender","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"parameters","inputs":[],"outputs":[{"name":"factory","type":"address","internalType":"address"},{"name":"poolOracle","type":"address","internalType":"address"},{"name":"token0","type":"address","internalType":"address"},{"name":"token1","type":"address","internalType":"address"},{"name":"swapFeeUnits","type":"uint24","internalType":"uint24"},{"name":"tickDistance","type":"int24","internalType":"int24"}],"stateMutability":"view"},{"type":"function","name":"poolInitHash","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"poolOracle","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"updateConfigMaster","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateFeeConfiguration","inputs":[{"name":"feeTo","type":"address","internalType":"address"},{"name":"governmentFeeUnits","type":"uint24","internalType":"uint24"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateVestingPeriod","inputs":[{"name":"","type":"uint32","internalType":"uint32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"vestingPeriod","inputs":[],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"whitelistDisabled","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"event","name":"ConfigMasterUpdated","inputs":[{"name":"oldConfigMaster","type":"address","indexed":false,"internalType":"address"},{"name":"newConfigMaster","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"FeeConfigurationUpdated","inputs":[{"name":"feeTo","type":"address","indexed":false,"internalType":"address"},{"name":"governmentFeeUnits","type":"uint24","indexed":false,"internalType":"uint24"}],"anonymous":false},{"type":"event","name":"PoolCreated","inputs":[{"name":"token0","type":"address","indexed":true,"internalType":"address"},{"name":"token1","type":"address","indexed":true,"internalType":"address"},{"name":"swapFeeUnits","type":"uint24","indexed":true,"internalType":"uint24"},{"name":"tickDistance","type":"int24","indexed":false,"internalType":"int24"},{"name":"pool","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"SwapFeeEnabled","inputs":[{"name":"swapFeeUnits","type":"uint24","indexed":true,"internalType":"uint24"},{"name":"tickDistance","type":"int24","indexed":true,"internalType":"int24"}],"anonymous":false},{"type":"event","name":"VestingPeriodUpdated","inputs":[{"name":"vestingPeriod","type":"uint32","indexed":false,"internalType":"uint32"}],"anonymous":false},{"type":"event","name":"WhitelistDisabled","inputs":[],"anonymous":false},{"type":"event","name":"WhitelistEnabled","inputs":[],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"configMaster()":"fc389fce","createPool(address,address,uint24)":"a1671295","disableWhitelist()":"d6b0f484","enableSwapFee(uint24,int24)":"b03d421e","enableWhitelist()":"cdfb2b4e","feeAmountTickDistance(uint24)":"6cc85293","feeConfiguration()":"98c47e8c","getPool(address,address,uint24)":"1698ee82","getWhitelistedNFTManagers()":"55566962","isWhitelistedNFTManager(address)":"4020f01c","parameters()":"89035730","poolInitHash()":"d04b86b0","poolOracle()":"6efff33b","updateConfigMaster(address)":"376bc719","updateFeeConfiguration(address,uint24)":"c3bf128b","updateVestingPeriod(uint32)":"7546c1a5","vestingPeriod()":"7313ee5a","whitelistDisabled()":"1c8e8568"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldConfigMaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newConfigMaster\",\"type\":\"address\"}],\"name\":\"ConfigMasterUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"governmentFeeUnits\",\"type\":\"uint24\"}],\"name\":\"FeeConfigurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"swapFeeUnits\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickDistance\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"swapFeeUnits\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickDistance\",\"type\":\"int24\"}],\"name\":\"SwapFeeEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"vestingPeriod\",\"type\":\"uint32\"}],\"name\":\"VestingPeriodUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"WhitelistDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"WhitelistEnabled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"configMaster\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"swapFeeUnits\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"swapFeeUnits\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickDistance\",\"type\":\"int24\"}],\"name\":\"enableSwapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"swapFeeUnits\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickDistance\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeConfiguration\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"_governmentFeeUnits\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"swapFeeUnits\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWhitelistedNFTManagers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"isWhitelistedNFTManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parameters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolOracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"swapFeeUnits\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickDistance\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolInitHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"updateConfigMaster\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeTo\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"governmentFeeUnits\",\"type\":\"uint24\"}],\"name\":\"updateFeeConfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"updateVestingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingPeriod\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whitelistDisabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ConfigMasterUpdated(address,address)\":{\"params\":{\"newConfigMaster\":\"configMaster after the update\",\"oldConfigMaster\":\"configMaster before the update\"}},\"FeeConfigurationUpdated(address,uint24)\":{\"params\":{\"feeTo\":\"Recipient of government fees\",\"governmentFeeUnits\":\"Fee amount, in fee units, to be collected out of the fee charged for a pool swap\"}},\"PoolCreated(address,address,uint24,int24,address)\":{\"params\":{\"pool\":\"The address of the created pool\",\"swapFeeUnits\":\"Fee to be collected upon every swap in the pool, in fee units\",\"tickDistance\":\"Minimum number of ticks between initialized ticks\",\"token0\":\"First pool token by address sort order\",\"token1\":\"Second pool token by address sort order\"}},\"SwapFeeEnabled(uint24,int24)\":{\"params\":{\"swapFeeUnits\":\"Fee to be collected upon every swap in the pool, in fee units\",\"tickDistance\":\"Minimum number of ticks between initialized ticks for pools created with the given fee\"}},\"VestingPeriodUpdated(uint32)\":{\"params\":{\"vestingPeriod\":\"The maximum time duration for which LP fees are proportionally burnt upon LP removals\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"Token order does not matter. tickDistance is determined from the fee. Call will revert under any of these conditions:     1) pool already exists     2) invalid swap fee     3) invalid token arguments\",\"params\":{\"swapFeeUnits\":\"Desired swap fee for the pool, in fee units\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"disableWhitelist()\":{\"details\":\"Only configMaster is able to perform the update\"},\"enableSwapFee(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"swapFeeUnits\":\"The fee amount to enable, in fee units\",\"tickDistance\":\"The distance between ticks to be enforced for all pools created with the given fee amount\"}},\"enableWhitelist()\":{\"details\":\"Only configMaster is able to perform the update\"},\"feeAmountTickDistance(uint24)\":{\"details\":\"Once added, cannot be updated or removed.\",\"params\":{\"swapFeeUnits\":\"Swap fee, in fee units.\"},\"returns\":{\"_0\":\"The tick distance. Returns 0 if fee has not been added.\"}},\"getPool(address,address,uint24)\":{\"details\":\"Token order does not matter\",\"params\":{\"swapFeeUnits\":\"Fee to be collected upon every swap in the pool, in fee units\",\"tokenA\":\"Contract address of either token0 or token1\",\"tokenB\":\"Contract address of the other token\"},\"returns\":{\"pool\":\"The pool address. Returns null address if it does not exist\"}},\"isWhitelistedNFTManager(address)\":{\"params\":{\"sender\":\"address to be checked\"},\"returns\":{\"_0\":\"true if sender is a whistelisted NFT manager, false otherwise\"}},\"parameters()\":{\"details\":\"Called by the pool constructor to fetch the parameters of the pool\",\"returns\":{\"factory\":\"The factory address\",\"poolOracle\":\"The pool oracle for twap\",\"swapFeeUnits\":\"Fee to be collected upon every swap in the pool, in fee units\",\"tickDistance\":\"Minimum number of ticks between initialized ticks\",\"token0\":\"First pool token by address sort order\",\"token1\":\"Second pool token by address sort order\"}},\"updateConfigMaster(address)\":{\"details\":\"Must be called by the current configMaster\"},\"updateFeeConfiguration(address,uint24)\":{\"details\":\"Only configMaster is able to perform the update\",\"params\":{\"feeTo\":\"Address to receive government fees collected from pools\",\"governmentFeeUnits\":\"Fee amount, in fee units, to be collected out of the fee charged for a pool swap\"}},\"updateVestingPeriod(uint32)\":{\"details\":\"Must be called by the current configMaster\"}},\"title\":\"KyberSwap v2 factory\",\"version\":1},\"userdoc\":{\"events\":{\"ConfigMasterUpdated(address,address)\":{\"notice\":\"Emitted when configMaster changes\"},\"FeeConfigurationUpdated(address,uint24)\":{\"notice\":\"Emitted when fee configuration changes\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"},\"SwapFeeEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee is enabled for pool creation via the factory\"},\"VestingPeriodUpdated(uint32)\":{\"notice\":\"Emitted when vesting period changes\"},\"WhitelistDisabled()\":{\"notice\":\"Emitted when whitelist feature is disabled\"},\"WhitelistEnabled()\":{\"notice\":\"Emitted when whitelist feature is enabled\"}},\"kind\":\"user\",\"methods\":{\"configMaster()\":{\"notice\":\"Returns the address which can update the fee configuration\"},\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"disableWhitelist()\":{\"notice\":\"Disables the whitelisting feature\"},\"enableSwapFee(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickDistance\"},\"enableWhitelist()\":{\"notice\":\"Enables the whitelisting feature\"},\"feeAmountTickDistance(uint24)\":{\"notice\":\"Returns the tick distance for a specified fee.\"},\"feeConfiguration()\":{\"notice\":\"Fetches the recipient of government fees and current government fee charged in fee units\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a swap fee\"},\"getWhitelistedNFTManagers()\":{\"notice\":\"If the whitelisting feature is turned on, only whitelisted NFT manager(s) are allowed to mint liquidity tokens\"},\"isWhitelistedNFTManager(address)\":{\"notice\":\"Checks if sender is a whitelisted NFT manager If the whitelisting feature is turned on, only whitelisted NFT manager(s) are allowed to mint liquidity tokens\"},\"parameters()\":{\"notice\":\"Fetch parameters to be used for pool creation\"},\"poolInitHash()\":{\"notice\":\"Returns the keccak256 hash of the Pool creation code This is used for pre-computation of pool addresses\"},\"poolOracle()\":{\"notice\":\"Returns the pool oracle contract for twap\"},\"updateConfigMaster(address)\":{\"notice\":\"Updates the address which can update the fee configuration\"},\"updateFeeConfiguration(address,uint24)\":{\"notice\":\"Updates the address receiving government fees and fee quantity\"},\"updateVestingPeriod(uint32)\":{\"notice\":\"Updates the vesting period\"},\"vestingPeriod()\":{\"notice\":\"Returns the maximum time duration for which LP fees are proportionally burnt upon LP removals\"},\"whitelistDisabled()\":{\"notice\":\"Returns the status of whitelisting feature of NFT managers If true, anyone can mint liquidity tokens Otherwise, only whitelisted NFT manager(s) are allowed to mint liquidity tokens\"}},\"notice\":\"Deploys KyberSwap v2 pools and manages control over government fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/2023-11/KyberSwap/interfaces/IFactory.sol\":\"IFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/test/2023-11/KyberSwap/interfaces/IFactory.sol\":{\"keccak256\":\"0xcac6d8a9e2c090cf045ed57b766ffc6ac8e42b2db408965410933db8848ad20a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99dae6dd4735009903cfccf29f84756aedd068cb7e82489a57ee67a14c684a91\",\"dweb:/ipfs/QmXe11V51vHnHXnbxEKEXt2CjDUFhJsH4wEok72xifBaa1\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"oldConfigMaster","type":"address","indexed":false},{"internalType":"address","name":"newConfigMaster","type":"address","indexed":false}],"type":"event","name":"ConfigMasterUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"feeTo","type":"address","indexed":false},{"internalType":"uint24","name":"governmentFeeUnits","type":"uint24","indexed":false}],"type":"event","name":"FeeConfigurationUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"token0","type":"address","indexed":true},{"internalType":"address","name":"token1","type":"address","indexed":true},{"internalType":"uint24","name":"swapFeeUnits","type":"uint24","indexed":true},{"internalType":"int24","name":"tickDistance","type":"int24","indexed":false},{"internalType":"address","name":"pool","type":"address","indexed":false}],"type":"event","name":"PoolCreated","anonymous":false},{"inputs":[{"internalType":"uint24","name":"swapFeeUnits","type":"uint24","indexed":true},{"internalType":"int24","name":"tickDistance","type":"int24","indexed":true}],"type":"event","name":"SwapFeeEnabled","anonymous":false},{"inputs":[{"internalType":"uint32","name":"vestingPeriod","type":"uint32","indexed":false}],"type":"event","name":"VestingPeriodUpdated","anonymous":false},{"inputs":[],"type":"event","name":"WhitelistDisabled","anonymous":false},{"inputs":[],"type":"event","name":"WhitelistEnabled","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"configMaster","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"swapFeeUnits","type":"uint24"}],"stateMutability":"nonpayable","type":"function","name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"disableWhitelist"},{"inputs":[{"internalType":"uint24","name":"swapFeeUnits","type":"uint24"},{"internalType":"int24","name":"tickDistance","type":"int24"}],"stateMutability":"nonpayable","type":"function","name":"enableSwapFee"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"enableWhitelist"},{"inputs":[{"internalType":"uint24","name":"swapFeeUnits","type":"uint24"}],"stateMutability":"view","type":"function","name":"feeAmountTickDistance","outputs":[{"internalType":"int24","name":"","type":"int24"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"feeConfiguration","outputs":[{"internalType":"address","name":"_feeTo","type":"address"},{"internalType":"uint24","name":"_governmentFeeUnits","type":"uint24"}]},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"swapFeeUnits","type":"uint24"}],"stateMutability":"view","type":"function","name":"getPool","outputs":[{"internalType":"address","name":"pool","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getWhitelistedNFTManagers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"stateMutability":"view","type":"function","name":"isWhitelistedNFTManager","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"parameters","outputs":[{"internalType":"address","name":"factory","type":"address"},{"internalType":"address","name":"poolOracle","type":"address"},{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint24","name":"swapFeeUnits","type":"uint24"},{"internalType":"int24","name":"tickDistance","type":"int24"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"poolInitHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"poolOracle","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"updateConfigMaster"},{"inputs":[{"internalType":"address","name":"feeTo","type":"address"},{"internalType":"uint24","name":"governmentFeeUnits","type":"uint24"}],"stateMutability":"nonpayable","type":"function","name":"updateFeeConfiguration"},{"inputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"nonpayable","type":"function","name":"updateVestingPeriod"},{"inputs":[],"stateMutability":"view","type":"function","name":"vestingPeriod","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"whitelistDisabled","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"createPool(address,address,uint24)":{"details":"Token order does not matter. tickDistance is determined from the fee. Call will revert under any of these conditions:     1) pool already exists     2) invalid swap fee     3) invalid token arguments","params":{"swapFeeUnits":"Desired swap fee for the pool, in fee units","tokenA":"One of the two tokens in the desired pool","tokenB":"The other of the two tokens in the desired pool"},"returns":{"pool":"The address of the newly created pool"}},"disableWhitelist()":{"details":"Only configMaster is able to perform the update"},"enableSwapFee(uint24,int24)":{"details":"Fee amounts may never be removed once enabled","params":{"swapFeeUnits":"The fee amount to enable, in fee units","tickDistance":"The distance between ticks to be enforced for all pools created with the given fee amount"}},"enableWhitelist()":{"details":"Only configMaster is able to perform the update"},"feeAmountTickDistance(uint24)":{"details":"Once added, cannot be updated or removed.","params":{"swapFeeUnits":"Swap fee, in fee units."},"returns":{"_0":"The tick distance. Returns 0 if fee has not been added."}},"getPool(address,address,uint24)":{"details":"Token order does not matter","params":{"swapFeeUnits":"Fee to be collected upon every swap in the pool, in fee units","tokenA":"Contract address of either token0 or token1","tokenB":"Contract address of the other token"},"returns":{"pool":"The pool address. Returns null address if it does not exist"}},"isWhitelistedNFTManager(address)":{"params":{"sender":"address to be checked"},"returns":{"_0":"true if sender is a whistelisted NFT manager, false otherwise"}},"parameters()":{"details":"Called by the pool constructor to fetch the parameters of the pool","returns":{"factory":"The factory address","poolOracle":"The pool oracle for twap","swapFeeUnits":"Fee to be collected upon every swap in the pool, in fee units","tickDistance":"Minimum number of ticks between initialized ticks","token0":"First pool token by address sort order","token1":"Second pool token by address sort order"}},"updateConfigMaster(address)":{"details":"Must be called by the current configMaster"},"updateFeeConfiguration(address,uint24)":{"details":"Only configMaster is able to perform the update","params":{"feeTo":"Address to receive government fees collected from pools","governmentFeeUnits":"Fee amount, in fee units, to be collected out of the fee charged for a pool swap"}},"updateVestingPeriod(uint32)":{"details":"Must be called by the current configMaster"}},"version":1},"userdoc":{"kind":"user","methods":{"configMaster()":{"notice":"Returns the address which can update the fee configuration"},"createPool(address,address,uint24)":{"notice":"Creates a pool for the given two tokens and fee"},"disableWhitelist()":{"notice":"Disables the whitelisting feature"},"enableSwapFee(uint24,int24)":{"notice":"Enables a fee amount with the given tickDistance"},"enableWhitelist()":{"notice":"Enables the whitelisting feature"},"feeAmountTickDistance(uint24)":{"notice":"Returns the tick distance for a specified fee."},"feeConfiguration()":{"notice":"Fetches the recipient of government fees and current government fee charged in fee units"},"getPool(address,address,uint24)":{"notice":"Returns the pool address for a given pair of tokens and a swap fee"},"getWhitelistedNFTManagers()":{"notice":"If the whitelisting feature is turned on, only whitelisted NFT manager(s) are allowed to mint liquidity tokens"},"isWhitelistedNFTManager(address)":{"notice":"Checks if sender is a whitelisted NFT manager If the whitelisting feature is turned on, only whitelisted NFT manager(s) are allowed to mint liquidity tokens"},"parameters()":{"notice":"Fetch parameters to be used for pool creation"},"poolInitHash()":{"notice":"Returns the keccak256 hash of the Pool creation code This is used for pre-computation of pool addresses"},"poolOracle()":{"notice":"Returns the pool oracle contract for twap"},"updateConfigMaster(address)":{"notice":"Updates the address which can update the fee configuration"},"updateFeeConfiguration(address,uint24)":{"notice":"Updates the address receiving government fees and fee quantity"},"updateVestingPeriod(uint32)":{"notice":"Updates the vesting period"},"vestingPeriod()":{"notice":"Returns the maximum time duration for which LP fees are proportionally burnt upon LP removals"},"whitelistDisabled()":{"notice":"Returns the status of whitelisting feature of NFT managers If true, anyone can mint liquidity tokens Otherwise, only whitelisted NFT manager(s) are allowed to mint liquidity tokens"}},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/test/2023-11/KyberSwap/interfaces/IFactory.sol":"IFactory"},"evmVersion":"cancun","libraries":{}},"sources":{"src/test/2023-11/KyberSwap/interfaces/IFactory.sol":{"keccak256":"0xcac6d8a9e2c090cf045ed57b766ffc6ac8e42b2db408965410933db8848ad20a","urls":["bzz-raw://99dae6dd4735009903cfccf29f84756aedd068cb7e82489a57ee67a14c684a91","dweb:/ipfs/QmXe11V51vHnHXnbxEKEXt2CjDUFhJsH4wEok72xifBaa1"],"license":"MIT"}},"version":1},"id":339}