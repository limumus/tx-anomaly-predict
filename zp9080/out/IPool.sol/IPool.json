{"abi":[{"type":"function","name":"burn","inputs":[{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"},{"name":"qty","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"qty0","type":"uint256","internalType":"uint256"},{"name":"qty1","type":"uint256","internalType":"uint256"},{"name":"feeGrowthInside","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"burnRTokens","inputs":[{"name":"qty","type":"uint256","internalType":"uint256"},{"name":"isLogicalBurn","type":"bool","internalType":"bool"}],"outputs":[{"name":"qty0","type":"uint256","internalType":"uint256"},{"name":"qty1","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"factory","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IFactory"}],"stateMutability":"view"},{"type":"function","name":"flash","inputs":[{"name":"recipient","type":"address","internalType":"address"},{"name":"qty0","type":"uint256","internalType":"uint256"},{"name":"qty1","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getFeeGrowthGlobal","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getLiquidityState","inputs":[],"outputs":[{"name":"baseL","type":"uint128","internalType":"uint128"},{"name":"reinvestL","type":"uint128","internalType":"uint128"},{"name":"reinvestLLast","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"getPoolState","inputs":[],"outputs":[{"name":"sqrtP","type":"uint160","internalType":"uint160"},{"name":"currentTick","type":"int24","internalType":"int24"},{"name":"nearestCurrentTick","type":"int24","internalType":"int24"},{"name":"locked","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"getPositions","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"}],"outputs":[{"name":"liquidity","type":"uint128","internalType":"uint128"},{"name":"feeGrowthInsideLast","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getSecondsPerLiquidityData","inputs":[],"outputs":[{"name":"secondsPerLiquidityGlobal","type":"uint128","internalType":"uint128"},{"name":"lastUpdateTime","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"getSecondsPerLiquidityInside","inputs":[{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"}],"outputs":[{"name":"secondsPerLiquidityInside","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"initializedTicks","inputs":[{"name":"tick","type":"int24","internalType":"int24"}],"outputs":[{"name":"previous","type":"int24","internalType":"int24"},{"name":"next","type":"int24","internalType":"int24"}],"stateMutability":"view"},{"type":"function","name":"maxTickLiquidity","inputs":[],"outputs":[{"name":"","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"mint","inputs":[{"name":"recipient","type":"address","internalType":"address"},{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"},{"name":"ticksPrevious","type":"int24[2]","internalType":"int24[2]"},{"name":"qty","type":"uint128","internalType":"uint128"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"qty0","type":"uint256","internalType":"uint256"},{"name":"qty1","type":"uint256","internalType":"uint256"},{"name":"feeGrowthInside","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"poolOracle","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IPoolOracle"}],"stateMutability":"view"},{"type":"function","name":"swap","inputs":[{"name":"recipient","type":"address","internalType":"address"},{"name":"swapQty","type":"int256","internalType":"int256"},{"name":"isToken0","type":"bool","internalType":"bool"},{"name":"limitSqrtP","type":"uint160","internalType":"uint160"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"qty0","type":"int256","internalType":"int256"},{"name":"qty1","type":"int256","internalType":"int256"}],"stateMutability":"nonpayable"},{"type":"function","name":"swapFeeUnits","inputs":[],"outputs":[{"name":"","type":"uint24","internalType":"uint24"}],"stateMutability":"view"},{"type":"function","name":"tickDistance","inputs":[],"outputs":[{"name":"","type":"int24","internalType":"int24"}],"stateMutability":"view"},{"type":"function","name":"ticks","inputs":[{"name":"tick","type":"int24","internalType":"int24"}],"outputs":[{"name":"liquidityGross","type":"uint128","internalType":"uint128"},{"name":"liquidityNet","type":"int128","internalType":"int128"},{"name":"feeGrowthOutside","type":"uint256","internalType":"uint256"},{"name":"secondsPerLiquidityOutside","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"token0","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IERC20"}],"stateMutability":"view"},{"type":"function","name":"token1","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IERC20"}],"stateMutability":"view"},{"type":"function","name":"tweakPosZeroLiq","inputs":[{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"}],"outputs":[{"name":"feeGrowthInsideLast","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"unlockPool","inputs":[{"name":"initialSqrtP","type":"uint160","internalType":"uint160"}],"outputs":[{"name":"qty0","type":"uint256","internalType":"uint256"},{"name":"qty1","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"event","name":"Burn","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"tickLower","type":"int24","indexed":true,"internalType":"int24"},{"name":"tickUpper","type":"int24","indexed":true,"internalType":"int24"},{"name":"qty","type":"uint128","indexed":false,"internalType":"uint128"},{"name":"qty0","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"qty1","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"BurnRTokens","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"qty","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"qty0","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"qty1","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Flash","inputs":[{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"recipient","type":"address","indexed":true,"internalType":"address"},{"name":"qty0","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"qty1","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"paid0","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"paid1","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Initialize","inputs":[{"name":"sqrtP","type":"uint160","indexed":false,"internalType":"uint160"},{"name":"tick","type":"int24","indexed":false,"internalType":"int24"}],"anonymous":false},{"type":"event","name":"Mint","inputs":[{"name":"sender","type":"address","indexed":false,"internalType":"address"},{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"tickLower","type":"int24","indexed":true,"internalType":"int24"},{"name":"tickUpper","type":"int24","indexed":true,"internalType":"int24"},{"name":"qty","type":"uint128","indexed":false,"internalType":"uint128"},{"name":"qty0","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"qty1","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Swap","inputs":[{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"recipient","type":"address","indexed":true,"internalType":"address"},{"name":"deltaQty0","type":"int256","indexed":false,"internalType":"int256"},{"name":"deltaQty1","type":"int256","indexed":false,"internalType":"int256"},{"name":"sqrtP","type":"uint160","indexed":false,"internalType":"uint160"},{"name":"liquidity","type":"uint128","indexed":false,"internalType":"uint128"},{"name":"currentTick","type":"int24","indexed":false,"internalType":"int24"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"burn(int24,int24,uint128)":"a34123a7","burnRTokens(uint256,bool)":"c20830d7","factory()":"c45a0155","flash(address,uint256,uint256,bytes)":"490e6cbc","getFeeGrowthGlobal()":"72cc5148","getLiquidityState()":"ab612f2b","getPoolState()":"217ac237","getPositions(address,int24,int24)":"f2843d1e","getSecondsPerLiquidityData()":"aff67f55","getSecondsPerLiquidityInside(int24,int24)":"b231a3b8","initializedTicks(int24)":"c0ac75cf","maxTickLiquidity()":"c5611c60","mint(address,int24,int24,int24[2],uint128,bytes)":"0c1225b7","poolOracle()":"6efff33b","swap(address,int256,bool,uint160,bytes)":"24b31a0c","swapFeeUnits()":"c79a590e","tickDistance()":"48626a8c","ticks(int24)":"f30dba93","token0()":"0dfe1681","token1()":"d21220a7","tweakPosZeroLiq(int24,int24)":"c7333e94","unlockPool(uint160)":"7caae870"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"qty\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qty0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qty1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qty0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qty1\",\"type\":\"uint256\"}],\"name\":\"BurnRTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qty0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qty1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtP\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"qty\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qty0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qty1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"deltaQty0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"deltaQty1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtP\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"currentTick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"qty\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"qty0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLogicalBurn\",\"type\":\"bool\"}],\"name\":\"burnRTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"qty0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"qty0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeGrowthGlobal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidityState\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"baseL\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reinvestL\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reinvestLLast\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolState\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtP\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"currentTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"nearestCurrentTick\",\"type\":\"int24\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"getPositions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInsideLast\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSecondsPerLiquidityData\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"secondsPerLiquidityGlobal\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"lastUpdateTime\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"getSecondsPerLiquidityInside\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"secondsPerLiquidityInside\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"initializedTicks\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"previous\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"next\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTickLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int24[2]\",\"name\":\"ticksPrevious\",\"type\":\"int24[2]\"},{\"internalType\":\"uint128\",\"name\":\"qty\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"qty0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolOracle\",\"outputs\":[{\"internalType\":\"contract IPoolOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"swapQty\",\"type\":\"int256\"},{\"internalType\":\"bool\",\"name\":\"isToken0\",\"type\":\"bool\"},{\"internalType\":\"uint160\",\"name\":\"limitSqrtP\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"qty0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"qty1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapFeeUnits\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickDistance\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"secondsPerLiquidityOutside\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"tweakPosZeroLiq\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feeGrowthInsideLast\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"initialSqrtP\",\"type\":\"uint160\"}],\"name\":\"unlockPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"qty0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"transfers reinvestment tokens for any collected fees earned by the position\",\"params\":{\"owner\":\"address of owner of the position\",\"qty\":\"liquidity removed\",\"qty0\":\"token0 quantity withdrawn from removal of liquidity\",\"qty1\":\"token1 quantity withdrawn from removal of liquidity\",\"tickLower\":\"position's lower tick\",\"tickUpper\":\"position's upper tick\"}},\"BurnRTokens(address,uint256,uint256,uint256)\":{\"params\":{\"owner\":\"address which burnt the reinvestment tokens\",\"qty\":\"reinvestment token quantity burnt\",\"qty0\":\"token0 quantity sent to owner for burning reinvestment tokens\",\"qty1\":\"token1 quantity sent to owner for burning reinvestment tokens\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"paid0\":\"token0 quantity paid for the flash, which can exceed qty0 + fee\",\"paid1\":\"token1 quantity paid for the flash, which can exceed qty0 + fee\",\"qty0\":\"token0 quantity loaned to the recipient\",\"qty1\":\"token1 quantity loaned to the recipient\",\"recipient\":\"The address that received the flash loan quantities\",\"sender\":\"The address that initiated the flash loan, and that received the callback\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtP\":\"The initial price of the pool\",\"tick\":\"The initial tick of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"transfers reinvestment tokens for any collected fees earned by the position\",\"params\":{\"owner\":\"address of owner of the position\",\"qty\":\"liquidity minted to the position range\",\"qty0\":\"token0 quantity needed to mint the liquidity\",\"qty1\":\"token1 quantity needed to mint the liquidity\",\"sender\":\"address that minted the liquidity\",\"tickLower\":\"position's lower tick\",\"tickUpper\":\"position's upper tick\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"currentTick\":\"Log base 1.0001 of pool's price after the swap\",\"deltaQty0\":\"Change in pool's token0 balance\",\"deltaQty1\":\"Change in pool's token1 balance\",\"liquidity\":\"Pool's liquidity after the swap\",\"recipient\":\"Address that received the swap output\",\"sender\":\"Address that initiated the swap call, and that received the callback\",\"sqrtP\":\"Pool's sqrt price after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"params\":{\"qty\":\"Liquidity quantity to burn\",\"tickLower\":\"Position's lower tick for which to burn liquidity\",\"tickUpper\":\"Position's upper tick for which to burn liquidity\"},\"returns\":{\"feeGrowthInside\":\"position's updated feeGrowthInside value\",\"qty0\":\"token0 quantity sent to the caller\",\"qty1\":\"token1 quantity sent to the caller\"}},\"burnRTokens(uint256,bool)\":{\"params\":{\"isLogicalBurn\":\"true if burning rTokens without returning any token0/token1         otherwise should transfer token0/token1 to sender\",\"qty\":\"Reinvestment token quantity to burn\"},\"returns\":{\"qty0\":\"token0 quantity sent to the caller for burnt reinvestment tokens\",\"qty1\":\"token1 quantity sent to the caller for burnt reinvestment tokens\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IFlashCallback#flashCallbackFees collected are sent to the feeTo address if it is set in Factory\",\"params\":{\"data\":\"Any data to be passed through to the callback\",\"qty0\":\"token0 quantity to be loaned to the recipient\",\"qty1\":\"token1 quantity to be loaned to the recipient\",\"recipient\":\"The address which will receive the token0 and token1 quantities\"}},\"getFeeGrowthGlobal()\":{\"returns\":{\"_0\":\"feeGrowthGlobal All-time fee growth per unit of liquidity of the pool\"}},\"getLiquidityState()\":{\"returns\":{\"baseL\":\"pool's base liquidity without reinvest liqudity\",\"reinvestL\":\"the liquidity is reinvested into the pool\",\"reinvestLLast\":\"last cached value of reinvestL, used for calculating reinvestment token qty\"}},\"getPoolState()\":{\"returns\":{\"currentTick\":\"pool's current tick\",\"locked\":\"true if pool is locked, false otherwise\",\"nearestCurrentTick\":\"pool's nearest initialized tick that is <= currentTick\",\"sqrtP\":\"sqrt of current price: sqrt(token1/token0)\"}},\"getPositions(address,int24,int24)\":{\"returns\":{\"feeGrowthInsideLast\":\"fee growth inside the tick range as of the last mint / burn action performed\",\"liquidity\":\"the liquidity quantity of the position\"}},\"getSecondsPerLiquidityData()\":{\"returns\":{\"lastUpdateTime\":\"The timestamp in which secondsPerLiquidityGlobal was last updated\",\"secondsPerLiquidityGlobal\":\"All-time seconds per unit of liquidity of the pool\"}},\"getSecondsPerLiquidityInside(int24,int24)\":{\"params\":{\"tickLower\":\"The lower tick (of a position)\",\"tickUpper\":\"The upper tick (of a position)\"},\"returns\":{\"secondsPerLiquidityInside\":\"active time (multiplied by 2^96) between the 2 ticks, per unit of liquidity.\"}},\"initializedTicks(int24)\":{\"details\":\"If specified tick is uninitialized, the returned values are zero.\",\"params\":{\"tick\":\"The tick to look up\"}},\"maxTickLiquidity()\":{\"details\":\"This is to prevent overflow the pool's active base liquidity (uint128) also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,int24[2],uint128,bytes)\":{\"details\":\"Any token0 or token1 owed for the liquidity provision have to be paid for when the IMintCallback#mintCallback is called to this method's caller The quantity of token0/token1 to be sent depends on tickLower, tickUpper, the amount of liquidity, and the current price of the pool. Also sends reinvestment tokens (fees) to the recipient for any fees collected while the position is in range Reinvestment tokens have to be burnt via #burnRTokens in exchange for token0 and token1\",\"params\":{\"data\":\"Data (if any) to be passed through to the callback\",\"qty\":\"Liquidity quantity to mint\",\"recipient\":\"Address for which the added liquidity is credited to\",\"tickLower\":\"Recipient position's lower tick\",\"tickUpper\":\"Recipient position's upper tick\",\"ticksPrevious\":\"The nearest tick that is initialized and <= the lower & upper ticks\"},\"returns\":{\"feeGrowthInside\":\"position's updated feeGrowthInside value\",\"qty0\":\"token0 quantity sent to the pool in exchange for the minted liquidity\",\"qty1\":\"token1 quantity sent to the pool in exchange for the minted liquidity\"}},\"poolOracle()\":{\"returns\":{\"_0\":\"The contract address\"}},\"swap(address,int256,bool,uint160,bytes)\":{\"details\":\"This method's caller receives a callback in the form of ISwapCallback#swapCallbackswaps will execute up to limitSqrtP or swapQty is fully used\",\"params\":{\"data\":\"Any data to be passed through to the callback\",\"isToken0\":\"Whether the swapQty is specified in token0 (true) or token1 (false)\",\"limitSqrtP\":\"the limit of sqrt price after swapping could be MAX_SQRT_RATIO-1 when swapping 1 -> 0 and MIN_SQRT_RATIO+1 when swapping 0 -> 1 for no limit swap\",\"recipient\":\"The address to receive the swap output\",\"swapQty\":\"The swap quantity, which implicitly configures the swap as exact input (>0), or exact output (<0)\"},\"returns\":{\"qty0\":\"Exact token0 qty sent to recipient if < 0. Minimally received quantity if > 0.\",\"qty1\":\"Exact token1 qty sent to recipient if < 0. Minimally received quantity if > 0.\"}},\"swapFeeUnits()\":{\"returns\":{\"_0\":\"The swap fee in basis points\"}},\"tickDistance()\":{\"details\":\"Ticks can only be initialized and used at multiples of this value It remains an int24 to avoid casting even though it is >= 1. e.g: a tickDistance of 5 means ticks can be initialized every 5th tick, i.e., ..., -10, -5, 0, 5, 10, ...\",\"returns\":{\"_0\":\"The tick distance\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"total liquidity amount from positions that uses this tick as a lower or upper tick liquidityNet how much liquidity changes when the pool tick crosses above the tick feeGrowthOutside the fee growth on the other side of the tick relative to the current tick secondsPerLiquidityOutside the seconds per unit of liquidity  spent on the other side of the tick relative to the current tick\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"tweakPosZeroLiq(int24,int24)\":{\"params\":{\"tickLower\":\"Position's lower tick\",\"tickUpper\":\"Position's upper tick\"}},\"unlockPool(uint160)\":{\"details\":\"Assumes the caller has sent the necessary token amounts required for initializing reinvestment liquidity prior to calling this function\",\"params\":{\"initialSqrtP\":\"the initial sqrt price of the pool\",\"qty0\":\"token0 quantity sent to and locked permanently in the pool\",\"qty1\":\"token1 quantity sent to and locked permanently in the pool\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"BurnRTokens(address,uint256,uint256,uint256)\":{\"notice\":\"Emitted when reinvestment tokens are burnt\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flash loans of token0/token1\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted only once per pool when #initialize is first called\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted for swaps by the pool between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Remove liquidity from the caller Also sends reinvestment tokens (fees) to the caller for any fees collected while the position is in range Reinvestment tokens have to be burnt via #burnRTokens in exchange for token0 and token1\"},\"burnRTokens(uint256,bool)\":{\"notice\":\"Burns reinvestment tokens in exchange to receive the fees collected in token0 and token1\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IFactory interface\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"getLiquidityState()\":{\"notice\":\"Fetches the pool's liquidity values\"},\"getPoolState()\":{\"notice\":\"Fetches the pool's prices, ticks and lock status\"},\"getPositions(address,int24,int24)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"getSecondsPerLiquidityInside(int24,int24)\":{\"notice\":\"Calculates and returns the active time per unit of liquidity until current block.timestamp\"},\"initializedTicks(int24)\":{\"notice\":\"Returns the previous and next initialized ticks of a specific tick\"},\"maxTickLiquidity()\":{\"notice\":\"Maximum gross liquidity that an initialized tick can have\"},\"mint(address,int24,int24,int24[2],uint128,bytes)\":{\"notice\":\"Adds liquidity for the specified recipient/tickLower/tickUpper position\"},\"poolOracle()\":{\"notice\":\"The oracle contract that stores necessary data for price oracle\"},\"swap(address,int256,bool,uint160,bytes)\":{\"notice\":\"Swap token0 -> token1, or vice versa\"},\"swapFeeUnits()\":{\"notice\":\"The fee to be charged for a swap in basis points\"},\"tickDistance()\":{\"notice\":\"The pool tick distance\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"},\"tweakPosZeroLiq(int24,int24)\":{\"notice\":\"sync fee of position\"},\"unlockPool(uint160)\":{\"notice\":\"Sets the initial price for the pool and seeds reinvestment liquidity\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/2023-11/KyberSwap/interfaces/IPool.sol\":\"IPool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/test/2023-11/KyberSwap/interfaces/IFactory.sol\":{\"keccak256\":\"0xcac6d8a9e2c090cf045ed57b766ffc6ac8e42b2db408965410933db8848ad20a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99dae6dd4735009903cfccf29f84756aedd068cb7e82489a57ee67a14c684a91\",\"dweb:/ipfs/QmXe11V51vHnHXnbxEKEXt2CjDUFhJsH4wEok72xifBaa1\"]},\"src/test/2023-11/KyberSwap/interfaces/IPool.sol\":{\"keccak256\":\"0xedd7c9f6fd9dcdb532e05315a5bf654eaaf2fe5e0d7a5f6741ef2c28051539be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd6d753d4c1137a5843af53ad4092766765f139ea2ab9d71c4ce00d552fb35b2\",\"dweb:/ipfs/QmUKZLieQMdCUJnqZpzd3UGiGN6jadHfYCEGCCbdkmbNQs\"]},\"src/test/2023-11/KyberSwap/interfaces/oracle/IPoolOracle.sol\":{\"keccak256\":\"0x0a4e263a6b1e6376f216899ecb421fedab12786cc25ceccb7c43067ffd7c9fb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31ee993d83282c3fa31945ee1192670d173cee18623cb2fc1aedcad8d9c3f5a6\",\"dweb:/ipfs/QmPH9zRTX6B1aKPMa9Fia5kL71XMw6DXsZTQfpTsUtgdTq\"]},\"src/test/2023-11/KyberSwap/interfaces/pool/IPoolActions.sol\":{\"keccak256\":\"0xbbe09ab804a32dd90f9050e9ef59ec763c882f34c83c835c87cc007aeec9a21d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87d2121fa1a530123bef7aae39a71e8fb195de6f6fa84dd228675dcf6a6daa93\",\"dweb:/ipfs/QmcbdbugqdV4g1QAPpF3FWv3Lc5PNCVX6XwCJvptBjsvsf\"]},\"src/test/2023-11/KyberSwap/interfaces/pool/IPoolEvents.sol\":{\"keccak256\":\"0x6682321a5f19d55305e4be0fe14d745b9995dc5a0cadbc418a4dc5b5cd09d680\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed177766d48fc2f7f847cf432d5c51dbec91c92ecb6e2a81352b09ea628a4bd\",\"dweb:/ipfs/QmYaVm5y5NiL5vg6Ctv2g7t4jWpQNYL9C1hQkdqEJ9o44N\"]},\"src/test/2023-11/KyberSwap/interfaces/pool/IPoolStorage.sol\":{\"keccak256\":\"0xf3bf30619a2ce9a85621307a06e0e778eb81c4a4b60dc383daf9353507c21563\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93e16d09d1f2b4b21e6436efab988a44b2e37c994d5530a6abb9207127246d54\",\"dweb:/ipfs/QmYQrYzy8wt4Ye6pVP5GJJxiL2v5UdAAHssvfxMAgz98Bn\"]},\"src/test/2023-11/KyberSwap/interfaces/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x8e4dfe77e240c62d53978cd2488de289a0411589e5a36d750c79bcd9dd273b46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://240089890636a9fc4a5fa36660bae9b2ba2858557482b70417f09c1d4e821050\",\"dweb:/ipfs/QmfKcLetVDQyCKr8S9hb8HyFg7pM4jpjQcKiDurfbtqYZX\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"int24","name":"tickLower","type":"int24","indexed":true},{"internalType":"int24","name":"tickUpper","type":"int24","indexed":true},{"internalType":"uint128","name":"qty","type":"uint128","indexed":false},{"internalType":"uint256","name":"qty0","type":"uint256","indexed":false},{"internalType":"uint256","name":"qty1","type":"uint256","indexed":false}],"type":"event","name":"Burn","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"uint256","name":"qty","type":"uint256","indexed":false},{"internalType":"uint256","name":"qty0","type":"uint256","indexed":false},{"internalType":"uint256","name":"qty1","type":"uint256","indexed":false}],"type":"event","name":"BurnRTokens","anonymous":false},{"inputs":[{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"address","name":"recipient","type":"address","indexed":true},{"internalType":"uint256","name":"qty0","type":"uint256","indexed":false},{"internalType":"uint256","name":"qty1","type":"uint256","indexed":false},{"internalType":"uint256","name":"paid0","type":"uint256","indexed":false},{"internalType":"uint256","name":"paid1","type":"uint256","indexed":false}],"type":"event","name":"Flash","anonymous":false},{"inputs":[{"internalType":"uint160","name":"sqrtP","type":"uint160","indexed":false},{"internalType":"int24","name":"tick","type":"int24","indexed":false}],"type":"event","name":"Initialize","anonymous":false},{"inputs":[{"internalType":"address","name":"sender","type":"address","indexed":false},{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"int24","name":"tickLower","type":"int24","indexed":true},{"internalType":"int24","name":"tickUpper","type":"int24","indexed":true},{"internalType":"uint128","name":"qty","type":"uint128","indexed":false},{"internalType":"uint256","name":"qty0","type":"uint256","indexed":false},{"internalType":"uint256","name":"qty1","type":"uint256","indexed":false}],"type":"event","name":"Mint","anonymous":false},{"inputs":[{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"address","name":"recipient","type":"address","indexed":true},{"internalType":"int256","name":"deltaQty0","type":"int256","indexed":false},{"internalType":"int256","name":"deltaQty1","type":"int256","indexed":false},{"internalType":"uint160","name":"sqrtP","type":"uint160","indexed":false},{"internalType":"uint128","name":"liquidity","type":"uint128","indexed":false},{"internalType":"int24","name":"currentTick","type":"int24","indexed":false}],"type":"event","name":"Swap","anonymous":false},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"qty","type":"uint128"}],"stateMutability":"nonpayable","type":"function","name":"burn","outputs":[{"internalType":"uint256","name":"qty0","type":"uint256"},{"internalType":"uint256","name":"qty1","type":"uint256"},{"internalType":"uint256","name":"feeGrowthInside","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"qty","type":"uint256"},{"internalType":"bool","name":"isLogicalBurn","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"burnRTokens","outputs":[{"internalType":"uint256","name":"qty0","type":"uint256"},{"internalType":"uint256","name":"qty1","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"factory","outputs":[{"internalType":"contract IFactory","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"qty0","type":"uint256"},{"internalType":"uint256","name":"qty1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"flash"},{"inputs":[],"stateMutability":"view","type":"function","name":"getFeeGrowthGlobal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getLiquidityState","outputs":[{"internalType":"uint128","name":"baseL","type":"uint128"},{"internalType":"uint128","name":"reinvestL","type":"uint128"},{"internalType":"uint128","name":"reinvestLLast","type":"uint128"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getPoolState","outputs":[{"internalType":"uint160","name":"sqrtP","type":"uint160"},{"internalType":"int24","name":"currentTick","type":"int24"},{"internalType":"int24","name":"nearestCurrentTick","type":"int24"},{"internalType":"bool","name":"locked","type":"bool"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"stateMutability":"view","type":"function","name":"getPositions","outputs":[{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"feeGrowthInsideLast","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getSecondsPerLiquidityData","outputs":[{"internalType":"uint128","name":"secondsPerLiquidityGlobal","type":"uint128"},{"internalType":"uint32","name":"lastUpdateTime","type":"uint32"}]},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"stateMutability":"view","type":"function","name":"getSecondsPerLiquidityInside","outputs":[{"internalType":"uint128","name":"secondsPerLiquidityInside","type":"uint128"}]},{"inputs":[{"internalType":"int24","name":"tick","type":"int24"}],"stateMutability":"view","type":"function","name":"initializedTicks","outputs":[{"internalType":"int24","name":"previous","type":"int24"},{"internalType":"int24","name":"next","type":"int24"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"maxTickLiquidity","outputs":[{"internalType":"uint128","name":"","type":"uint128"}]},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"int24[2]","name":"ticksPrevious","type":"int24[2]"},{"internalType":"uint128","name":"qty","type":"uint128"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mint","outputs":[{"internalType":"uint256","name":"qty0","type":"uint256"},{"internalType":"uint256","name":"qty1","type":"uint256"},{"internalType":"uint256","name":"feeGrowthInside","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"poolOracle","outputs":[{"internalType":"contract IPoolOracle","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int256","name":"swapQty","type":"int256"},{"internalType":"bool","name":"isToken0","type":"bool"},{"internalType":"uint160","name":"limitSqrtP","type":"uint160"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"swap","outputs":[{"internalType":"int256","name":"qty0","type":"int256"},{"internalType":"int256","name":"qty1","type":"int256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"swapFeeUnits","outputs":[{"internalType":"uint24","name":"","type":"uint24"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"tickDistance","outputs":[{"internalType":"int24","name":"","type":"int24"}]},{"inputs":[{"internalType":"int24","name":"tick","type":"int24"}],"stateMutability":"view","type":"function","name":"ticks","outputs":[{"internalType":"uint128","name":"liquidityGross","type":"uint128"},{"internalType":"int128","name":"liquidityNet","type":"int128"},{"internalType":"uint256","name":"feeGrowthOutside","type":"uint256"},{"internalType":"uint128","name":"secondsPerLiquidityOutside","type":"uint128"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"token0","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"token1","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}]},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"stateMutability":"nonpayable","type":"function","name":"tweakPosZeroLiq","outputs":[{"internalType":"uint256","name":"feeGrowthInsideLast","type":"uint256"}]},{"inputs":[{"internalType":"uint160","name":"initialSqrtP","type":"uint160"}],"stateMutability":"nonpayable","type":"function","name":"unlockPool","outputs":[{"internalType":"uint256","name":"qty0","type":"uint256"},{"internalType":"uint256","name":"qty1","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"burn(int24,int24,uint128)":{"params":{"qty":"Liquidity quantity to burn","tickLower":"Position's lower tick for which to burn liquidity","tickUpper":"Position's upper tick for which to burn liquidity"},"returns":{"feeGrowthInside":"position's updated feeGrowthInside value","qty0":"token0 quantity sent to the caller","qty1":"token1 quantity sent to the caller"}},"burnRTokens(uint256,bool)":{"params":{"isLogicalBurn":"true if burning rTokens without returning any token0/token1         otherwise should transfer token0/token1 to sender","qty":"Reinvestment token quantity to burn"},"returns":{"qty0":"token0 quantity sent to the caller for burnt reinvestment tokens","qty1":"token1 quantity sent to the caller for burnt reinvestment tokens"}},"factory()":{"returns":{"_0":"The contract address"}},"flash(address,uint256,uint256,bytes)":{"details":"The caller of this method receives a callback in the form of IFlashCallback#flashCallbackFees collected are sent to the feeTo address if it is set in Factory","params":{"data":"Any data to be passed through to the callback","qty0":"token0 quantity to be loaned to the recipient","qty1":"token1 quantity to be loaned to the recipient","recipient":"The address which will receive the token0 and token1 quantities"}},"getFeeGrowthGlobal()":{"returns":{"_0":"feeGrowthGlobal All-time fee growth per unit of liquidity of the pool"}},"getLiquidityState()":{"returns":{"baseL":"pool's base liquidity without reinvest liqudity","reinvestL":"the liquidity is reinvested into the pool","reinvestLLast":"last cached value of reinvestL, used for calculating reinvestment token qty"}},"getPoolState()":{"returns":{"currentTick":"pool's current tick","locked":"true if pool is locked, false otherwise","nearestCurrentTick":"pool's nearest initialized tick that is <= currentTick","sqrtP":"sqrt of current price: sqrt(token1/token0)"}},"getPositions(address,int24,int24)":{"returns":{"feeGrowthInsideLast":"fee growth inside the tick range as of the last mint / burn action performed","liquidity":"the liquidity quantity of the position"}},"getSecondsPerLiquidityData()":{"returns":{"lastUpdateTime":"The timestamp in which secondsPerLiquidityGlobal was last updated","secondsPerLiquidityGlobal":"All-time seconds per unit of liquidity of the pool"}},"getSecondsPerLiquidityInside(int24,int24)":{"params":{"tickLower":"The lower tick (of a position)","tickUpper":"The upper tick (of a position)"},"returns":{"secondsPerLiquidityInside":"active time (multiplied by 2^96) between the 2 ticks, per unit of liquidity."}},"initializedTicks(int24)":{"details":"If specified tick is uninitialized, the returned values are zero.","params":{"tick":"The tick to look up"}},"maxTickLiquidity()":{"details":"This is to prevent overflow the pool's active base liquidity (uint128) also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool","returns":{"_0":"The max amount of liquidity per tick"}},"mint(address,int24,int24,int24[2],uint128,bytes)":{"details":"Any token0 or token1 owed for the liquidity provision have to be paid for when the IMintCallback#mintCallback is called to this method's caller The quantity of token0/token1 to be sent depends on tickLower, tickUpper, the amount of liquidity, and the current price of the pool. Also sends reinvestment tokens (fees) to the recipient for any fees collected while the position is in range Reinvestment tokens have to be burnt via #burnRTokens in exchange for token0 and token1","params":{"data":"Data (if any) to be passed through to the callback","qty":"Liquidity quantity to mint","recipient":"Address for which the added liquidity is credited to","tickLower":"Recipient position's lower tick","tickUpper":"Recipient position's upper tick","ticksPrevious":"The nearest tick that is initialized and <= the lower & upper ticks"},"returns":{"feeGrowthInside":"position's updated feeGrowthInside value","qty0":"token0 quantity sent to the pool in exchange for the minted liquidity","qty1":"token1 quantity sent to the pool in exchange for the minted liquidity"}},"poolOracle()":{"returns":{"_0":"The contract address"}},"swap(address,int256,bool,uint160,bytes)":{"details":"This method's caller receives a callback in the form of ISwapCallback#swapCallbackswaps will execute up to limitSqrtP or swapQty is fully used","params":{"data":"Any data to be passed through to the callback","isToken0":"Whether the swapQty is specified in token0 (true) or token1 (false)","limitSqrtP":"the limit of sqrt price after swapping could be MAX_SQRT_RATIO-1 when swapping 1 -> 0 and MIN_SQRT_RATIO+1 when swapping 0 -> 1 for no limit swap","recipient":"The address to receive the swap output","swapQty":"The swap quantity, which implicitly configures the swap as exact input (>0), or exact output (<0)"},"returns":{"qty0":"Exact token0 qty sent to recipient if < 0. Minimally received quantity if > 0.","qty1":"Exact token1 qty sent to recipient if < 0. Minimally received quantity if > 0."}},"swapFeeUnits()":{"returns":{"_0":"The swap fee in basis points"}},"tickDistance()":{"details":"Ticks can only be initialized and used at multiples of this value It remains an int24 to avoid casting even though it is >= 1. e.g: a tickDistance of 5 means ticks can be initialized every 5th tick, i.e., ..., -10, -5, 0, 5, 10, ...","returns":{"_0":"The tick distance"}},"ticks(int24)":{"params":{"tick":"The tick to look up"},"returns":{"liquidityGross":"total liquidity amount from positions that uses this tick as a lower or upper tick liquidityNet how much liquidity changes when the pool tick crosses above the tick feeGrowthOutside the fee growth on the other side of the tick relative to the current tick secondsPerLiquidityOutside the seconds per unit of liquidity  spent on the other side of the tick relative to the current tick"}},"token0()":{"returns":{"_0":"The token contract address"}},"token1()":{"returns":{"_0":"The token contract address"}},"tweakPosZeroLiq(int24,int24)":{"params":{"tickLower":"Position's lower tick","tickUpper":"Position's upper tick"}},"unlockPool(uint160)":{"details":"Assumes the caller has sent the necessary token amounts required for initializing reinvestment liquidity prior to calling this function","params":{"initialSqrtP":"the initial sqrt price of the pool","qty0":"token0 quantity sent to and locked permanently in the pool","qty1":"token1 quantity sent to and locked permanently in the pool"}}},"version":1},"userdoc":{"kind":"user","methods":{"burn(int24,int24,uint128)":{"notice":"Remove liquidity from the caller Also sends reinvestment tokens (fees) to the caller for any fees collected while the position is in range Reinvestment tokens have to be burnt via #burnRTokens in exchange for token0 and token1"},"burnRTokens(uint256,bool)":{"notice":"Burns reinvestment tokens in exchange to receive the fees collected in token0 and token1"},"factory()":{"notice":"The contract that deployed the pool, which must adhere to the IFactory interface"},"flash(address,uint256,uint256,bytes)":{"notice":"Receive token0 and/or token1 and pay it back, plus a fee, in the callback"},"getLiquidityState()":{"notice":"Fetches the pool's liquidity values"},"getPoolState()":{"notice":"Fetches the pool's prices, ticks and lock status"},"getPositions(address,int24,int24)":{"notice":"Returns the information about a position by the position's key"},"getSecondsPerLiquidityInside(int24,int24)":{"notice":"Calculates and returns the active time per unit of liquidity until current block.timestamp"},"initializedTicks(int24)":{"notice":"Returns the previous and next initialized ticks of a specific tick"},"maxTickLiquidity()":{"notice":"Maximum gross liquidity that an initialized tick can have"},"mint(address,int24,int24,int24[2],uint128,bytes)":{"notice":"Adds liquidity for the specified recipient/tickLower/tickUpper position"},"poolOracle()":{"notice":"The oracle contract that stores necessary data for price oracle"},"swap(address,int256,bool,uint160,bytes)":{"notice":"Swap token0 -> token1, or vice versa"},"swapFeeUnits()":{"notice":"The fee to be charged for a swap in basis points"},"tickDistance()":{"notice":"The pool tick distance"},"ticks(int24)":{"notice":"Look up information about a specific tick in the pool"},"token0()":{"notice":"The first of the two tokens of the pool, sorted by address"},"token1()":{"notice":"The second of the two tokens of the pool, sorted by address"},"tweakPosZeroLiq(int24,int24)":{"notice":"sync fee of position"},"unlockPool(uint160)":{"notice":"Sets the initial price for the pool and seeds reinvestment liquidity"}},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/test/2023-11/KyberSwap/interfaces/IPool.sol":"IPool"},"evmVersion":"cancun","libraries":{}},"sources":{"src/test/2023-11/KyberSwap/interfaces/IFactory.sol":{"keccak256":"0xcac6d8a9e2c090cf045ed57b766ffc6ac8e42b2db408965410933db8848ad20a","urls":["bzz-raw://99dae6dd4735009903cfccf29f84756aedd068cb7e82489a57ee67a14c684a91","dweb:/ipfs/QmXe11V51vHnHXnbxEKEXt2CjDUFhJsH4wEok72xifBaa1"],"license":"MIT"},"src/test/2023-11/KyberSwap/interfaces/IPool.sol":{"keccak256":"0xedd7c9f6fd9dcdb532e05315a5bf654eaaf2fe5e0d7a5f6741ef2c28051539be","urls":["bzz-raw://fd6d753d4c1137a5843af53ad4092766765f139ea2ab9d71c4ce00d552fb35b2","dweb:/ipfs/QmUKZLieQMdCUJnqZpzd3UGiGN6jadHfYCEGCCbdkmbNQs"],"license":"MIT"},"src/test/2023-11/KyberSwap/interfaces/oracle/IPoolOracle.sol":{"keccak256":"0x0a4e263a6b1e6376f216899ecb421fedab12786cc25ceccb7c43067ffd7c9fb7","urls":["bzz-raw://31ee993d83282c3fa31945ee1192670d173cee18623cb2fc1aedcad8d9c3f5a6","dweb:/ipfs/QmPH9zRTX6B1aKPMa9Fia5kL71XMw6DXsZTQfpTsUtgdTq"],"license":"MIT"},"src/test/2023-11/KyberSwap/interfaces/pool/IPoolActions.sol":{"keccak256":"0xbbe09ab804a32dd90f9050e9ef59ec763c882f34c83c835c87cc007aeec9a21d","urls":["bzz-raw://87d2121fa1a530123bef7aae39a71e8fb195de6f6fa84dd228675dcf6a6daa93","dweb:/ipfs/QmcbdbugqdV4g1QAPpF3FWv3Lc5PNCVX6XwCJvptBjsvsf"],"license":"MIT"},"src/test/2023-11/KyberSwap/interfaces/pool/IPoolEvents.sol":{"keccak256":"0x6682321a5f19d55305e4be0fe14d745b9995dc5a0cadbc418a4dc5b5cd09d680","urls":["bzz-raw://8ed177766d48fc2f7f847cf432d5c51dbec91c92ecb6e2a81352b09ea628a4bd","dweb:/ipfs/QmYaVm5y5NiL5vg6Ctv2g7t4jWpQNYL9C1hQkdqEJ9o44N"],"license":"MIT"},"src/test/2023-11/KyberSwap/interfaces/pool/IPoolStorage.sol":{"keccak256":"0xf3bf30619a2ce9a85621307a06e0e778eb81c4a4b60dc383daf9353507c21563","urls":["bzz-raw://93e16d09d1f2b4b21e6436efab988a44b2e37c994d5530a6abb9207127246d54","dweb:/ipfs/QmYQrYzy8wt4Ye6pVP5GJJxiL2v5UdAAHssvfxMAgz98Bn"],"license":"MIT"},"src/test/2023-11/KyberSwap/interfaces/token/ERC20/IERC20.sol":{"keccak256":"0x8e4dfe77e240c62d53978cd2488de289a0411589e5a36d750c79bcd9dd273b46","urls":["bzz-raw://240089890636a9fc4a5fa36660bae9b2ba2858557482b70417f09c1d4e821050","dweb:/ipfs/QmfKcLetVDQyCKr8S9hb8HyFg7pM4jpjQcKiDurfbtqYZX"],"license":"MIT"}},"version":1},"id":340}