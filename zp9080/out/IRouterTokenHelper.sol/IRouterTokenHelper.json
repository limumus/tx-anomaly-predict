{"abi":[{"type":"function","name":"refundEth","inputs":[],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"transferAllTokens","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"minAmount","type":"uint256","internalType":"uint256"},{"name":"recipient","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"unwrapWeth","inputs":[{"name":"minAmount","type":"uint256","internalType":"uint256"},{"name":"recipient","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"payable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"refundEth()":"1faa4133","transferAllTokens(address,uint256,address)":"bf1316c1","unwrapWeth(uint256,address)":"bac37ef7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"refundEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferAllTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWeth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"refundEth()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"transferAllTokens(address,uint256,address)\":{\"details\":\"The minAmount parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"minAmount\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"unwrapWeth(uint256,address)\":{\"details\":\"The minAmount parameter prevents malicious contracts from stealing WETH from users.\",\"params\":{\"minAmount\":\"The minimum amount of WETH to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"refundEth()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"transferAllTokens(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWeth(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH balance and sends it to recipient as ETH.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/2023-11/KyberSwap/interfaces/periphery/IRouterTokenHelper.sol\":\"IRouterTokenHelper\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/test/2023-11/KyberSwap/interfaces/periphery/IRouterTokenHelper.sol\":{\"keccak256\":\"0xf39f2a064b398fe3e933abe3d4b6ec1f5b7caab518fd78b6ba00f8f383b7999b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://27f01d212f1eac461a5aa73f8960fff47b558d53c3e4045370e302f79d96a4a8\",\"dweb:/ipfs/QmfSLbvyF6bDWCS8WTMDz1K3EXMbSbcgTvoK2zNv5fXwKz\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"payable","type":"function","name":"refundEth"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"minAmount","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"stateMutability":"payable","type":"function","name":"transferAllTokens"},{"inputs":[{"internalType":"uint256","name":"minAmount","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"stateMutability":"payable","type":"function","name":"unwrapWeth"}],"devdoc":{"kind":"dev","methods":{"refundEth()":{"details":"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"},"transferAllTokens(address,uint256,address)":{"details":"The minAmount parameter prevents malicious contracts from stealing the token from users","params":{"minAmount":"The minimum amount of token required for a transfer","recipient":"The destination address of the token","token":"The contract address of the token which will be transferred to `recipient`"}},"unwrapWeth(uint256,address)":{"details":"The minAmount parameter prevents malicious contracts from stealing WETH from users.","params":{"minAmount":"The minimum amount of WETH to unwrap","recipient":"The address receiving ETH"}}},"version":1},"userdoc":{"kind":"user","methods":{"refundEth()":{"notice":"Refunds any ETH balance held by this contract to the `msg.sender`"},"transferAllTokens(address,uint256,address)":{"notice":"Transfers the full amount of a token held by this contract to recipient"},"unwrapWeth(uint256,address)":{"notice":"Unwraps the contract's WETH balance and sends it to recipient as ETH."}},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/test/2023-11/KyberSwap/interfaces/periphery/IRouterTokenHelper.sol":"IRouterTokenHelper"},"evmVersion":"cancun","libraries":{}},"sources":{"src/test/2023-11/KyberSwap/interfaces/periphery/IRouterTokenHelper.sol":{"keccak256":"0xf39f2a064b398fe3e933abe3d4b6ec1f5b7caab518fd78b6ba00f8f383b7999b","urls":["bzz-raw://27f01d212f1eac461a5aa73f8960fff47b558d53c3e4045370e302f79d96a4a8","dweb:/ipfs/QmfSLbvyF6bDWCS8WTMDz1K3EXMbSbcgTvoK2zNv5fXwKz"],"license":"GPL-2.0-or-later"}},"version":1},"id":343}