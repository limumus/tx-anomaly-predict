{"abi":[],"bytecode":{"object":"0x60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220cd56caf5b3712455f47553e0496ab1cb33ed3f660eb96bce6428ecd5e678cc8f64736f6c634300081c0033","sourceMap":"306:9453:358:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;306:9453:358;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220cd56caf5b3712455f47553e0496ab1cb33ed3f660eb96bce6428ecd5e678cc8f64736f6c634300081c0033","sourceMap":"306:9453:358:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAX_SQRT_RATIO\":{\"details\":\"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\"},\"MAX_TICK\":{\"details\":\"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\"},\"MIN_SQRT_RATIO\":{\"details\":\"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\"},\"MIN_TICK\":{\"details\":\"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\"}},\"title\":\"Math library for computing sqrt prices from ticks and vice versa\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/2023-11/KyberSwap/libraries/TickMath.sol\":\"TickMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/test/2023-11/KyberSwap/libraries/TickMath.sol\":{\"keccak256\":\"0x39fdb90395839a0f411888ca3731faffb6290fb6b3574d831f0a48ad1f7125c4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4b761c93df3a6f1101ef183eb1a6822f437b52b447e32d4379118132fc13f6c7\",\"dweb:/ipfs/QmQd5ERbHK1prgVztK7dSwkjpjBy3mnGA1pZpoB12TnVAn\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/test/2023-11/KyberSwap/libraries/TickMath.sol":"TickMath"},"evmVersion":"cancun","libraries":{}},"sources":{"src/test/2023-11/KyberSwap/libraries/TickMath.sol":{"keccak256":"0x39fdb90395839a0f411888ca3731faffb6290fb6b3574d831f0a48ad1f7125c4","urls":["bzz-raw://4b761c93df3a6f1101ef183eb1a6822f437b52b447e32d4379118132fc13f6c7","dweb:/ipfs/QmQd5ERbHK1prgVztK7dSwkjpjBy3mnGA1pZpoB12TnVAn"],"license":"GPL-2.0-or-later"}},"version":1},"id":358}