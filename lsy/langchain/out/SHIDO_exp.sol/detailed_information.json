[
    {
        "id": "1365677",
        "args": "",
        "original_code": "    function testExploit() public {\n        DVM(dodo).flashLoan(40 * 1e18, 0, address(this), new bytes(1));\n\n        emit log_named_decimal_uint(\n            \"Attacker WBNB balance after exploit\", WBNB.balanceOf(address(this)), WBNB.decimals()\n        );\n    }\n\n",
        "description": "1. Core functions:\n   The `testExploit` function is designed to simulate an exploit scenario. It initiates a flash loan from a decentralized finance (DeFi) platform called DVM, borrowing a specific amount of tokens (40 WBNB in this case). After the loan is taken, it emits an event to log the attacker's WBNB balance after the exploit, providing visibility into the outcome of the operation.\n\n2. Security mechanism:\n   The function does not explicitly include security mechanisms like access control or reentrancy guards. However, it relies on the underlying `flashLoan` function of the DVM contract to handle the loan process securely. The use of `new bytes(1)` suggests that the function might be passing minimal or placeholder data, which could be a way to avoid unnecessary complexity or potential vulnerabilities.\n\n3. Parameter Function:\n   - `40 * 1e18`: This parameter specifies the amount of tokens to borrow in the flash loan, which is 40 WBNB (converted to its smallest unit, wei).\n   - `0`: This parameter likely represents an additional value or flag, possibly indicating no extra data or a specific loan condition.\n   - `address(this)`: This parameter specifies the recipient of the flash loan, which is the contract itself.\n   - `new bytes(1)`: This parameter is a placeholder or minimal data passed to the `flashLoan` function, possibly to fulfill a requirement without adding complexity.\n\n4. Return description:\n   The function does not return a value directly. Instead, it emits an event (`log_named_decimal_uint`) that logs the attacker's WBNB balance after the exploit. The balance is calculated by calling `WBNB.balanceOf(address(this))`, which retrieves the WBNB balance of the contract. The result is then formatted using `WBNB.decimals()` to ensure it is displayed in a human-readable format.\n\nIn summary, the `testExploit` function simulates an exploit by taking a flash loan and logging the attacker's WBNB balance afterward. It relies on the DVM contract's `flashLoan` function for the loan process and uses minimal parameters to avoid unnecessary complexity. The function does not return a value but instead emits an event to provide visibility into the outcome.",
        "return_value": "Returned"
    },
    {
        "id": "1351935",
        "args": "40000000000000000000 [4e19], 0, ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0x00",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "1349236",
        "args": "40000000000000000000 [4e19], 0, ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0x00",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "29962",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 40000000000000000000 [4e19]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "1290348",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 40000000000000000000 [4e19], 0, 0x00",
        "original_code": "    function DPPFlashLoanCall(address sender, uint256 baseAmount, uint256 quoteAmount, bytes calldata data) external {\n        WBNBToSHIDOINU();\n        LockAndClaimToken();\n        SHIDOToWBNB();\n\n        WBNB.transfer(dodo, baseAmount);\n    }\n\n",
        "description": "1. **Core functions:**  \n   The `DPPFlashLoanCall` function is designed to handle a flash loan operation. It performs three main actions: converting WBNB to SHIDOINU, locking and claiming tokens, and converting SHIDOINU back to WBNB. Finally, it transfers a specified amount of WBNB to the `dodo` address. This function is likely part of a decentralized finance (DeFi) protocol that facilitates token swaps and flash loans.\n\n2. **Security mechanism:**  \n   The function uses the `external` modifier, which restricts its call to external contracts or accounts, preventing internal calls. However, there are no explicit security checks or access controls (like `onlyOwner` or `require` statements) in this code. This could pose risks if the function is not properly guarded against unauthorized access or misuse.\n\n3. **Parameter Function:**  \n   - `sender`: Represents the address initiating the flash loan.  \n   - `baseAmount`: Specifies the amount of WBNB to be transferred to the `dodo` address.  \n   - `quoteAmount`: Likely represents the amount of another token involved in the operation, though it is not directly used in this function.  \n   - `data`: Contains additional information or instructions for the flash loan, but it is not utilized in this function.  \n\n4. **Return description:**  \n   The function does not return any value. Its primary purpose is to execute a series of token operations and transfer WBNB to the `dodo` address.  \n\n**In summary,**  \nThe `DPPFlashLoanCall` function facilitates a flash loan by converting tokens and transferring WBNB. It lacks explicit security measures, which could be a concern. The parameters define the transaction details, but the function does not return any value.",
        "return_value": "Returned"
    },
    {
        "id": "24420",
        "args": "Router: [0x10ED43C718714eb63d5aA57B78B54704E256024E], 100000000000000000000000 [1e23]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "254714",
        "args": "39000000000000000000 [3.9e19], 0, [0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c, 0x733Af324146DCfe743515D8D77DC25140a07F9e0], FeeFreeRouter: [0x9869674E80D632F93c338bd398408273D20a6C8e], 1687561237 [1.687e9]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "8948",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0xd0A167d1973cA8f76723C6FEa1E6f608DBC1d464, 39000000000000000000 [3.9e19]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "54398",
        "args": "FeeFreeRouter: [0x9869674E80D632F93c338bd398408273D20a6C8e]",
        "original_code": null,
        "description": null,
        "return_value": "0"
    },
    {
        "id": "2893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "21978525030516602360 [2.197e19], 43019681436106797846 [4.301e19], 1687561189 [1.687e9]"
    },
    {
        "id": "534",
        "args": "0xd0A167d1973cA8f76723C6FEa1E6f608DBC1d464",
        "original_code": null,
        "description": null,
        "return_value": "82019681436106797846 [8.201e19]"
    },
    {
        "id": "161351",
        "args": "10436972685676390697 [1.043e19], 0, FeeFreeRouter: [0x9869674E80D632F93c338bd398408273D20a6C8e], 0x",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "113107",
        "args": "FeeFreeRouter: [0x9869674E80D632F93c338bd398408273D20a6C8e], 10436972685676390697 [1.043e19]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "14398",
        "args": "0xd0A167d1973cA8f76723C6FEa1E6f608DBC1d464",
        "original_code": null,
        "description": null,
        "return_value": "11541552344840211663 [1.154e19]"
    },
    {
        "id": "534",
        "args": "0xd0A167d1973cA8f76723C6FEa1E6f608DBC1d464",
        "original_code": null,
        "description": null,
        "return_value": "82019681436106797846 [8.201e19]"
    },
    {
        "id": "14398",
        "args": "FeeFreeRouter: [0x9869674E80D632F93c338bd398408273D20a6C8e]",
        "original_code": null,
        "description": null,
        "return_value": "10436972685676390697 [1.043e19]"
    },
    {
        "id": "9195",
        "args": "10000000000000000 [1e16]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "55",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "173049",
        "args": "10000000000000000 [1e16], 0, [0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c, 0x733Af324146DCfe743515D8D77DC25140a07F9e0], ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 1687561237 [1.687e9]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "4148",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0xd0A167d1973cA8f76723C6FEa1E6f608DBC1d464, 10000000000000000 [1e16]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "18398",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "0"
    },
    {
        "id": "893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "11541552344840211663 [1.154e19], 82019681436106797846 [8.201e19], 1687561237 [1.687e9]"
    },
    {
        "id": "534",
        "args": "0xd0A167d1973cA8f76723C6FEa1E6f608DBC1d464",
        "original_code": null,
        "description": null,
        "return_value": "82029681436106797846 [8.202e19]"
    },
    {
        "id": "127486",
        "args": "1403480029560454 [1.403e15], 0, ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0x",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "98526",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 1403480029560454 [1.403e15]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "14398",
        "args": "0xd0A167d1973cA8f76723C6FEa1E6f608DBC1d464",
        "original_code": null,
        "description": null,
        "return_value": "11540148864810651209 [1.154e19]"
    },
    {
        "id": "534",
        "args": "0xd0A167d1973cA8f76723C6FEa1E6f608DBC1d464",
        "original_code": null,
        "description": null,
        "return_value": "82029681436106797846 [8.202e19]"
    },
    {
        "id": "14398",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "1403480029561 [1.403e12]"
    },
    {
        "id": "24683",
        "args": "FeeFreeRouter: [0x9869674E80D632F93c338bd398408273D20a6C8e], 1000000000000000000000000000 [1e27]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "416761",
        "args": "SHIDOINU: [0x733Af324146DCfe743515D8D77DC25140a07F9e0], 1000000000 [1e9], 1, 1, ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 1687561237 [1.687e9]",
        "original_code": "    function addLiquidityETH(\n        address token,\n        uint256 amountTokenDesired,\n        uint256 amountTokenMin,\n        uint256 amountETHMin,\n        address to,\n        uint256 deadline\n    )\n        external\n        payable\n        returns (\n            uint256 amountToken,\n            uint256 amountETH,\n            uint256 liquidity\n        );\n\n",
        "description": "1. **Core functions**:  \n   The `addLiquidityETH` function is designed to add liquidity to a decentralized exchange (DEX) pool. It allows users to contribute both a specific token and Ethereum (ETH) to the pool. The function ensures that the user provides the desired amounts of the token and ETH, while also setting minimum thresholds to protect against unfavorable price changes during the transaction.\n\n2. **Security mechanism**:  \n   - `external`: The function can only be called from outside the contract, ensuring it is not used internally in unintended ways.  \n   - `payable`: This modifier allows the function to receive ETH as part of the transaction, which is necessary for adding liquidity.  \n   - `deadline`: A timestamp parameter ensures the transaction is executed within a specific time frame, preventing delays that could lead to unfavorable conditions.  \n   - Minimum amount checks (`amountTokenMin` and `amountETHMin`): These parameters protect users by ensuring the transaction only proceeds if the amounts of tokens and ETH meet the specified minimums.\n\n3. **Parameter Function**:  \n   - `token`: The address of the token the user wants to add to the liquidity pool.  \n   - `amountTokenDesired`: The maximum amount of the token the user is willing to contribute.  \n   - `amountTokenMin`: The minimum amount of the token the user will accept in case of price fluctuations.  \n   - `amountETHMin`: The minimum amount of ETH the user will accept in case of price fluctuations.  \n   - `to`: The address that will receive the liquidity tokens representing the user's share in the pool.  \n   - `deadline`: The latest time by which the transaction must be completed to avoid unfavorable conditions.\n\n4. **Return description**:  \n   The function returns three values:  \n   - `amountToken`: The actual amount of the token added to the liquidity pool.  \n   - `amountETH`: The actual amount of ETH added to the liquidity pool.  \n   - `liquidity`: The amount of liquidity tokens minted and sent to the user, representing their share in the pool. These values are calculated based on the provided amounts and the current state of the pool.\n\n**In summary**, the `addLiquidityETH` function enables users to add both a token and ETH to a liquidity pool, with safeguards to protect against price changes and ensure timely execution. It returns the actual amounts contributed and the liquidity tokens representing the user's share in the pool.",
        "return_value": "1000000000 [1e9], 629029616485 [6.29e11], 24435333142 [2.443e10]"
    },
    {
        "id": "60806",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], FeeFreeRouter: [0x9869674E80D632F93c338bd398408273D20a6C8e], 1000000000 [1e9]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "2785",
        "args": "FeeFreeRouter: [0x9869674E80D632F93c338bd398408273D20a6C8e], 0xC9a0F685F39d05D835c369036251ee3aEaaF3c47",
        "original_code": null,
        "description": null,
        "return_value": "115792089237316195423570985008687907853269984665640564039457235799758663681750 [1.157e77]"
    },
    {
        "id": "235368",
        "args": "SHIDOINU: [0x733Af324146DCfe743515D8D77DC25140a07F9e0], 1000000000 [1e9], 1, 1, ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 1687561237 [1.687e9]",
        "original_code": null,
        "description": null,
        "return_value": "1000000000 [1e9], 629029616485 [6.29e11], 24435333142 [2.443e10]"
    },
    {
        "id": "2644",
        "args": "SHIDOINU: [0x733Af324146DCfe743515D8D77DC25140a07F9e0], WBNB: [0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c]",
        "original_code": null,
        "description": null,
        "return_value": "0xa8aeeA8105F4A10a96fCa539697bFA6F762d0F64"
    },
    {
        "id": "2540",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "77600061351417972 [7.76e16], 48812736831150400422 [4.881e19], 1687543480 [1.687e9]"
    },
    {
        "id": "70208",
        "args": "FeeFreeRouter: [0x9869674E80D632F93c338bd398408273D20a6C8e], 0xa8aeeA8105F4A10a96fCa539697bFA6F762d0F64, 1000000000 [1e9]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "23974",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "8062",
        "args": "0xa8aeeA8105F4A10a96fCa539697bFA6F762d0F64, 629029616485 [6.29e11]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "101090",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "24435333142 [2.443e10]"
    },
    {
        "id": "14398",
        "args": "0xa8aeeA8105F4A10a96fCa539697bFA6F762d0F64",
        "original_code": null,
        "description": null,
        "return_value": "77600062351417972 [7.76e16]"
    },
    {
        "id": "534",
        "args": "0xa8aeeA8105F4A10a96fCa539697bFA6F762d0F64",
        "original_code": null,
        "description": null,
        "return_value": "48812737460180016907 [4.881e19]"
    },
    {
        "id": "2338",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "0x1551EAC5D2EDAa634f713A526866Ad83b82b5209"
    },
    {
        "id": "2381",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "0x0000000000000000000000001551eac5d2edaa634f713a526866ad83b82b5209"
    },
    {
        "id": "55",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "644",
        "args": "SHIDOINU: [0x733Af324146DCfe743515D8D77DC25140a07F9e0], WBNB: [0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c]",
        "original_code": null,
        "description": null,
        "return_value": "0xa8aeeA8105F4A10a96fCa539697bFA6F762d0F64"
    },
    {
        "id": "14398",
        "args": "FeeFreeRouter: [0x9869674E80D632F93c338bd398408273D20a6C8e]",
        "original_code": null,
        "description": null,
        "return_value": "10436972685676390697 [1.043e19]"
    },
    {
        "id": "57909",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 10436972685676390697 [1.043e19]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "55",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "24683",
        "args": "ShidoLock: [0xaF0CA21363219C8f3D8050E7B61Bb5f04e02F8D4], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "111575",
        "args": "",
        "original_code": "    function lockTokens() external {\n        uint256 amount = IERC20(shidoV1).balanceOf(msg.sender);\n\n        if (amount == 0) revert ZeroAmount();\n\n        userShidoV1[msg.sender] += amount;\n\n        IERC20(shidoV1).transferFrom(msg.sender, rewardWallet, amount);\n    }\n\n",
        "description": "1. **Core functions**:  \n   The `lockTokens` function is designed to allow users to lock their tokens. It checks the balance of the user's tokens, ensures the amount is not zero, updates the user's locked token balance, and then transfers the tokens to a specified reward wallet.\n\n2. **Security mechanism**:  \n   - The function uses the `external` modifier, meaning it can only be called from outside the contract, ensuring internal functions cannot trigger it.  \n   - It includes a check to revert the transaction if the user's token balance is zero (`if (amount == 0) revert ZeroAmount();`), preventing invalid operations.  \n   - The `transferFrom` function ensures that the tokens are securely transferred from the user to the reward wallet, enforcing proper token movement.  \n\n3. **Parameter Function**:  \n   The function does not take any explicit parameters. Instead, it relies on the `msg.sender` value, which represents the address of the user calling the function. This ensures the operation is tied to the specific user's token balance and actions.  \n\n4. **Return description**:  \n   The function does not return any value. Its purpose is to perform the locking and transfer of tokens, and it either completes successfully or reverts if the user has no tokens to lock.  \n\n**In summary**, the `lockTokens` function securely locks a user's tokens by checking their balance, updating their locked amount, and transferring the tokens to a reward wallet. It includes safeguards to prevent invalid operations and ensures the process is tied to the user calling the function.",
        "return_value": "Returned"
    },
    {
        "id": "14398",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "10436974088156420258 [1.043e19]"
    },
    {
        "id": "69606",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0x7ef6E527969054afbc0980E00C51D2E645b4A5ef, 10436974088156420258 [1.043e19]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "82751",
        "args": "",
        "original_code": "    function claimTokens() external {\n        if (block.timestamp < lockTimestamp) revert WaitNotOver();\n\n        uint256 amount = userShidoV1[msg.sender] * 10 ** 9;\n\n        if (amount == 0) revert ZeroAmount();\n\n        userShidoV1[msg.sender] = 0;\n\n        userShidoV2[msg.sender] += amount;\n\n        IERC20(shidoV2).transferFrom(rewardWallet, msg.sender, amount);\n    }\n}\n",
        "description": "1. Core functions:  \nThe `claimTokens` function allows users to claim their tokens from a specific wallet. It checks if the current time is past a set lock time, calculates the amount of tokens the user is eligible to receive, and then transfers those tokens from a reward wallet to the user's account. It also updates the user's token balances in the system.\n\n2. Security mechanism:  \n- The function uses `external`, meaning it can only be called from outside the contract, ensuring internal logic is protected.  \n- It includes a check (`if (block.timestamp < lockTimestamp)`) to ensure users cannot claim tokens before the lock time has passed.  \n- It verifies that the calculated token amount is not zero (`if (amount == 0)`), preventing unnecessary or invalid transactions.  \n- The function updates the user's token balances before transferring tokens, ensuring accurate record-keeping.  \n\n3. Parameter Function:  \nThe function does not take any parameters directly. Instead, it relies on the `msg.sender` value, which represents the address of the user calling the function. This ensures the function operates on the correct user's data.  \n\n4. Return description:  \nThe function does not return any value. Instead, it performs actions: it updates the user's token balances and transfers tokens from the reward wallet to the user's address.  \n\nIn summary, the `claimTokens` function allows users to claim their tokens after a specific lock time, ensures security through time and amount checks, and updates the system's records before transferring tokens.",
        "return_value": "Returned"
    },
    {
        "id": "52555",
        "args": "0x7ef6E527969054afbc0980E00C51D2E645b4A5ef, ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 10436974088156420258000000000 [1.043e28]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "24690",
        "args": "Router: [0x10ED43C718714eb63d5aA57B78B54704E256024E], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "624",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "10436974088156420258000000000 [1.043e28]"
    },
    {
        "id": "94438",
        "args": "10436974088156420258000000000 [1.043e28], 0, [0xa963eE460Cf4b474c35ded8fFF91c4eC011FB640, 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c], ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 1687561237 [1.687e9]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "37679",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0x0fb0dA54b6eF183fB4b67BFe01af44e06D576Ef3, 10436974088156420258000000000 [1.043e28]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "534",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "980000000000000000 [9.8e17]"
    },
    {
        "id": "2893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "1638814202042634346612419124 [1.638e27], 1193802448178091070023 [1.193e21], 1687560670 [1.687e9]"
    },
    {
        "id": "624",
        "args": "0x0fb0dA54b6eF183fB4b67BFe01af44e06D576Ef3",
        "original_code": null,
        "description": null,
        "return_value": "11032090881383412578812419124 [1.103e28]"
    },
    {
        "id": "42532",
        "args": "0, 1016085114464703755854 [1.016e21], ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0x",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "8062",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 1016085114464703755854 [1.016e21]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "624",
        "args": "0x0fb0dA54b6eF183fB4b67BFe01af44e06D576Ef3",
        "original_code": null,
        "description": null,
        "return_value": "11032090881383412578812419124 [1.103e28]"
    },
    {
        "id": "534",
        "args": "0x0fb0dA54b6eF183fB4b67BFe01af44e06D576Ef3",
        "original_code": null,
        "description": null,
        "return_value": "177717333713387314169 [1.777e20]"
    },
    {
        "id": "534",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "1017065114464703755854 [1.017e21]"
    },
    {
        "id": "3262",
        "args": "dodo: [0x81917eb96b397dFb1C6000d28A5bc08c0f05fC1d], 40000000000000000000 [4e19]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "534",
        "args": "dodo: [0x81917eb96b397dFb1C6000d28A5bc08c0f05fC1d]",
        "original_code": null,
        "description": null,
        "return_value": "951818229414455731762 [9.518e20]"
    },
    {
        "id": "2531",
        "args": "dodo: [0x81917eb96b397dFb1C6000d28A5bc08c0f05fC1d]",
        "original_code": null,
        "description": null,
        "return_value": "223537322073875815650524 [2.235e23]"
    },
    {
        "id": "534",
        "args": "dodo: [0x81917eb96b397dFb1C6000d28A5bc08c0f05fC1d]",
        "original_code": null,
        "description": null,
        "return_value": "951818229414455731762 [9.518e20]"
    },
    {
        "id": "531",
        "args": "dodo: [0x81917eb96b397dFb1C6000d28A5bc08c0f05fC1d]",
        "original_code": null,
        "description": null,
        "return_value": "223537322073875815650524 [2.235e23]"
    },
    {
        "id": "534",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "977065114464703755854 [9.77e20]"
    },
    {
        "id": "2444",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "18"
    }
]