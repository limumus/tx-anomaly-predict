[
    {
        "id": "1006493",
        "args": "",
        "original_code": "    function testExploit() external {\n        deal(address(WBNB), address(this), 0.01 ether);\n        WBNB.approve(address(Router), type(uint256).max);\n        FFIST.approve(address(Router), type(uint256).max);\n        WBNBToFFIST();\n        pairReserveManipulation();\n        FFISTToWBNB();\n\n        emit log_named_decimal_uint(\n            \"Attacker WBNB balance after exploit\", WBNB.balanceOf(address(this)), WBNB.decimals()\n        );\n    }\n\n",
        "description": "1. Core functions:\n   The `testExploit` function is designed to simulate an attack or exploit scenario in a decentralized finance (DeFi) environment. It performs a series of steps to manipulate token balances and reserves. First, it allocates a small amount of WBNB (Wrapped Binance Coin) to the contract's address. Then, it approves the Router contract to spend unlimited amounts of WBNB and FFIST tokens on behalf of the contract. After that, it executes two main actions: converting WBNB to FFIST and manipulating the reserves of a token pair. Finally, it converts the manipulated FFIST back to WBNB and logs the attacker's WBNB balance after the exploit.\n\n2. Security mechanism:\n   The function includes a few key security measures. The `deal` function is used to simulate the allocation of WBNB to the contract, which is a controlled environment for testing. The `approve` function is used to grant the Router contract permission to spend WBNB and FFIST tokens, but it sets the allowance to the maximum possible value (`type(uint256).max`), which could be risky in a real-world scenario. The function also emits an event (`log_named_decimal_uint`) to log the attacker's WBNB balance after the exploit, which can be useful for monitoring and auditing purposes.\n\n3. Parameter Function:\n   The `testExploit` function does not take any parameters. However, it interacts with several external contracts and functions, such as `WBNB`, `Router`, and `FFIST`. These interactions are hardcoded within the function, meaning the function is specifically designed to work with these contracts and tokens.\n\n4. Return description:\n   The function does not return any value. Instead, it performs a series of actions and emits an event to log the attacker's WBNB balance after the exploit. The balance is calculated by calling `WBNB.balanceOf(address(this))`, which retrieves the WBNB balance of the contract's address. The balance is then logged with a descriptive message, including the number of decimal places specified by `WBNB.decimals()`.\n\nIn summary, the `testExploit` function simulates an exploit scenario by manipulating token balances and reserves, using a series of predefined steps. It includes some security measures, such as logging the final balance, but also contains potential risks, such as granting unlimited spending allowances. The function does not take any parameters and does not return a value, but it interacts with external contracts and emits an event to log the results.",
        "return_value": "Returned"
    },
    {
        "id": "2534",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": "    function balanceOf(address account) public view override returns (uint256) {\n        uint256 balance = _balances[account];\n        return balance;\n    }\n\n",
        "description": "1. **Core functions:**  \n   This function is designed to check and return the balance of a specific account. It looks up the balance associated with the given account address and provides that value as the result.\n\n2. **Security mechanism:**  \n   The function uses the `public` and `view` modifiers. The `public` modifier allows the function to be called from outside the contract, while the `view` modifier ensures that the function does not modify the state of the contract, making it safe to call without any risk of changing data.\n\n3. **Parameter Function:**  \n   The function takes one parameter, `account`, which is an address. This address represents the account whose balance is being queried. The function uses this address to look up the corresponding balance in the contract's storage.\n\n4. **Return description:**  \n   The function returns a `uint256` value, which represents the balance of the specified account. It retrieves this balance directly from the `_balances` mapping, which stores the balances of all accounts in the contract.\n\nIn summary, this function is a simple and secure way to check the balance of a specific account in the contract, ensuring no changes are made to the contract's state during the process.",
        "return_value": "0"
    },
    {
        "id": "0",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "534",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "0"
    },
    {
        "id": "0",
        "args": "WBNB: [0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c]",
        "original_code": null,
        "description": null,
        "return_value": "[0x1da434b76eba4736d6e760bfd78cbf883a0776ee1666a9157f99ab1b97923a3c], []"
    },
    {
        "id": "0",
        "args": "WBNB: [0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c], 0x1da434b76eba4736d6e760bfd78cbf883a0776ee1666a9157f99ab1b97923a3c",
        "original_code": null,
        "description": null,
        "return_value": "0x0000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "id": "0",
        "args": "WBNB: [0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c], 0x1da434b76eba4736d6e760bfd78cbf883a0776ee1666a9157f99ab1b97923a3c",
        "original_code": null,
        "description": null,
        "return_value": "0x0000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "id": "534",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "0"
    },
    {
        "id": "0",
        "args": "WBNB: [0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c], 0x1da434b76eba4736d6e760bfd78cbf883a0776ee1666a9157f99ab1b97923a3c, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "534",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77]"
    },
    {
        "id": "0",
        "args": "WBNB: [0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c], 0x1da434b76eba4736d6e760bfd78cbf883a0776ee1666a9157f99ab1b97923a3c, 0x0000000000000000000000000000000000000000000000000000000000000000",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "0",
        "args": "WBNB: [0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c], 0x1da434b76eba4736d6e760bfd78cbf883a0776ee1666a9157f99ab1b97923a3c",
        "original_code": null,
        "description": null,
        "return_value": "0x0000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "id": "0",
        "args": "WBNB: [0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c], 0x1da434b76eba4736d6e760bfd78cbf883a0776ee1666a9157f99ab1b97923a3c, 0x000000000000000000000000000000000000000000000000002386f26fc10000",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "534",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "10000000000000000 [1e16]"
    },
    {
        "id": "24420",
        "args": "Router: [0x10ED43C718714eb63d5aA57B78B54704E256024E], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77]",
        "original_code": "    function approve(address spender, uint value) external returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n",
        "description": "1. **Core functions**:  \nThe `approve` function allows the owner of tokens (the caller) to authorize another address (`spender`) to spend a specific amount of tokens (`value`) on their behalf. This is a common feature in token contracts to enable delegated spending without transferring ownership.\n\n2. **Security mechanism**:  \n- The function uses the `external` modifier, meaning it can only be called from outside the contract, ensuring it cannot be invoked internally.  \n- It relies on the `msg.sender` to identify the caller, ensuring only the token owner can approve spending.  \n- The function calls an internal `_approve` function, which likely includes additional checks to prevent unauthorized or invalid approvals.\n\n3. **Parameter Function**:  \n- `spender`: The address of the account that is being authorized to spend tokens.  \n- `value`: The maximum amount of tokens the `spender` is allowed to spend.  \n\n4. **Return description**:  \nThe function always returns `true` to indicate that the approval operation was successful. This is a standard practice in ERC-20 token contracts to confirm the action was executed as intended.  \n\n**In summary**, the `approve` function enables token owners to delegate spending rights to another address, ensuring secure and controlled token management.",
        "return_value": "true"
    },
    {
        "id": "24586",
        "args": "Router: [0x10ED43C718714eb63d5aA57B78B54704E256024E], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "534",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "10000000000000000 [1e16]"
    },
    {
        "id": "301837",
        "args": "10000000000000000 [1e16], 0, [0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c, 0x55d398326f99059fF775485246999027B3197955, 0x80121DA952A74c06adc1d7f85A237089b57AF347], ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 1689811623 [1.689e9]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "8225",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE, 10000000000000000 [1e16]",
        "original_code": "    function transferFrom(address from, address to, uint value) external returns (bool) {\n        if (allowance[from][msg.sender] != uint(-1)) {\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\n        }\n        _transfer(from, to, value);\n        return true;\n    }\n\n",
        "description": "1. Core functions:  \nThe `transferFrom` function is designed to move a specified amount of tokens from one address (`from`) to another address (`to`). It is typically used when a token holder allows another party (like a smart contract or another user) to manage and transfer tokens on their behalf. The function ensures that the transfer is authorized by checking the allowance set by the token owner.\n\n2. Security mechanism:  \nThe function includes a key security check to verify that the caller (`msg.sender`) has sufficient allowance to transfer the specified amount of tokens. If the allowance is not set to the maximum value (`uint(-1)`), the function reduces the allowance by the transferred amount to prevent unauthorized or excessive transfers. This ensures that only approved parties can transfer tokens within the allowed limit.\n\n3. Parameter Function:  \n- `from`: The address from which tokens are being transferred.  \n- `to`: The address receiving the tokens.  \n- `value`: The amount of tokens to be transferred.  \n\nThese parameters define the source, destination, and quantity of the token transfer, ensuring the function operates correctly and securely.\n\n4. Return description:  \nThe function returns `true` to indicate that the transfer was successful. This is a standard practice in token transfer functions to confirm the operation's completion without providing additional data.\n\nIn summary,  \nThe `transferFrom` function securely transfers tokens from one address to another, ensuring the caller has proper authorization. It reduces the allowance if necessary and confirms the transfer's success by returning `true`.",
        "return_value": "true"
    },
    {
        "id": "2648",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "0"
    },
    {
        "id": "2893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "18563034786420195585706749 [1.856e25], 76884375311124930356713 [7.688e22], 1689811623 [1.689e9]"
    },
    {
        "id": "534",
        "args": "0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE",
        "original_code": null,
        "description": null,
        "return_value": "76884385311124930356713 [7.688e22]"
    },
    {
        "id": "39264",
        "args": "2408372926510967280 [2.408e18], 0, 0x7a3Adf2F6B239E64dAB1738c695Cf48155b6e152, 0x",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "12871",
        "args": "0x7a3Adf2F6B239E64dAB1738c695Cf48155b6e152, 2408372926510967280 [2.408e18]",
        "original_code": "    function transfer(address to, uint value) external returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function transferFrom(address from, address to, uint value) external returns (bool) {\n        if (allowance[from][msg.sender] != uint(-1)) {\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\n        }\n        _transfer(from, to, value);\n        return true;\n    }\n\n",
        "description": "1. **Core functions:**  \n   - The `transfer` function allows the sender to move a specified amount of tokens (`value`) to another address (`to`). It uses an internal `_transfer` function to handle the actual transfer.  \n   - The `transferFrom` function enables a third party (like a contract or another user) to transfer tokens on behalf of the token owner (`from`) to another address (`to`). It checks and adjusts the allowance (permission) granted to the caller before performing the transfer.\n\n2. **Security mechanism:**  \n   - Both functions are marked as `external`, meaning they can only be called from outside the contract, ensuring internal logic is not directly exposed.  \n   - The `transferFrom` function includes a check to ensure the caller has sufficient allowance to transfer the specified amount. If the allowance is not unlimited (`uint(-1)`), it reduces the allowance by the transferred amount to prevent overuse.  \n   - The use of `_transfer` (an internal function) ensures the actual transfer logic is centralized and consistent across both functions.\n\n3. **Parameter Function:**  \n   - In `transfer`, `to` is the recipient's address, and `value` is the number of tokens to send.  \n   - In `transferFrom`, `from` is the address of the token owner, `to` is the recipient's address, and `value` is the number of tokens to transfer.  \n\n4. **Return description:**  \n   - Both functions return `true` to indicate the transfer was successful. This is a standard practice in ERC-20 token contracts to confirm the operation's completion.  \n\n**In summary,**  \nThe `transfer` function allows direct token transfers, while `transferFrom` enables delegated transfers with allowance checks. Both functions ensure secure and controlled token movements and return `true` to confirm success.",
        "return_value": "true"
    },
    {
        "id": "531",
        "args": "0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE",
        "original_code": null,
        "description": null,
        "return_value": "18563032378047269074739469 [1.856e25]"
    },
    {
        "id": "534",
        "args": "0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE",
        "original_code": null,
        "description": null,
        "return_value": "76884385311124930356713 [7.688e22]"
    },
    {
        "id": "2893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "55420690999928645538098 [5.542e22], 5696780254392656566076 [5.696e21], 1689648777 [1.689e9]"
    },
    {
        "id": "531",
        "args": "0x7a3Adf2F6B239E64dAB1738c695Cf48155b6e152",
        "original_code": null,
        "description": null,
        "return_value": "55423099372855156505378 [5.542e22]"
    },
    {
        "id": "227888",
        "args": "0, 246930847358672782 [2.469e17], ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0x",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "193397",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 246930847358672782 [2.469e17]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "55420690999928645538098 [5.542e22], 5696780254392656566076 [5.696e21], 1689648777 [1.689e9]"
    },
    {
        "id": "2358",
        "args": "",
        "original_code": "    function decimals() external view override returns (uint8) {\n        return _decimals;\n    }\n\n",
        "description": "1. Core functions:  \nThis function is designed to provide information about the number of decimal places used in the token's representation. It helps external systems or users understand how to interpret the token's value, especially when dealing with fractional amounts.\n\n2. Security mechanism:  \nThe function is marked as `external`, meaning it can only be called from outside the contract, and `view`, which ensures it does not modify the contract's state. The `override` keyword indicates that this function is overriding a function from a parent contract or interface, ensuring consistency with expected behavior.\n\n3. Parameter Function:  \nThis function does not take any parameters. It simply retrieves and returns the value of `_decimals`, which is a predefined variable in the contract.\n\n4. Return description:  \nThe function returns the value of `_decimals`, which is a fixed number representing the number of decimal places for the token. This value is directly fetched from the contract's storage and returned without any additional calculations.\n\nIn summary,  \nThis function is a straightforward utility that returns the number of decimal places used by the token, ensuring clarity for external interactions. It is secure, read-only, and does not require any input parameters.",
        "return_value": "18"
    },
    {
        "id": "893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "55420690999928645538098 [5.542e22], 5696780254392656566076 [5.696e21], 1689648777 [1.689e9]"
    },
    {
        "id": "531",
        "args": "0x7a3Adf2F6B239E64dAB1738c695Cf48155b6e152",
        "original_code": null,
        "description": null,
        "return_value": "55423099372855156505378 [5.542e22]"
    },
    {
        "id": "2439",
        "args": "",
        "original_code": "    function totalSupply() public view override returns (uint256) {\n        return _tTotal;\n    }\n\n",
        "description": "1. **Core functions:**  \n   The `totalSupply` function is designed to provide the total number of tokens that exist in the system. It acts as a simple way to check the overall supply of tokens at any given time.\n\n2. **Security mechanism:**  \n   The function uses the `public` and `view` modifiers. The `public` modifier allows anyone to call this function, while the `view` modifier ensures that the function does not modify the state of the contract, making it read-only and safe to use.\n\n3. **Parameter Function:**  \n   This function does not take any parameters. It simply retrieves and returns the value of `_tTotal`, which represents the total supply of tokens.\n\n4. **Return description:**  \n   The function returns the value of `_tTotal`, which is a variable storing the total number of tokens in the system. The calculation logic is straightforward: it directly fetches and returns this pre-stored value.\n\nIn summary, the `totalSupply` function is a simple, read-only function that provides the total number of tokens in the system by returning the value of `_tTotal`. It is designed to be safe and accessible to anyone.",
        "return_value": "17710680294501979468004 [1.771e22]"
    },
    {
        "id": "2531",
        "args": "FFIST: [0x80121DA952A74c06adc1d7f85A237089b57AF347]",
        "original_code": null,
        "description": null,
        "return_value": "63535092129126198137 [6.353e19]"
    },
    {
        "id": "531",
        "args": "0x7a3Adf2F6B239E64dAB1738c695Cf48155b6e152",
        "original_code": null,
        "description": null,
        "return_value": "55423099372855156505378 [5.542e22]"
    },
    {
        "id": "648",
        "args": "0x7a3Adf2F6B239E64dAB1738c695Cf48155b6e152",
        "original_code": null,
        "description": null,
        "return_value": "5696533323545297893294 [5.696e21]"
    },
    {
        "id": "648",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "237053613464325871 [2.37e17]"
    },
    {
        "id": "448",
        "args": "",
        "original_code": "",
        "description": "",
        "return_value": "0x0370e8e41DB22a02e07b5A224F7D7e5D31EEffcf"
    },
    {
        "id": "92283",
        "args": "0x06E30f909793185896e35D2Dfb43b90a4F670A1B, 0",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "55423099372855156505378 [5.542e22], 5696533323545297893294 [5.696e21], 1689811623 [1.689e9]"
    },
    {
        "id": "358",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "18"
    },
    {
        "id": "439",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "17710680294501979468004 [1.771e22]"
    },
    {
        "id": "531",
        "args": "FFIST: [0x80121DA952A74c06adc1d7f85A237089b57AF347]",
        "original_code": null,
        "description": null,
        "return_value": "63535092129126198137 [6.353e19]"
    },
    {
        "id": "9091",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "531",
        "args": "0x7a3Adf2F6B239E64dAB1738c695Cf48155b6e152",
        "original_code": null,
        "description": null,
        "return_value": "55423099372855156505378 [5.542e22]"
    },
    {
        "id": "648",
        "args": "0x7a3Adf2F6B239E64dAB1738c695Cf48155b6e152",
        "original_code": null,
        "description": null,
        "return_value": "1"
    },
    {
        "id": "648",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "237053613464325871 [2.37e17]"
    },
    {
        "id": "246332",
        "args": "237053613464325871 [2.37e17], 0, [0x80121DA952A74c06adc1d7f85A237089b57AF347, 0x55d398326f99059fF775485246999027B3197955, 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c], ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 1689811623 [1.689e9]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "174253",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0x7a3Adf2F6B239E64dAB1738c695Cf48155b6e152, 237053613464325871 [2.37e17]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "55423099372855156505378 [5.542e22], 1, 1689811623 [1.689e9]"
    },
    {
        "id": "358",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "18"
    },
    {
        "id": "893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "55423099372855156505378 [5.542e22], 1, 1689811623 [1.689e9]"
    },
    {
        "id": "531",
        "args": "0x7a3Adf2F6B239E64dAB1738c695Cf48155b6e152",
        "original_code": null,
        "description": null,
        "return_value": "55423099372855156505378 [5.542e22]"
    },
    {
        "id": "439",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "17710680294501979468004 [1.771e22]"
    },
    {
        "id": "531",
        "args": "FFIST: [0x80121DA952A74c06adc1d7f85A237089b57AF347]",
        "original_code": null,
        "description": null,
        "return_value": "63535092129126198137 [6.353e19]"
    },
    {
        "id": "534",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "0"
    },
    {
        "id": "893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "55423099372855156505378 [5.542e22], 1, 1689811623 [1.689e9]"
    },
    {
        "id": "648",
        "args": "0x7a3Adf2F6B239E64dAB1738c695Cf48155b6e152",
        "original_code": null,
        "description": null,
        "return_value": "227571241354283911 [2.275e17]"
    },
    {
        "id": "18478",
        "args": "55423099372855156261225 [5.542e22], 0, 0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE, 0x",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "3271",
        "args": "0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE, 55423099372855156261225 [5.542e22]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "531",
        "args": "0x7a3Adf2F6B239E64dAB1738c695Cf48155b6e152",
        "original_code": null,
        "description": null,
        "return_value": "244153 [2.441e5]"
    },
    {
        "id": "648",
        "args": "0x7a3Adf2F6B239E64dAB1738c695Cf48155b6e152",
        "original_code": null,
        "description": null,
        "return_value": "227571241354283911 [2.275e17]"
    },
    {
        "id": "893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "18563032378047269074739469 [1.856e25], 76884385311124930356713 [7.688e22], 1689811623 [1.689e9]"
    },
    {
        "id": "531",
        "args": "0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE",
        "original_code": null,
        "description": null,
        "return_value": "18618455477420124231000694 [1.861e25]"
    },
    {
        "id": "38255",
        "args": "0, 228297650015295573429 [2.282e20], ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0x",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "23162",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 228297650015295573429 [2.282e20]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "531",
        "args": "0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE",
        "original_code": null,
        "description": null,
        "return_value": "18618455477420124231000694 [1.861e25]"
    },
    {
        "id": "534",
        "args": "0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE",
        "original_code": null,
        "description": null,
        "return_value": "76656087661109634783284 [7.665e22]"
    },
    {
        "id": "534",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "228297650015295573429 [2.282e20]"
    },
    {
        "id": "534",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "228297650015295573429 [2.282e20]"
    },
    {
        "id": "2444",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "18"
    }
]